[
  {
    "idx": 150,
    "question": {
      "kor": "회사에서 기존 온프레미스 모놀리식 애플리케이션을 AWS로 마이그레이션하려고 합니다. 회사는 프런트엔드 코드와 백엔드 코드를 최대한 많이 유지하려고 합니다. 그러나 회사는 응용 프로그램을 더 작은 응용 프로그램으로 나누기를 원합니다. 다른 팀이 각 애플리케이션을 관리합니다. 이 회사는 운영 오버헤드를 최소화하는 확장성이 뛰어난 솔루션이 필요합니다.\n이러한 요구 사항을 충족하는 솔루션은 무엇입니까?",
      "eng": "A company wants to migrate its existing on-premises monolithic application to AWS. The company wants to keep as much of the front-end code and the backend code as possible. However, the company wants to break the application into smaller applications. A different team will manage each application.\nThe company needs a highly scalable solution that minimizes operational overhead.\nWhich solution will meet these requirements?"
    },
    "choices": {
      "kor": {
        "A": "AWS Lambda에서 애플리케이션을 호스팅합니다. 애플리케이션을 Amazon API Gateway와 통합합니다.",
        "B": "AWS Amplify로 애플리케이션을 호스팅합니다. AWS Lambda와 통합된 Amazon API Gateway API에 애플리케이션을 연결합니다.",
        "C": "Amazon EC2 인스턴스에서 애플리케이션을 호스팅합니다. Auto Scaling 그룹의 EC2 인스턴스를 대상으로 하는 Application Load Balancer를 설정합니다.",
        "D": "Amazon Elastic Container Service(Amazon ECS)에서 애플리케이션을 호스팅합니다. Amazon ECS를 대상으로 하는 Application Load Balancer를 설정합니다."
      },
      "eng": {
        "A": "Host the application on AWS Lambda. Integrate the application with Amazon API Gateway.",
        "B": "Host the application with AWS Amplify. Connect the application to an Amazon API Gateway API that is integrated with AWS Lambda.",
        "C": "Host the application on Amazon EC2 instances. Set up an Application Load Balancer with EC2 instances in an Auto Scaling group as targets.",
        "D": "Host the application on Amazon Elastic Container Service (Amazon ECS). Set up an Application Load Balancer with Amazon ECS as the target."
      }
    },
    "category": [
      "Container"
    ],
    "subcategory": [
      "keep the code",
      "microservice"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/86473-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "D"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 247,
    "question": {
      "kor": "회사에서 Amazon Elastic Container Service(Amazon ECS) 클러스터에 배포된 새 애플리케이션을 시작하고 ECS 작업에 Fargate 시작 유형을 사용하고 있습니다. 회사는 실행 시 애플리케이션에 대한 높은 트래픽이 예상되기 때문에 CPU 및 메모리 사용량을 모니터링하고 있습니다. 그러나 회사는 활용도가 감소할 때 비용을 절감하기를 원합니다.\n솔루션 설계자는 무엇을 추천해야 합니까?",
      "eng": "A company is launching a new application deployed on an Amazon Elastic Container Service (Amazon ECS) cluster and is using the Fargate launch type for ECS tasks. The company is monitoring CPU and memory usage because it is expecting high traffic to the application upon its launch. However, the company wants to reduce costs when utilization decreases.\nWhat should a solutions architect recommend?"
    },
    "choices": {
      "kor": {
        "A": "Amazon EC2 Auto Scaling을 사용하여 이전 트래픽 패턴을 기반으로 특정 기간에 조정합니다.",
        "B": "AWS Lambda 함수를 사용하여 Amazon CloudWatch 경보를 트리거하는 메트릭 위반을 기반으로 Amazon ECS를 확장합니다.",
        "C": "간단한 조정 정책과 함께 Amazon EC2 Auto Scaling을 사용하여 ECS 메트릭 위반이 Amazon CloudWatch 경보를 트리거할 때 조정합니다.",
        "D": "대상 추적 정책과 함께 AWS Application Auto Scaling을 사용하여 ECS 메트릭 위반이 Amazon CloudWatch 경보를 트리거할 때 조정합니다."
      },
      "eng": {
        "A": "Use Amazon EC2 Auto Scaling to scale at certain periods based on previous traffic patterns.",
        "B": "Use an AWS Lambda function to scale Amazon ECS based on metric breaches that trigger an Amazon CloudWatch alarm.",
        "C": "Use Amazon EC2 Auto Scaling with simple scaling policies to scale when ECS metric breaches trigger an Amazon CloudWatch alarm.",
        "D": "Use AWS Application Auto Scaling with target tracking policies to scale when ECS metric breaches trigger an Amazon CloudWatch alarm."
      }
    },
    "category": [
      "Container"
    ],
    "subcategory": [
      "auto scaling"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/99813-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "D"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 534,
    "question": {
      "kor": "회사는 Amazon Elastic Kubernetes Service(Amazon EKS)를 사용하여 컨테이너 애플리케이션을 실행합니다. EKS 클러스터는 Kubernetes 비밀 객체에 민감한 정보를 저장합니다. 회사는 정보가 암호화되었는지 확인하려고 합니다.\n최소한의 운영 오버헤드로 이러한 요구 사항을 충족하는 솔루션은 무엇입니까?",
      "eng": "A company uses Amazon Elastic Kubernetes Service (Amazon EKS) to run a container application. The EKS cluster stores sensitive information in the Kubernetes secrets object. The company wants to ensure that the information is encrypted.\nWhich solution will meet these requirements with the LEAST operational overhead?"
    },
    "choices": {
      "kor": {
        "A": "컨테이너 애플리케이션을 사용하여 AWS Key Management Service(AWS KMS)를 사용하여 정보를 암호화합니다.",
        "B": "AWS Key Management Service(AWS KMS)를 사용하여 EKS 클러스터에서 비밀 암호화를 활성화합니다.",
        "C": "AWS KMS(AWS Key Management Service)를 사용하여 정보를 암호화하는 AWS Lambda 함수를 구현합니다.",
        "D": "AWS Systems Manager Parameter Store를 사용하여 AWS Key Management Service(AWS KMS)를 사용하여 정보를 암호화합니다."
      },
      "eng": {
        "A": "Use the container application to encrypt the information by using AWS Key Management Service (AWS KMS).",
        "B": "Enable secrets encryption in the EKS cluster by using AWS Key Management Service (AWS KMS).",
        "C": "Implement an AWS Lambda function to encrypt the information by using AWS Key Management Service (AWS KMS).",
        "D": "Use AWS Systems Manager Parameter Store to encrypt the information by using AWS Key Management Service (AWS KMS)."
      }
    },
    "category": [
      "Container"
    ],
    "subcategory": [
      "KMS"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/121158-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "B"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 572,
    "question": {
      "kor": "회사에서 워크로드를 위해 Amazon Elastic Kubernetes Service(Amazon EKS) 클러스터를 구축하고 있습니다. Amazon EKS에 저장되는 모든 암호는 Kubernetes etcd 키-값 저장소에서 암호화되어야 합니다.\n이러한 요구 사항을 충족하는 솔루션은 무엇입니까?",
      "eng": "A company is building an Amazon Elastic Kubernetes Service (Amazon EKS) cluster for its workloads. All secrets that are stored in Amazon EKS must be encrypted in the Kubernetes etcd key-value store.\nWhich solution will meet these requirements?"
    },
    "choices": {
      "kor": {
        "A": "새 AWS Key Management Service(AWS KMS) 키를 생성합니다. AWS Secrets Manager를 사용하여 Amazon EKS에서 모든 비밀을 관리, 교체 및 저장하십시오.",
        "B": "새 AWS Key Management Service(AWS KMS) 키를 생성합니다. Amazon EKS 클러스터에서 Amazon EKS KMS 비밀 암호화를 활성화합니다.",
        "C": "기본 옵션으로 Amazon EKS 클러스터를 생성합니다. Amazon Elastic Block Store(Amazon EBS) CSI(Container Storage Interface) 드라이버를 추가 기능으로 사용합니다.",
        "D": "alias/aws/ebs 별칭으로 새 AWS Key Management Service(AWS KMS) 키를 생성합니다. 계정에 대해 기본 Amazon Elastic Block Store(Amazon EBS) 볼륨 암호화를 활성화합니다."
      },
      "eng": {
        "A": "Create a new AWS Key Management Service (AWS KMS) key. Use AWS Secrets Manager to manage, rotate, and store all secrets in Amazon EKS.",
        "B": "Create a new AWS Key Management Service (AWS KMS) key. Enable Amazon EKS KMS secrets encryption on the Amazon EKS cluster.",
        "C": "Create the Amazon EKS cluster with default options. Use the Amazon Elastic Block Store (Amazon EBS) Container Storage Interface (CSI) driver as an add-on.",
        "D": "Create a new AWS Key Management Service (AWS KMS) key with the alias/aws/ebs alias. Enable default Amazon Elastic Block Store (Amazon EBS) volume encryption for the account."
      }
    },
    "category": [
      "Container"
    ],
    "subcategory": [
      "KMS"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/111385-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "B"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 96,
    "question": {
      "kor": "회사는 확장성 및 가용성에 대한 요구 사항을 충족하기 위해 컨테이너에서 중요한 애플리케이션을 실행하려고 합니다. 회사는 중요한 응용 프로그램의 유지 관리에 집중하는 것을 선호합니다.\n회사는 컨테이너화된 워크로드를 실행하는 기본 인프라를 프로비저닝하고 관리하는 책임을 원하지 않습니다.\n솔루션 설계자는 이러한 요구 사항을 충족하기 위해 무엇을 해야 합니까?",
      "eng": "A company wants to run its critical applications in containers to meet requirements for scalability and availability. The company prefers to focus on maintenance of the critical applications. The company does not want to be responsible for provisioning and managing the underlying infrastructure that runs the containerized workload.\nWhat should a solutions architect do to meet these requirements?"
    },
    "choices": {
      "kor": {
        "A": "Amazon EC2 인스턴스를 사용하고 인스턴스에 Docker를 설치하십시오.",
        "B": "Amazon EC2 작업자 노드에서 Amazon Elastic Container Service(Amazon ECS)를 사용합니다.",
        "C": "AWS Fargate에서 Amazon Elastic Container Service(Amazon ECS)를 사용합니다.",
        "D": "Amazon Elastic Container Service(Amazon ECS)에 최적화된 Amazon Machine Image(AMI)에서 Amazon EC2 인스턴스를 사용합니다."
      },
      "eng": {
        "A": "Use Amazon EC2 instances, and install Docker on the instances.",
        "B": "Use Amazon Elastic Container Service (Amazon ECS) on Amazon EC2 worker nodes.",
        "C": "Use Amazon Elastic Container Service (Amazon ECS) on AWS Fargate.",
        "D": "Use Amazon EC2 instances from an Amazon Elastic Container Service (Amazon ECS)-optimized Amazon Machine Image (AMI)."
      }
    },
    "category": [
      "Container"
    ],
    "subcategory": [
      "Fargate"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/85453-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "C"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 99,
    "question": {
      "kor": "회사는 들어오는 요청을 처리하는 온프레미스 서버 플릿에서 컨테이너화된 웹 애플리케이션을 호스팅합니다. 요청 수가 빠르게 증가하고 있습니다. 온프레미스 서버는 증가된 요청 수를 처리할 수 없습니다. 이 회사는 최소한의 코드 변경과 최소한의 개발 노력으로 애플리케이션을 AWS로 옮기기를 원합니다.\n최소한의 운영 오버헤드로 이러한 요구 사항을 충족하는 솔루션은 무엇입니까?",
      "eng": "A company hosts a containerized web application on a fleet of on-premises servers that process incoming requests. The number of requests is growing quickly. The on-premises servers cannot handle the increased number of requests. The company wants to move the application to AWS with minimum code changes and minimum development effort.\nWhich solution will meet these requirements with the LEAST operational overhead?"
    },
    "choices": {
      "kor": {
        "A": "Amazon Elastic Container Service(Amazon ECS)에서 AWS Fargate를 사용하여 Service Auto Scaling으로 컨테이너화된 웹 애플리케이션을 실행합니다. Application Load Balancer를 사용하여 들어오는 요청을 분산합니다.",
        "B": "두 개의 Amazon EC2 인스턴스를 사용하여 컨테이너화된 웹 애플리케이션을 호스팅합니다. Application Load Balancer를 사용하여 들어오는 요청을 분산합니다.",
        "C": "지원되는 언어 중 하나를 사용하는 새 코드와 함께 AWS Lambda를 사용합니다. 로드를 지원하는 여러 Lambda 함수를 생성합니다. Amazon API Gateway를 Lambda 함수에 대한 진입점으로 사용합니다.",
        "D": "AWS ParallelCluster와 같은 고성능 컴퓨팅(HPC) 솔루션을 사용하여 적절한 규모로 들어오는 요청을 처리할 수 있는 HPC 클러스터를 설정합니다."
      },
      "eng": {
        "A": "Use AWS Fargate on Amazon Elastic Container Service (Amazon ECS) to run the containerized web application with Service Auto Scaling. Use an Application Load Balancer to distribute the incoming requests.",
        "B": "Use two Amazon EC2 instances to host the containerized web application. Use an Application Load Balancer to distribute the incoming requests.",
        "C": "Use AWS Lambda with a new code that uses one of the supported languages. Create multiple Lambda functions to support the load. Use Amazon API Gateway as an entry point to the Lambda functions.",
        "D": "Use a high performance computing (HPC) solution such as AWS ParallelCluster to establish an HPC cluster that can process the incoming requests at the appropriate scale."
      }
    },
    "category": [
      "Container"
    ],
    "subcategory": [
      "Fargate"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/85913-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "A"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 168,
    "question": {
      "kor": "한 회사가 온프레미스에서 컨테이너화된 애플리케이션을 구축하고 애플리케이션을 AWS로 이전하기로 결정했습니다. 응용 프로그램은 배포된 직후 수천 명의 사용자를 보유하게 됩니다. 회사는 규모에 맞게 컨테이너 배포를 관리하는 방법을 확신하지 못합니다. 회사는 운영 오버헤드를 최소화하는 고가용성 아키텍처에 컨테이너화된 애플리케이션을 배포해야 합니다.\n이러한 요구 사항을 충족하는 솔루션은 무엇입니까?",
      "eng": "A company is building a containerized application on premises and decides to move the application to AWS. The application will have thousands of users soon after it is deployed. The company is unsure how to manage the deployment of containers at scale. The company needs to deploy the containerized application in a highly available architecture that minimizes operational overhead.\nWhich solution will meet these requirements?"
    },
    "choices": {
      "kor": {
        "A": "Amazon Elastic Container Registry(Amazon ECR) 리포지토리에 컨테이너 이미지를 저장합니다. AWS Fargate 시작 유형과 함께 Amazon Elastic Container Service(Amazon ECS) 클러스터를 사용하여 컨테이너를 실행합니다. 대상 추적을 사용하여 수요에 따라 자동으로 확장합니다.",
        "B": "컨테이너 이미지를 Amazon Elastic Container Registry(Amazon ECR) 리포지토리에 저장합니다. Amazon EC2 시작 유형과 함께 Amazon Elastic Container Service(Amazon ECS) 클러스터를 사용하여 컨테이너를 실행합니다. 대상 추적을 사용하여 수요에 따라 자동으로 확장합니다.",
        "C": "Amazon EC2 인스턴스에서 실행되는 리포지토리에 컨테이너 이미지를 저장합니다. 여러 가용 영역에 분산된 EC2 인스턴스에서 컨테이너를 실행합니다. Amazon CloudWatch에서 평균 CPU 사용률을 모니터링합니다. 필요에 따라 새 EC2 인스턴스를 시작합니다.",
        "D": "컨테이너 이미지가 포함된 Amazon EC2 Amazon 머신 이미지(AMI)를 생성합니다. 여러 가용 영역의 Auto Scaling 그룹에서 EC2 인스턴스를 시작합니다. 평균 CPU 사용률 임계값을 초과하면 Amazon CloudWatch 경보를 사용하여 EC2 인스턴스를 확장합니다."
      },
      "eng": {
        "A": "Store container images in an Amazon Elastic Container Registry (Amazon ECR) repository. Use an Amazon Elastic Container Service (Amazon ECS) cluster with the AWS Fargate launch type to run the containers. Use target tracking to scale automatically based on demand.",
        "B": "Store container images in an Amazon Elastic Container Registry (Amazon ECR) repository. Use an Amazon Elastic Container Service (Amazon ECS) cluster with the Amazon EC2 launch type to run the containers. Use target tracking to scale automatically based on demand.",
        "C": "Store container images in a repository that runs on an Amazon EC2 instance. Run the containers on EC2 instances that are spread across multiple Availability Zones. Monitor the average CPU utilization in Amazon CloudWatch. Launch new EC2 instances as needed.",
        "D": "Create an Amazon EC2 Amazon Machine Image (AMI) that contains the container image. Launch EC2 instances in an Auto Scaling group across multiple Availability Zones. Use an Amazon CloudWatch alarm to scale out EC2 instances when the average CPU utilization threshold is breached."
      }
    },
    "category": [
      "Container"
    ],
    "subcategory": [
      "Fargate",
      "operational overhead"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/87509-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "A"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 274,
    "question": {
      "kor": "한 회사에서 UDP를 사용하는 수천 개의 지리적으로 분산된 원격 장치로부터 데이터를 수신하는 애플리케이션을 실행합니다. 애플리케이션은 데이터를 즉시 처리하고 필요한 경우 장치로 다시 메시지를 보냅니다. 데이터가 저장되지 않습니다.\n회사는 장치에서 데이터 전송에 대한 대기 시간을 최소화하는 솔루션이 필요합니다. 솔루션은 또한 다른 AWS 리전에 대한 빠른 장애 조치를 제공해야 합니다.\n이러한 요구 사항을 충족하는 솔루션은 무엇입니까?",
      "eng": "A company runs an application that receives data from thousands of geographically dispersed remote devices that use UDP. The application processes the data immediately and sends a message back to the device if necessary. No data is stored.\nThe company needs a solution that minimizes latency for the data transmission from the devices. The solution also must provide rapid failover to another AWS Region.\nWhich solution will meet these requirements?"
    },
    "choices": {
      "kor": {
        "A": "Amazon Route 53 장애 조치 라우팅 정책을 구성합니다. 두 리전 각각에 NLB(Network Load Balancer)를 생성합니다. 데이터를 처리하기 위해 AWS Lambda 함수를 호출하도록 NLB를 구성합니다.",
        "B": "AWS Global Accelerator를 사용합니다. 두 리전 각각에 NLB(Network Load Balancer)를 엔드포인트로 생성합니다. Fargate 시작 유형으로 Amazon Elastic Container Service(Amazon ECS) 클러스터를 생성합니다. 클러스터에서 ECS 서비스를 생성합니다. Amazon ECS에서 데이터를 NLProcess하기 위한 대상으로 ECS 서비스를 설정합니다.",
        "C": "AWS Global Accelerator를 사용합니다. 두 리전 각각에 Application Load Balancer(ALB)를 엔드포인트로 생성합니다. Fargate 시작 유형으로 Amazon Elastic Container Service(Amazon ECS) 클러스터를 생성합니다. 클러스터에서 ECS 서비스를 생성합니다. ECS 서비스를 ALB의 대상으로 설정합니다. Amazon ECS에서 데이터를 처리합니다.",
        "D": "Amazon Route 53 장애 조치 라우팅 정책을 구성합니다. 두 리전 각각에 Application Load Balancer(ALB)를 생성합니다. Fargate 시작 유형으로 Amazon Elastic Container Service(Amazon ECS) 클러스터를 생성합니다. 클러스터에서 ECS 서비스를 생성합니다. ECS 서비스를 ALB의 대상으로 설정합니다. Amazon ECS에서 데이터를 처리합니다."
      },
      "eng": {
        "A": "Configure an Amazon Route 53 failover routing policy. Create a Network Load Balancer (NLB) in each of the two Regions. Configure the NLB to invoke an AWS Lambda function to process the data.",
        "B": "Use AWS Global Accelerator. Create a Network Load Balancer (NLB) in each of the two Regions as an endpoint. Create an Amazon Elastic Container Service (Amazon ECS) cluster with the Fargate launch type. Create an ECS service on the cluster. Set the ECS service as the target for the NLProcess the data in Amazon ECS.",
        "C": "Use AWS Global Accelerator. Create an Application Load Balancer (ALB) in each of the two Regions as an endpoint. Create an Amazon Elastic Container Service (Amazon ECS) cluster with the Fargate launch type. Create an ECS service on the cluster. Set the ECS service as the target for the ALB. Process the data in Amazon ECS.",
        "D": "Configure an Amazon Route 53 failover routing policy. Create an Application Load Balancer (ALB) in each of the two Regions. Create an Amazon Elastic Container Service (Amazon ECS) cluster with the Fargate launch type. Create an ECS service on the cluster. Set the ECS service as the target for the ALB. Process the data in Amazon ECS."
      }
    },
    "category": [
      "Container",
      "Workload Distribution"
    ],
    "subcategory": [
      "Fargate"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/102185-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "B"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 277,
    "question": {
      "kor": "한 회사에서 로드 밸런싱된 프런트 엔드, 컨테이너 기반 애플리케이션 및 관계형 데이터베이스로 구성될 전자상거래 애플리케이션을 개발하고 있습니다. 솔루션 설계자는 가능한 한 적은 수동 개입으로 작동하는 고가용성 솔루션을 만들어야 합니다.\n이러한 요구 사항을 충족하는 솔루션은 무엇입니까? (두 가지를 선택하세요.)",
      "eng": "A company is developing an ecommerce application that will consist of a load-balanced front end, a container-based application, and a relational database. A solutions architect needs to create a highly available solution that operates with as little manual intervention as possible.\nWhich solutions meet these requirements? (Choose two.)"
    },
    "choices": {
      "kor": {
        "A": "다중 AZ 모드에서 Amazon RDS DB 인스턴스를 생성합니다.",
        "B": "다른 가용 영역에서 Amazon RDS DB 인스턴스와 하나 이상의 복제본을 생성합니다.",
        "C": "동적 애플리케이션 로드를 처리하기 위해 Amazon EC2 인스턴스 기반 Docker 클러스터를 생성합니다.",
        "D": "동적 애플리케이션 로드를 처리하기 위해 Fargate 시작 유형으로 Amazon Elastic Container Service(Amazon ECS) 클러스터를 생성합니다.",
        "E": "동적 애플리케이션 로드를 처리하기 위해 Amazon EC2 시작 유형으로 Amazon Elastic Container Service(Amazon ECS) 클러스터를 생성합니다."
      },
      "eng": {
        "A": "Create an Amazon RDS DB instance in Multi-AZ mode.",
        "B": "Create an Amazon RDS DB instance and one or more replicas in another Availability Zone.",
        "C": "Create an Amazon EC2 instance-based Docker cluster to handle the dynamic application load.",
        "D": "Create an Amazon Elastic Container Service (Amazon ECS) cluster with a Fargate launch type to handle the dynamic application load.",
        "E": "Create an Amazon Elastic Container Service (Amazon ECS) cluster with an Amazon EC2 launch type to handle the dynamic application load."
      }
    },
    "category": [
      "Container",
      "Database"
    ],
    "subcategory": [
      "Fargate"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/87695-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "A",
      "D"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 320,
    "question": {
      "kor": "전자상거래 회사는 분석을 위해 판매 기록을 집계하고 필터링하기 위해 예약된 일일 작업을 실행해야 합니다. 회사는 판매 기록을 Amazon S3 버킷에 저장합니다. 각 개체의 크기는 최대 10GB입니다. 판매 이벤트 수에 따라 작업을 완료하는 데 최대 1시간이 걸릴 수 있습니다. 작업의 CPU 및 메모리 사용량은 일정하며 미리 알려져 있습니다.\n솔루션 설계자는 작업을 실행하는 데 필요한 운영 노력을 최소화해야 합니다.\n어떤 솔루션이 이러한 요구 사항을 충족합니까?",
      "eng": "An ecommerce company needs to run a scheduled daily job to aggregate and filter sales records for analytics. The company stores the sales records in an Amazon S3 bucket. Each object can be up to 10 GB in size. Based on the number of sales events, the job can take up to an hour to complete. The CPU and memory usage of the job are constant and are known in advance.\nA solutions architect needs to minimize the amount of operational effort that is needed for the job to run.\nWhich solution meets these requirements?"
    },
    "choices": {
      "kor": {
        "A": "Amazon EventBridge 알림이 있는 AWS Lambda 함수를 생성합니다. EventBridge 이벤트가 하루에 한 번 실행되도록 예약합니다.",
        "B": "AWS Lambda 함수를 생성합니다. Amazon API Gateway HTTP API를 생성하고 API를 함수와 통합합니다. API를 호출하고 함수를 호출하는 Amazon EventBridge 예약 이벤트를 생성합니다.",
        "C": "AWS Fargate 시작 유형으로 Amazon Elastic Container Service(Amazon ECS) 클러스터를 생성합니다. 작업을 실행하기 위해 클러스터에서 ECS 작업을 시작하는 Amazon EventBridge 예약 이벤트를 생성합니다.",
        "D": "Amazon EC2 시작 유형이 있는 Amazon Elastic Container Service(Amazon ECS) 클러스터와 하나 이상의 EC2 인스턴스가 있는 Auto Scaling 그룹을 생성합니다. 작업을 실행하기 위해 클러스터에서 ECS 작업을 시작하는 Amazon EventBridge 예약 이벤트를 생성합니다."
      },
      "eng": {
        "A": "Create an AWS Lambda function that has an Amazon EventBridge notification. Schedule the EventBridge event to run once a day.",
        "B": "Create an AWS Lambda function. Create an Amazon API Gateway HTTP API, and integrate the API with the function. Create an Amazon EventBridge scheduled event that calls the API and invokes the function.",
        "C": "Create an Amazon Elastic Container Service (Amazon ECS) cluster with an AWS Fargate launch type. Create an Amazon EventBridge scheduled event that launches an ECS task on the cluster to run the job.",
        "D": "Create an Amazon Elastic Container Service (Amazon ECS) cluster with an Amazon EC2 launch type and an Auto Scaling group with at least one EC2 instance. Create an Amazon EventBridge scheduled event that launches an ECS task on the cluster to run the job."
      }
    },
    "category": [
      "Container"
    ],
    "subcategory": [
      "Fargate"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/102165-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "C"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 443,
    "question": {
      "kor": "회사에서 여러 마이크로서비스로 구성된 애플리케이션을 구축하고 있습니다. 이 회사는 컨테이너 기술을 사용하여 AWS에 소프트웨어를 배포하기로 결정했습니다. 회사는 유지 관리 및 확장을 위한 지속적인 노력을 최소화하는 솔루션이 필요합니다. 회사는 추가 인프라를 관리할 수 없습니다.\n이러한 요구 사항을 충족하기 위해 솔루션 설계자는 어떤 작업 조합을 수행해야 합니까? (두 가지를 선택하세요.)",
      "eng": "A company is building an application that consists of several microservices. The company has decided to use container technologies to deploy its software on AWS. The company needs a solution that minimizes the amount of ongoing effort for maintenance and scaling. The company cannot manage additional infrastructure.\nWhich combination of actions should a solutions architect take to meet these requirements? (Choose two.)"
    },
    "choices": {
      "kor": {
        "A": "Amazon Elastic Container Service(Amazon ECS) 클러스터를 배포합니다.",
        "B": "여러 가용 영역에 걸쳐 있는 Amazon EC2 인스턴스에 Kubernetes 제어 평면을 배포합니다.",
        "C": "Amazon EC2 시작 유형으로 Amazon Elastic Container Service(Amazon ECS) 서비스를 배포합니다. 2보다 크거나 같은 원하는 태스크 번호 레벨을 지정하십시오.",
        "D": "Fargate 시작 유형으로 Amazon Elastic Container Service(Amazon ECS) 서비스를 배포합니다. 2보다 크거나 같은 원하는 태스크 번호 레벨을 지정하십시오.",
        "E": "여러 가용 영역에 걸쳐 있는 Amazon EC2 인스턴스에 Kubernetes 작업자 노드를 배포합니다. 각 마이크로 서비스에 대해 두 개 이상의 복제본을 지정하는 배포를 만듭니다."
      },
      "eng": {
        "A": "Deploy an Amazon Elastic Container Service (Amazon ECS) cluster.",
        "B": "Deploy the Kubernetes control plane on Amazon EC2 instances that span multiple Availability Zones.",
        "C": "Deploy an Amazon Elastic Container Service (Amazon ECS) service with an Amazon EC2 launch type. Specify a desired task number level of greater than or equal to 2.",
        "D": "Deploy an Amazon Elastic Container Service (Amazon ECS) service with a Fargate launch type. Specify a desired task number level of greater than or equal to 2.",
        "E": "Deploy Kubernetes worker nodes on Amazon EC2 instances that span multiple Availability Zones. Create a deployment that specifies two or more replicas for each microservice."
      }
    },
    "category": [
      "Container"
    ],
    "subcategory": [
      "Fargate"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/95012-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "A",
      "D"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 474,
    "question": {
      "kor": "회사에서 Windows 컨테이너 아래의 .NET 6 Framework에서 실행되는 Windows 작업을 컨테이너화했습니다. 회사는 AWS 클라우드에서 이 작업을 실행하려고 합니다. 작업은 10분마다 실행됩니다. 작업의 실행 시간은 1분에서 3분 사이입니다.\n이러한 요구 사항을 가장 비용 효율적으로 충족하는 솔루션은 무엇입니까?",
      "eng": "A company containerized a Windows job that runs on .NET 6 Framework under a Windows container. The company wants to run this job in the AWS Cloud.\nThe job runs every 10 minutes. The job’s runtime varies between 1 minute and 3 minutes.\nWhich solution will meet these requirements MOST cost-effectively?"
    },
    "choices": {
      "kor": {
        "A": "작업의 컨테이너 이미지를 기반으로 AWS Lambda 함수를 생성합니다. 10분마다 함수를 호출하도록 Amazon EventBridge를 구성합니다.",
        "B": "AWS Batch를 사용하여 AWS Fargate 리소스를 사용하는 작업을 생성합니다. 10분마다 실행되도록 작업 일정을 구성합니다.",
        "C": "AWS Fargate에서 Amazon Elastic Container Service(Amazon ECS)를 사용하여 작업을 실행합니다. 10분마다 실행할 작업의 컨테이너 이미지를 기반으로 예약된 작업을 만듭니다.",
        "D": "AWS Fargate에서 Amazon Elastic Container Service(Amazon ECS)를 사용하여 작업을 실행합니다. 작업의 컨테이너 이미지를 기반으로 독립 실행형 작업을 생성합니다. Windows 작업 스케줄러를 사용하여 10분마다 작업을 실행합니다"
      },
      "eng": {
        "A": "Create an AWS Lambda function based on the container image of the job. Configure Amazon EventBridge to invoke the function every 10 minutes.",
        "B": "Use AWS Batch to create a job that uses AWS Fargate resources. Configure the job scheduling to run every 10 minutes.",
        "C": "Use Amazon Elastic Container Service (Amazon ECS) on AWS Fargate to run the job. Create a scheduled task based on the container image of the job to run every 10 minutes.",
        "D": "Use Amazon Elastic Container Service (Amazon ECS) on AWS Fargate to run the job. Create a standalone task based on the container image of the job. Use Windows task scheduler to run the job every 10 minutes."
      }
    },
    "category": [
      "Container"
    ],
    "subcategory": [
      "Fargate"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/109463-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "C"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 589,
    "question": {
      "kor": "한 회사가 Docker 컨테이너를 사용하여 애플리케이션을 구축했으며 AWS 클라우드에서 애플리케이션을 실행해야 합니다. 회사는 관리형 서비스를 사용하여 애플리케이션을 호스팅하려고 합니다.\n솔루션은 개별 컨테이너 서비스에 대한 수요에 따라 적절하게 확장 및 축소되어야 합니다. 또한 솔루션으로 인해 추가적인 운영 오버헤드나 관리해야 할 인프라가 발생해서는 안 됩니다.\n어떤 솔루션이 이러한 요구 사항을 충족합니까? (2개를 선택하세요.)",
      "eng": "A company built an application with Docker containers and needs to run the application in the AWS Cloud. The company wants to use a managed service to host the application.\nThe solution must scale in and out appropriately according to demand on the individual container services. The solution also must not result in additional operational overhead or infrastructure to manage.\nWhich solutions will meet these requirements? (Choose two.)"
    },
    "choices": {
      "kor": {
        "A": "AWS Fargate와 함께 Amazon Elastic Container Service(Amazon ECS)를 사용하십시오.",
        "B": "AWS Fargate와 함께 Amazon Elastic Kubernetes Service(Amazon EKS)를 사용하십시오.",
        "C": "Amazon API Gateway API를 프로비저닝합니다. API를 AWS Lambda에 연결하여 컨테이너를 실행합니다.",
        "D": "Amazon EC2 작업자 노드와 함께 Amazon Elastic Container Service(Amazon ECS)를 사용하십시오.",
        "E": "Amazon EC2 작업자 노드와 함께 Amazon Elastic Kubernetes Service(Amazon EKS)를 사용합니다."
      },
      "eng": {
        "A": "Use Amazon Elastic Container Service (Amazon ECS) with AWS Fargate.",
        "B": "Use Amazon Elastic Kubernetes Service (Amazon EKS) with AWS Fargate.",
        "C": "Provision an Amazon API Gateway API. Connect the API to AWS Lambda to run the containers.",
        "D": "Use Amazon Elastic Container Service (Amazon ECS) with Amazon EC2 worker nodes.",
        "E": "Use Amazon Elastic Kubernetes Service (Amazon EKS) with Amazon EC2 worker nodes."
      }
    },
    "category": [
      "Container"
    ],
    "subcategory": [
      "Fargate"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/133002-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "A",
      "B"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 856,
    "question": {
      "kor": "솔루션 설계자는 하루에 한 번 실행되고 완료하는 데 최대 2시간이 걸릴 수 있는 데이터 처리 작업을 만들고 있습니다. 작업이 중단되면 처음부터 다시 시작해야 합니다.\n솔루션 설계자는 가장 비용 효과적인 방식으로 이 문제를 어떻게 해결해야 합니까?",
      "eng": "A solutions architect is creating a data processing job that runs once daily and can take up to 2 hours to complete. If the job is interrupted, it has to restart from the beginning.\nHow should the solutions architect address this issue in the MOST cost-effective manner?"
    },
    "choices": {
      "kor": {
        "A": "cron 작업에 의해 트리거되는 Amazon EC2 예약 인스턴스에서 로컬로 실행되는 스크립트를 생성하십시오.",
        "B": "Amazon EventBridge 예약 이벤트에 의해 트리거되는 AWS Lambda 함수를 생성합니다.",
        "C": "Amazon EventBridge 예약 이벤트에 의해 트리거되는 Amazon Elastic Container Service(Amazon ECS) Fargate 작업을 사용합니다.",
        "D": "Amazon EventBridge 예약 이벤트에 의해 트리거되는 Amazon EC2에서 실행되는 Amazon Elastic Container Service(Amazon ECS) 작업을 사용합니다."
      },
      "eng": {
        "A": "Create a script that runs locally on an Amazon EC2 Reserved Instance that is triggered by a cron job.",
        "B": "Create an AWS Lambda function triggered by an Amazon EventBridge scheduled event.",
        "C": "Use an Amazon Elastic Container Service (Amazon ECS) Fargate task triggered by an Amazon EventBridge scheduled event.",
        "D": "Use an Amazon Elastic Container Service (Amazon ECS) task running on Amazon EC2 triggered by an Amazon EventBridge scheduled event."
      }
    },
    "category": [
      "Container"
    ],
    "subcategory": [
      "Fargate"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/125542-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "C"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 895,
    "question": {
      "kor": "회사에는 로컬 데이터 센터에 Docker 컨테이너를 사용하는 애플리케이션이 있습니다. 애플리케이션은 호스트의 볼륨에 영구 데이터를 저장하는 컨테이너 호스트에서 실행됩니다. 컨테이너 인스턴스는 저장된 영구 데이터를 사용합니다.\n회사는 서버나 스토리지 인프라를 관리하고 싶지 않기 때문에 애플리케이션을 완전 관리형 서비스로 이동하려고 합니다.\n어떤 솔루션이 이러한 요구 사항을 충족합니까?",
      "eng": "A company has an application that uses Docker containers in its local data center. The application runs on a container host that stores persistent data in a volume on the host. The container instances use the stored persistent data.\nThe company wants to move the application to a fully managed service because the company does not want to manage any servers or storage infrastructure.\nWhich solution will meet these requirements?"
    },
    "choices": {
      "kor": {
        "A": "자체 관리형 노드와 함께 Amazon Elastic Kubernetes Service(Amazon EKS)를 사용하십시오. Amazon EC2 인스턴스에 연결된 Amazon Elastic Block Store(Amazon EBS) 볼륨을 생성합니다. EBS 볼륨을 컨테이너에 탑재된 영구 볼륨으로 사용합니다.",
        "B": "AWS Fargate 시작 유형과 함께 Amazon Elastic Container Service(Amazon ECS)를 사용하십시오. Amazon Elastic File System(Amazon EFS) 볼륨을 생성합니다. EFS 볼륨을 컨테이너에 탑재된 영구 스토리지 볼륨으로 추가합니다.",
        "C": "AWS Fargate 시작 유형과 함께 Amazon Elastic Container Service(Amazon ECS)를 사용하십시오. Amazon S3 버킷을 생성합니다. S3 버킷을 컨테이너에 탑재된 영구 스토리지 볼륨으로 매핑합니다.",
        "D": "Amazon EC2 시작 유형과 함께 Amazon Elastic Container Service(Amazon ECS)를 사용하십시오. Amazon Elastic File System(Amazon EFS) 볼륨을 생성합니다. EFS 볼륨을 컨테이너에 탑재된 영구 스토리지 볼륨으로 추가합니다."
      },
      "eng": {
        "A": "Use Amazon Elastic Kubernetes Service (Amazon EKS) with self-managed nodes. Create an Amazon Elastic Block Store (Amazon EBS) volume attached to an Amazon EC2 instance. Use the EBS volume as a persistent volume mounted in the containers.",
        "B": "Use Amazon Elastic Container Service (Amazon ECS) with an AWS Fargate launch type. Create an Amazon Elastic File System (Amazon EFS) volume. Add the EFS volume as a persistent storage volume mounted in the containers.",
        "C": "Use Amazon Elastic Container Service (Amazon ECS) with an AWS Fargate launch type. Create an Amazon S3 bucket. Map the S3 bucket as a persistent storage volume mounted in the containers.",
        "D": "Use Amazon Elastic Container Service (Amazon ECS) with an Amazon EC2 launch type. Create an Amazon Elastic File System (Amazon EFS) volume. Add the EFS volume as a persistent storage volume mounted in the containers."
      }
    },
    "category": [
      "Container"
    ],
    "subcategory": [
      "Fargate"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/132862-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "B"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 934,
    "question": {
      "kor": "회사는 온프레미스 데이터 센터의 레거시 애플리케이션을 AWS로 마이그레이션하고 있습니다. 이 애플리케이션은 하루 종일 다양한 반복 일정에 따라 1~20분 동안 실행되는 수백 개의 크론 작업에 의존합니다.\n회사는 최소한의 리팩토링으로 AWS에서 크론 작업을 예약하고 실행할 수 있는 솔루션을 원합니다. 솔루션은 향후 이벤트에 대한 응답으로 크론 작업 실행을 지원해야 합니다.\n어떤 솔루션이 이러한 요구 사항을 충족합니까?",
      "eng": "A company is migrating a legacy application from an on-premises data center to AWS. The application relies on hundreds of cron jobs that run between 1 and 20 minutes on different recurring schedules throughout the day.\nThe company wants a solution to schedule and run the cron jobs on AWS with minimal refactoring. The solution must support running the cron jobs in response to an event in the future.\nWhich solution will meet these requirements?"
    },
    "choices": {
      "kor": {
        "A": "크론 작업을 위한 컨테이너 이미지를 생성합니다. Amazon EventBridge Scheduler를 사용하여 반복 일정을 생성합니다. cron 작업 작업을 AWS Lambda 함수로 실행합니다.",
        "B": "크론 작업을 위한 컨테이너 이미지를 생성합니다. Amazon Elastic Container Service(Amazon ECS)에서 일정 정책과 함께 AWS Batch를 사용하여 cron 작업을 실행합니다.",
        "C": "크론 작업을 위한 컨테이너 이미지를 생성합니다. Amazon EventBridge Scheduler를 사용하여 반복 일정을 생성합니다. AWS Fargate에서 cron 작업을 실행합니다.",
        "D": "크론 작업을 위한 컨테이너 이미지를 생성합니다. 대기 상태를 사용하여 지정된 시간에 cron 작업을 실행하는 워크플로를 AWS Step Functions에서 생성합니다. RunTask 작업을 사용하여 AWS Fargate에서 cron 작업을 실행합니다."
      },
      "eng": {
        "A": "Create a container image for the cron jobs. Use Amazon EventBridge Scheduler to create a recurring schedule. Run the cron job tasks as AWS Lambda functions.",
        "B": "Create a container image for the cron jobs. Use AWS Batch on Amazon Elastic Container Service (Amazon ECS) with a scheduling policy to run the cron jobs.",
        "C": "Create a container image for the cron jobs. Use Amazon EventBridge Scheduler to create a recurring schedule. Run the cron job tasks on AWS Fargate.",
        "D": "Create a container image for the cron jobs. Create a workflow in AWS Step Functions that uses a Wait state to run the cron jobs at a specified time. Use the RunTask action to run the cron job tasks on AWS Fargate."
      }
    },
    "category": [
      "Container"
    ],
    "subcategory": [
      "Fargate"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/135271-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "C"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 825,
    "question": {
      "kor": "회사는 Amazon Elastic Kubernetes Service(Amazon EKS) 클러스터와 온프레미스 Kubernetes 클러스터 모두에서 애플리케이션을 실행합니다. 회사는 중앙 위치에서 모든 클러스터와 워크로드를 보기를 원합니다.\n최소한의 운영 오버헤드로 이러한 요구 사항을 충족하는 솔루션은 무엇입니까?",
      "eng": "A company runs its applications on both Amazon Elastic Kubernetes Service (Amazon EKS) clusters and on-premises Kubernetes clusters. The company wants to view all clusters and workloads from a central location.\nWhich solution will meet these requirements with the LEAST operational overhead?"
    },
    "choices": {
      "kor": {
        "A": "Amazon CloudWatch Container Insights를 사용하여 클러스터 정보를 수집하고 그룹화합니다.",
        "B": "Amazon EKS 커넥터를 사용하여 모든 Kubernetes 클러스터를 등록하고 연결합니다.",
        "C": "AWS Systems Manager를 사용하여 클러스터 정보를 수집하고 봅니다.",
        "D": "Amazon EKS Anywhere를 기본 클러스터로 사용하여 기본 Kubernetes 명령으로 다른 클러스터를 봅니다."
      },
      "eng": {
        "A": "Use Amazon CloudWatch Container Insights to collect and group the cluster information.",
        "B": "Use Amazon EKS Connector to register and connect all Kubernetes clusters.",
        "C": "Use AWS Systems Manager to collect and view the cluster information.",
        "D": "Use Amazon EKS Anywhere as the primary cluster to view the other clusters with native Kubernetes commands."
      }
    },
    "category": [
      "Container"
    ],
    "subcategory": [
      "EKS Connector"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/117023-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "B"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 187,
    "question": {
      "kor": "회사는 AWS 클라우드의 컨테이너에서 애플리케이션을 실행하려고 합니다. 이러한 애플리케이션은 상태 비저장이며 기본 인프라 내의 중단을 허용할 수 있습니다. 회사는 비용과 운영 오버헤드를 최소화하는 솔루션이 필요합니다.\n솔루션 설계자는 이러한 요구 사항을 충족하기 위해 무엇을 해야 합니까?",
      "eng": "A company wants to run applications in containers in the AWS Cloud. These applications are stateless and can tolerate disruptions within the underlying infrastructure. The company needs a solution that minimizes cost and operational overhead.\nWhat should a solutions architect do to meet these requirements?"
    },
    "choices": {
      "kor": {
        "A": "Amazon EC2 Auto Scaling 그룹의 스팟 인스턴스를 사용하여 애플리케이션 컨테이너를 실행합니다.",
        "B": "Amazon Elastic Kubernetes Service(Amazon EKS) 관리형 노드 그룹에서 스팟 인스턴스를 사용합니다.",
        "C": "Amazon EC2 Auto Scaling 그룹에서 온디맨드 인스턴스를 사용하여 애플리케이션 컨테이너를 실행합니다.",
        "D": "Amazon Elastic Kubernetes Service(Amazon EKS) 관리형 노드 그룹에서 온디맨드 인스턴스를 사용합니다."
      },
      "eng": {
        "A": "Use Spot Instances in an Amazon EC2 Auto Scaling group to run the application containers.",
        "B": "Use Spot Instances in an Amazon Elastic Kubernetes Service (Amazon EKS) managed node group.",
        "C": "Use On-Demand Instances in an Amazon EC2 Auto Scaling group to run the application containers.",
        "D": "Use On-Demand Instances in an Amazon Elastic Kubernetes Service (Amazon EKS) managed node group."
      }
    },
    "category": [
      "Container"
    ],
    "subcategory": [
      "EKS",
      "Spot instancess"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/85404-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "B"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 365,
    "question": {
      "kor": "한 회사는 Amazon Elastic Kubernetes Service(Amazon EKS)와 Kubernetes 수평형 포드 자동 크기 조정기를 사용하여 컨테이너 애플리케이션을 실행합니다. 작업량이 하루 종일 일정하지 않습니다. 솔루션 설계자는 기존 노드가 클러스터의 최대 용량에 도달해도 노드 수가 자동으로 확장되지 않아 성능 문제가 발생한다는 사실을 알아냈습니다.\n최소한의 관리 오버헤드로 이 문제를 해결할 수 있는 솔루션은 무엇입니까?",
      "eng": "A company runs container applications by using Amazon Elastic Kubernetes Service (Amazon EKS) and the Kubernetes Horizontal Pod Autoscaler. The workload is not consistent throughout the day. A solutions architect notices that the number of nodes does not automatically scale out when the existing nodes have reached maximum capacity in the cluster, which causes performance issues.\nWhich solution will resolve this issue with the LEAST administrative overhead?"
    },
    "choices": {
      "kor": {
        "A": "메모리 사용량을 추적하여 노드를 확장합니다.",
        "B": "Kubernetes Cluster Autoscaler를 사용하여 클러스터의 노드 수를 관리합니다.",
        "C": "AWS Lambda 함수를 사용하여 EKS 클러스터의 크기를 자동으로 조정합니다.",
        "D": "Amazon EC2 Auto Scaling 그룹을 사용하여 워크로드를 분산합니다."
      },
      "eng": {
        "A": "Scale out the nodes by tracking the memory usage.",
        "B": "Use the Kubernetes Cluster Autoscaler to manage the number of nodes in the cluster.",
        "C": "Use an AWS Lambda function to resize the EKS cluster automatically.",
        "D": "Use an Amazon EC2 Auto Scaling group to distribute the workload."
      }
    },
    "category": [
      "Container"
    ],
    "subcategory": [
      "EKS"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/132902-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "B"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 433,
    "question": {
      "kor": "회사는 Amazon Elastic Kubernetes Service(Amazon EKS)를 사용하여 컨테이너 애플리케이션을 실행합니다. 회사의 작업량은 하루 종일 일정하지 않습니다. 회사는 Amazon EKS가 워크로드에 따라 확장 및 축소되기를 원합니다.\n최소한의 운영 오버헤드로 이러한 요구 사항을 충족하는 단계 조합은 무엇입니까? (2개 선택)",
      "eng": "A company runs container applications by using Amazon Elastic Kubernetes Service (Amazon EKS). The company's workload is not consistent throughout the day. The company wants Amazon EKS to scale in and out according to the workload.\nWhich combination of steps will meet these requirements with the LEAST operational overhead? (Select TWO.)"
    },
    "choices": {
      "kor": {
        "A": "AWS Lambda 함수를 사용하여 EKS 클러스터의 크기를 조정합니다.",
        "B": "Kubernetes Metrics Server를 사용하여 수평적 포드 자동 확장을 활성화합니다.",
        "C": "Kubernetes Cluster Autoscaler를 사용하여 클러스터의 노드 수를 관리합니다.",
        "D": "Amazon API Gateway를 사용하여 Amazon EKS에 연결합니다.",
        "E": "AWS App Mesh를 사용하여 네트워크 활동을 관찰합니다."
      },
      "eng": {
        "A": "Use an AWS Lambda function to resize the EKS cluster.",
        "B": "Use the Kubernetes Metrics Server to activate horizontal pod autoscaling.",
        "C": "Use the Kubernetes Cluster Autoscaler to manage the number of nodes in the cluster.",
        "D": "Use Amazon API Gateway and connect it to Amazon EKS.",
        "E": "Use AWS App Mesh to observe network activity."
      }
    },
    "category": [
      "Container"
    ],
    "subcategory": [
      "EKS"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/109702-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "B",
      "C"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 434,
    "question": {
      "kor": "한 회사가 프로덕션 Amazon Elastic Kubernetes Service(Amazon EKS) 클러스터에서 실행될 애플리케이션을 개발하고 있습니다. EKS 클러스터에는 온디맨드 인스턴스로 프로비저닝되는 관리형 노드 그룹이 있습니다.\n회사에는 개발 작업을 위한 전용 EKS 클러스터가 필요합니다. 회사는 애플리케이션의 복원력을 테스트하기 위해 개발 클러스터를 자주 사용하지 않습니다. EKS 클러스터는 모든 노드를 관리해야 합니다.\n이러한 요구 사항을 가장 비용 효율적으로 충족하는 솔루션은 무엇입니까?",
      "eng": "A company is developing an application that will run on a production Amazon Elastic Kubernetes Service (Amazon EKS) cluster. The EKS cluster has managed node groups that are provisioned with On-Demand Instances.\nThe company needs a dedicated EKS cluster for development work. The company will use the development cluster infrequently to test the resiliency of the application. The EKS cluster must manage all the nodes.\nWhich solution will meet these requirements MOST cost-effectively?"
    },
    "choices": {
      "kor": {
        "A": "스팟 인스턴스만 포함하는 관리형 노드 그룹을 생성합니다.",
        "B": "두 개의 관리형 노드 그룹을 생성합니다. 온디맨드 인스턴스로 하나의 노드 그룹을 프로비저닝합니다. 스팟 인스턴스로 두 번째 노드 그룹을 프로비저닝합니다.",
        "C": "스팟 인스턴스를 사용하는 시작 구성이 있는 Auto Scaling 그룹을 생성합니다. EKS 클러스터에 노드를 추가하도록 사용자 데이터를 구성합니다.",
        "D": "온디맨드 인스턴스만 포함하는 관리형 노드 그룹을 생성합니다."
      },
      "eng": {
        "A": "Create a managed node group that contains only Spot Instances.",
        "B": "Create two managed node groups. Provision one node group with On-Demand Instances. Provision the second node group with Spot Instances.",
        "C": "Create an Auto Scaling group that has a launch configuration that uses Spot Instances. Configure the user data to add the nodes to the EKS cluster.",
        "D": "Create a managed node group that contains only On-Demand Instances."
      }
    },
    "category": [
      "Container"
    ],
    "subcategory": [
      "EKS"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/129827-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "A"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 271,
    "question": {
      "kor": "회사는 디지털 미디어 스트리밍 애플리케이션을 호스팅하기 위해 클러스터를 Amazon Elastic Kubernetes Service(Amazon EKS) 생성해야 합니다. EKS 클러스터는 저장을 위해 Amazon Elastic Block Store(Amazon EBS) 볼륨이 지원하는 관리형 노드 그룹을 사용합니다. 회사는 AWS Key Management Service(AWS KMS)에 저장된 고객 관리형 키를 사용하여 유휴 상태의 모든 데이터를 암호화해야 합니다.\n최소한의 운영 오버헤드로 이 요구 사항을 충족하는 작업 조합은 무엇입니까? (두 가지를 선택하세요.)",
      "eng": "A company needs to create an Amazon Elastic Kubernetes Service (Amazon EKS) cluster to host a digital media streaming application. The EKS cluster will use a managed node group that is backed by Amazon Elastic Block Store (Amazon EBS) volumes for storage. The company must encrypt all data at rest by using a customer managed key that is stored in AWS Key Management Service (AWS KMS).\nWhich combination of actions will meet this requirement with the LEAST operational overhead? (Choose two.)"
    },
    "choices": {
      "kor": {
        "A": "고객 관리 키를 사용하는 Kubernetes 플러그인을 사용하여 데이터 암호화를 수행합니다.",
        "B": "EKS 클러스터 생성 후 EBS 볼륨을 찾습니다. 고객 관리형 키를 사용하여 암호화를 활성화합니다.",
        "C": "EKS 클러스터가 생성될 AWS 리전에서 기본적으로 EBS 암호화를 활성화합니다. 고객 관리형 키를 기본 키로 선택합니다.",
        "D": "EKS 클러스터를 생성합니다. 고객 관리형 키에 대한 권한을 부여하는 정책이 있는 IAM 역할을 생성합니다. 역할을 EKS 클러스터와 연결합니다.",
        "E": "고객 관리형 키를 EKS 클러스터에 Kubernetes 비밀로 저장합니다. 고객 관리형 키를 사용하여 EBS 볼륨을 암호화합니다."
      },
      "eng": {
        "A": "Use a Kubernetes plugin that uses the customer managed key to perform data encryption.",
        "B": "After creation of the EKS cluster, locate the EBS volumes. Enable encryption by using the customer managed key.",
        "C": "Enable EBS encryption by default in the AWS Region where the EKS cluster will be created. Select the customer managed key as the default key.",
        "D": "Create the EKS cluster. Create an IAM role that has a policy that grants permission to the customer managed key. Associate the role with the EKS cluster.",
        "E": "Store the customer managed key as a Kubernetes secret in the EKS cluster. Use the customer managed key to encrypt the EBS volumes."
      }
    },
    "category": [
      "Container"
    ],
    "subcategory": [
      "EBS",
      "EKS"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/102135-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "C",
      "D"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 138,
    "question": {
      "kor": "회사는 온프레미스에서 다중 계층 웹 애플리케이션을 실행하고 있습니다. 웹 애플리케이션은 컨테이너화되어 있으며 사용자 레코드가 포함된 PostgreSQL 데이터베이스에 연결된 여러 Linux 호스트에서 실행됩니다. 인프라 및 용량 계획을 유지 관리하는 운영 오버헤드는 회사의 성장을 제한하고 있습니다. 솔루션 설계자는 애플리케이션의 인프라를 개선해야 합니다.\n이를 달성하기 위해 솔루션 설계자는 어떤 작업 조합을 수행해야 합니까? (두 가지를 선택하세요.)",
      "eng": "A company is running a multi-tier web application on premises. The web application is containerized and runs on a number of Linux hosts connected to a PostgreSQL database that contains user records. The operational overhead of maintaining the infrastructure and capacity planning is limiting the company's growth. A solutions architect must improve the application's infrastructure.\nWhich combination of actions should the solutions architect take to accomplish this? (Choose two.)"
    },
    "choices": {
      "kor": {
        "A": "PostgreSQL 데이터베이스를 Amazon Aurora로 마이그레이션합니다.",
        "B": "Amazon EC2 인스턴스에서 호스팅할 웹 애플리케이션을 마이그레이션합니다.",
        "C": "웹 애플리케이션 콘텐츠에 대한 Amazon CloudFront 배포를 설정합니다.",
        "D": "웹 애플리케이션과 PostgreSQL 데이터베이스 간에 Amazon ElastiCache를 설정합니다.",
        "E": "Amazon Elastic Container Service(Amazon ECS)를 사용하여 AWS Fargate에서 호스팅할 웹 애플리케이션을 마이그레이션합니다."
      },
      "eng": {
        "A": "Migrate the PostgreSQL database to Amazon Aurora.",
        "B": "Migrate the web application to be hosted on Amazon EC2 instances.",
        "C": "Set up an Amazon CloudFront distribution for the web application content.",
        "D": "Set up Amazon ElastiCache between the web application and the PostgreSQL database.",
        "E": "Migrate the web application to be hosted on AWS Fargate with Amazon Elastic Container Service (Amazon ECS)."
      }
    },
    "category": [
      "Container",
      "Database"
    ],
    "subcategory": [
      "Aurora",
      "Fargate"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/86658-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "A",
      "E"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 406,
    "question": {
      "kor": "한 회사가 AWS에서 새로운 기계 학습(ML) 모델 솔루션을 개발하고 있습니다. 모델은 시작 시 Amazon S3에서 약 1GB의 모델 데이터를 가져와 메모리에 로드하는 독립적인 마이크로서비스로 개발됩니다. 사용자는 비동기 API를 통해 모델에 액세스합니다. 사용자는 요청 또는 요청 배치를 보내고 결과를 보낼 위치를 지정할 수 있습니다.\n회사는 수백 명의 사용자에게 모델을 제공합니다. 모델의 사용 패턴이 불규칙합니다. 일부 모델은 며칠 또는 몇 주 동안 사용하지 않을 수 있습니다. 다른 모델은 한 번에 수천 개의 요청 배치를 수신할 수 있습니다.\n이러한 요구 사항을 충족하기 위해 솔루션 설계자는 어떤 디자인을 권장해야 합니까?",
      "eng": "A company is developing a new machine learning (ML) model solution on AWS. The models are developed as independent microservices that fetch approximately 1 GB of model data from Amazon S3 at startup and load the data into memory. Users access the models through an asynchronous API. Users can send a request or a batch of requests and specify where the results should be sent.\nThe company provides models to hundreds of users. The usage patterns for the models are irregular. Some models could be unused for days or weeks.\nOther models could receive batches of thousands of requests at a time.\nWhich design should a solutions architect recommend to meet these requirements?"
    },
    "choices": {
      "kor": {
        "A": "API의 요청을 Network Load Balancer(NLB)로 보냅니다. NLB에서 호출하는 AWS Lambda 함수로 모델을 배포합니다.",
        "B": "API의 요청을 Application Load Balancer(ALB)로 보냅니다. Amazon Simple Queue Service(Amazon SQS) 대기열에서 읽는 Amazon Elastic Container Service(Amazon ECS) 서비스로 모델을 배포합니다. AWS App Mesh를 사용하여 SQS 대기열 크기에 따라 ECS 클러스터의 인스턴스를 확장합니다.",
        "C": "API의 요청을 Amazon Simple Queue Service(Amazon SQS) 대기열로 보냅니다. SQS 이벤트에 의해 호출되는 AWS Lambda 함수로 모델을 배포합니다. AWS Auto Scaling을 사용하여 SQS 대기열 크기에 따라 Lambda 함수의 vCPU 수를 늘립니다.",
        "D": "API의 요청을 Amazon Simple Queue Service(Amazon SQS) 대기열로 보냅니다. 대기열에서 읽는 Amazon Elastic Container Service(Amazon ECS) 서비스로 모델을 배포합니다. 대기열 크기에 따라 서비스의 클러스터와 복사본 모두에 대해 Amazon ECS에서 AWS Auto Scaling을 활성화합니다."
      },
      "eng": {
        "A": "Direct the requests from the API to a Network Load Balancer (NLB). Deploy the models as AWS Lambda functions that are invoked by the NLB.",
        "B": "Direct the requests from the API to an Application Load Balancer (ALB). Deploy the models as Amazon Elastic Container Service (Amazon ECS) services that read from an Amazon Simple Queue Service (Amazon SQS) queue. Use AWS App Mesh to scale the instances of the ECS cluster based on the SQS queue size.",
        "C": "Direct the requests from the API into an Amazon Simple Queue Service (Amazon SQS) queue. Deploy the models as AWS Lambda functions that are invoked by SQS events. Use AWS Auto Scaling to increase the number of vCPUs for the Lambda functions based on the SQS queue size.",
        "D": "Direct the requests from the API into an Amazon Simple Queue Service (Amazon SQS) queue. Deploy the models as Amazon Elastic Container Service (Amazon ECS) services that read from the queue. Enable AWS Auto Scaling on Amazon ECS for both the cluster and copies of the service based on the queue size."
      }
    },
    "category": [
      "Container",
      "SQS"
    ],
    "subcategory": [],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/109280-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "D"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 449,
    "question": {
      "kor": "한 회사에서 Java Spring Boot 애플리케이션을 프라이빗 서브넷의 Amazon Elastic Kubernetes Service(Amazon EKS)에서 실행되는 포드로 배포했습니다. 애플리케이션은 Amazon DynamoDB 테이블에 데이터를 써야 합니다. 솔루션 설계자는 애플리케이션이 인터넷에 트래픽을 노출하지 않고 DynamoDB 테이블과 상호 작용할 수 있는지 확인해야 합니다.\n이 목표를 달성하기 위해 솔루션 설계자는 어떤 단계 조합을 수행해야 합니까? (두 가지를 선택하세요.)",
      "eng": "A company has deployed a Java Spring Boot application as a pod that runs on Amazon Elastic Kubernetes Service (Amazon EKS) in private subnets. The application needs to write data to an Amazon DynamoDB table. A solutions architect must ensure that the application can interact with the DynamoDB table without exposing traffic to the internet.\nWhich combination of steps should the solutions architect take to accomplish this goal? (Choose two.)"
    },
    "choices": {
      "kor": {
        "A": "EKS 포드에 충분한 권한이 있는 IAM 역할을 연결합니다.",
        "B": "EKS 포드에 충분한 권한이 있는 IAM 사용자를 연결합니다.",
        "C": "프라이빗 서브넷의 네트워크 ACL을 통해 DynamoDB 테이블에 대한 아웃바운드 연결을 허용합니다.",
        "D": "DynamoDB용 VPC 엔드포인트를 생성합니다.",
        "E": "Java Spring Boot 코드에 액세스 키를 삽입합니다."
      },
      "eng": {
        "A": "Attach an IAM role that has sufficient privileges to the EKS pod.",
        "B": "Attach an IAM user that has sufficient privileges to the EKS pod.",
        "C": "Allow outbound connectivity to the DynamoDB table through the private subnets’ network ACLs.",
        "D": "Create a VPC endpoint for DynamoDB.",
        "E": "Embed the access keys in the Java Spring Boot code."
      }
    },
    "category": [
      "Container",
      "VPC endpoint"
    ],
    "subcategory": [],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/95310-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "A",
      "D"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 531,
    "question": {
      "kor": "회사는 Amazon EC2 인스턴스에서 마이크로서비스 애플리케이션을 실행하고 있습니다. 이 회사는 확장성을 위해 애플리케이션을 Amazon Elastic Kubernetes Service(Amazon EKS) 클러스터로 마이그레이션하려고 합니다. 회사는 보안 규정 준수를 유지하기 위해 엔드포인트 프라이빗 액세스를 true로 설정하고 엔드포인트 퍼블릭 액세스를 false로 설정하여\nAmazon EKS 제어 플레인을 구성해야 합니다. 회사는 또한 사설 서브넷에 데이터 플레인을 배치해야 합니다. 그러나 회사는 노드가 클러스터에 가입할 수 없기 때문에 오류 알림을 받았습니다.\n노드가 클러스터에 가입하도록 허용하는 솔루션은 무엇입니까?",
      "eng": "A company is running a microservices application on Amazon EC2 instances. The company wants to migrate the application to an Amazon Elastic Kubernetes Service (Amazon EKS) cluster for scalability. The company must configure the Amazon EKS control plane with endpoint private access set to true and endpoint public access set to false to maintain security compliance. The company must also put the data plane in private subnets. However, the company has received error notifications because the node cannot join the cluster.\nWhich solution will allow the node to join the cluster?"
    },
    "choices": {
      "kor": {
        "A": "AWS Identity and Access Management(IAM)에서 필요한 권한을 AmazonEKSNodeRole IAM 역할에 부여합니다.",
        "B": "노드가 컨트롤 플레인에 액세스할 수 있도록 인터페이스 VPC 엔드포인트를 생성합니다.",
        "C": "퍼블릭 서브넷에서 노드를 재생성합니다. EC2 노드에 대한 보안 그룹을 제한합니다.",
        "D": "노드의 보안 그룹에서 아웃바운드 트래픽을 허용합니다."
      },
      "eng": {
        "A": "Grant the required permission in AWS Identity and Access Management (IAM) to the AmazonEKSNodeRole IAM role.",
        "B": "Create interface VPC endpoints to allow nodes to access the control plane.",
        "C": "Recreate nodes in the public subnet. Restrict security groups for EC2 nodes.",
        "D": "Allow outbound traffic in the security group of the nodes."
      }
    },
    "category": [
      "Container",
      "VPC endpoint"
    ],
    "subcategory": [],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/109534-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "B"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 583,
    "question": {
      "kor": "솔루션 아키텍트는 공급업체가 Docker 컨테이너 이미지로 제공하는 애플리케이션에 대한 아키텍처를 설계해야 합니다. 컨테이너에는 임시 파일용으로 사용할 수 있는 50GB의 스토리지가 필요합니다. 인프라는 서버리스여야 합니다.\n최소한의 운영 오버헤드로 이러한 요구 사항을 충족하는 솔루션은 무엇입니까?",
      "eng": "A solutions architect needs to design the architecture for an application that a vendor provides as a Docker container image. The container needs 50 GB of storage available for temporary files. The infrastructure must be serverless.\nWhich solution meets these requirements with the LEAST operational overhead?"
    },
    "choices": {
      "kor": {
        "A": "50GB가 넘는 공간이 있는 Amazon S3 탑재 볼륨과 함께 Docker 컨테이너 이미지를 사용하는 AWS Lambda 함수를 생성합니다.",
        "B": "50GB가 넘는 공간을 가진 Amazon Elastic Block Store(Amazon EBS) 볼륨과 함께 Docker 컨테이너 이미지를 사용하는 AWS Lambda 함수를 생성합니다.",
        "C": "AWS Fargate 시작 유형을 사용하는 Amazon Elastic Container Service(Amazon ECS) 클러스터를 생성합니다. Amazon Elastic File System(Amazon EFS) 볼륨을사용하여 컨테이너 이미지에 대한 작업 정의를 생성합니다. 해당 작업 정의를 사용하여 서비스를 생성합니다.",
        "D": "50GB가 넘는 공간을 가진 Amazon Elastic Block Store(Amazon EBS) 볼륨과 함께 Amazon EC2 시작 유형을 사용하는 Amazon Elastic Container Service(Amazon ECS) 클러스터를 생성합니다. 컨테이너 이미지에 대한 작업 정의를 생성합니다. 해당 작업 정의를 사용하여 서비스를 생성합니다."
      },
      "eng": {
        "A": "Create an AWS Lambda function that uses the Docker container image with an Amazon S3 mounted volume that has more than 50 GB of space.",
        "B": "Create an AWS Lambda function that uses the Docker container image with an Amazon Elastic Block Store (Amazon EBS) volume that has more than 50 GB of space.",
        "C": "Create an Amazon Elastic Container Service (Amazon ECS) cluster that uses the AWS Fargate launch type. Create a task definition for the container image with an Amazon Elastic File System (Amazon EFS) volume. Create a service with that task definition.",
        "D": "Create an Amazon Elastic Container Service (Amazon ECS) cluster that uses the Amazon EC2 launch type with an Amazon Elastic Block Store (Amazon EBS) volume that has more than 50 GB of space. Create a task definition for the container image. Create a service with that task definition."
      }
    },
    "category": [
      "Container"
    ],
    "subcategory": [],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/132950-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "C"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 599,
    "question": {
      "kor": "한 회사에서 컨테이너화된 애플리케이션 워크로드를 3개의 가용 영역에 걸쳐 VPC에 배포하려고 합니다. 회사에는 가용 영역 전반에 걸쳐 가용성이 높은 솔루션이 필요합니다. 솔루션을 사용하려면 애플리케이션을 최소한으로 변경해야 합니다.\n최소한의 운영 오버헤드로 이러한 요구 사항을 충족하는 솔루션은 무엇입니까?",
      "eng": "A company wants to deploy its containerized application workloads to a VPC across three Availability Zones. The company needs a solution that is highly available across Availability Zones. The solution must require minimal changes to the application.\nWhich solution will meet these requirements with the LEAST operational overhead?"
    },
    "choices": {
      "kor": {
        "A": "Amazon Elastic Container Service(Amazon ECS)를 사용하세요. 대상 추적 조정을 사용하도록 Amazon ECS 서비스 Auto Scaling을 구성합니다. 최소 용량을 3으로 설정합니다. 가용 영역 속성을 사용하여 분산되도록 작업 배치 전략 유형을 설정합니다.",
        "B": "Amazon Elastic Kubernetes Service(Amazon EKS) 자체 관리형 노드를 사용합니다. 대상 추적 조정을 사용하도록 Application Auto Scaling을 구성합니다. 최소 용량을 3으로 설정하세요.",
        "C": "Amazon EC2 예약 인스턴스를 사용하십시오. 분산 배치 그룹에서 3개의 EC2 인스턴스를 시작합니다. 대상 추적 조정을 사용하도록 Auto Scaling 그룹을 구성합니다. 최소 용량을 3으로 설정하세요.",
        "D": "AWS Lambda 함수를 사용하십시오. VPC에 연결하도록 Lambda 함수를 구성합니다. Lambda를 확장 가능한 대상으로 사용하도록 Application Auto Scaling을 구성합니다. 최소 용량을 3으로 설정하세요."
      },
      "eng": {
        "A": "Use Amazon Elastic Container Service (Amazon ECS). Configure Amazon ECS Service Auto Scaling to use target tracking scaling. Set the minimum capacity to 3. Set the task placement strategy type to spread with an Availability Zone attribute.",
        "B": "Use Amazon Elastic Kubernetes Service (Amazon EKS) self-managed nodes. Configure Application Auto Scaling to use target tracking scaling. Set the minimum capacity to 3.",
        "C": "Use Amazon EC2 Reserved Instances. Launch three EC2 instances in a spread placement group. Configure an Auto Scaling group to use target tracking scaling. Set the minimum capacity to 3.",
        "D": "Use an AWS Lambda function. Configure the Lambda function to connect to a VPC. Configure Application Auto Scaling to use Lambda as a scalable target. Set the minimum capacity to 3."
      }
    },
    "category": [
      "Container"
    ],
    "subcategory": [],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/132948-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "A"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 604,
    "question": {
      "kor": "한 제조 회사가 AWS에서 보고서 생성 애플리케이션을 실행하고 있습니다. 애플리케이션은 약 20분 안에 각 보고서를 생성합니다. 애플리케이션은 단일 Amazon EC2 인스턴스에서 실행되는 모놀리스로 구축되었습니다. 애플리케이션에는 긴밀하게 결합된 모듈을 자주 업데이트해야 합니다. 회사에서 새로운 기능을 추가하면 애플리케이션을 유지 관리하기가 복잡해집니다.\n회사에서 소프트웨어 모듈을 패치할 때마다 애플리케이션에 가동 중지 시간이 발생합니다. 보고서 생성은 중단된 후에 처음부터 다시 시작되어야 합니다. 회사는 애플리케이션이 유연하고 확장 가능하며 점진적으로 개선될 수 있도록 애플리케이션을 재설계하려고 합니다. 회사는 애플리케이션 가동 중지 시간을 최소화하려고 합니다.\n어떤 솔루션이 이러한 요구 사항을 충족합니까?",
      "eng": "A manufacturing company runs its report generation application on AWS. The application generates each report in about 20 minutes. The application is built as a monolith that runs on a single Amazon EC2 instance. The application requires frequent updates to its tightly coupled modules. The application becomes complex to maintain as the company adds new features.\nEach time the company patches a software module, the application experiences downtime. Report generation must restart from the beginning after any interruptions. The company wants to redesign the application so that the application can be flexible, scalable, and gradually improved. The company wants to minimize application downtime.\nWhich solution will meet these requirements?"
    },
    "choices": {
      "kor": {
        "A": "AWS Lambda에서 최대 프로비저닝 동시성을 갖춘 단일 함수로 애플리케이션을 실행합니다.",
        "B": "스팟 집합 기본 할당 전략을 사용하여 Amazon EC2 스팟 인스턴스에서 애플리케이션을 마이크로서비스로 실행합니다.",
        "C": "서비스 자동 조정을 통해 Amazon Elastic Container Service(Amazon ECS)에서 애플리케이션을 마이크로서비스로 실행합니다.",
        "D": "일괄 배포 전략을 사용하여 AWS Elastic Beanstalk에서 애플리케이션을 단일 애플리케이션 환경으로 실행합니다."
      },
      "eng": {
        "A": "Run the application on AWS Lambda as a single function with maximum provisioned concurrency.",
        "B": "Run the application on Amazon EC2 Spot Instances as microservices with a Spot Fleet default allocation strategy.",
        "C": "Run the application on Amazon Elastic Container Service (Amazon ECS) as microservices with service auto scaling.",
        "D": "Run the application on AWS Elastic Beanstalk as a single application environment with an all-at-once deployment strategy."
      }
    },
    "category": [
      "Container"
    ],
    "subcategory": [],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/132893-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "C"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 614,
    "question": {
      "kor": "한 회사에서 Amazon Elastic Kubernetes Service(Amazon EKS)에 배포할 마이크로서비스 기반 애플리케이션을 개발하고 있습니다. 이 애플리케이션 내의 마이크로서비스는 서로 원활하게 상호 작용해야 합니다. 회사는 애플리케이션을 효과적으로 관찰하여 향후 성능 문제를 식별할 수 있도록 하는 것을 목표로 합니다.\n이러한 요구 사항을 가장 잘 충족하는 솔루션은 무엇입니까?",
      "eng": "A company is developing a microservices-based application to be deployed on Amazon Elastic Kubernetes Service (Amazon EKS). The microservices within this application need to interact with each other seamlessly. The company aims to ensure future performance issues can be identified by effectively observing the application.\nWhich solution best meets these requirements?"
    },
    "choices": {
      "kor": {
        "A": "Amazon ElastiCache를 활용하여 마이크로서비스로 전달되는 요청 수를 최소화하도록 애플리케이션을 구성합니다.",
        "B": "Amazon CloudWatch Container Insights를 설정하여 EKS 클러스터에서 지표를 수집하고 AWS X-Ray를 사용하여 마이크로서비스 간 요청을 추적합니다.",
        "C": "AWS CloudTrail을 설정하여 API 호출을 모니터링하고 마이크로서비스 상호 작용을 관찰하기 위한 Amazon QuickSight 대시보드를 구성합니다.",
        "D": "AWS Trusted Advisor를 활용하여 애플리케이션 성능을 분석합니다."
      },
      "eng": {
        "A": "Configure the application to leverage Amazon ElastiCache to minimize the number of requests directed to the microservices.",
        "B": "Set up Amazon CloudWatch Container Insights to gather metrics from the EKS clusters and employ AWS X-Ray for tracing the requests among the microservices.",
        "C": "Establish AWS CloudTrail to monitor the API calls and construct an Amazon QuickSight dashboard for observing microservice interactions.",
        "D": "Utilize AWS Trusted Advisor to analyze the application's performance."
      }
    },
    "category": [
      "Container"
    ],
    "subcategory": [],
    "rote_memorization": false,
    "answer": [
      "B"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 636,
    "question": {
      "kor": "회사에는 로컬 데이터 센터 내에 Docker 컨테이너를 활용하는 애플리케이션이 있습니다. 애플리케이션은 컨테이너 인스턴스가 활용하는 해당 호스트의 볼륨에 영구 데이터를 저장하는 컨테이너 호스트에서 작동합니다.\n회사는 서버나 스토리지 인프라 관리를 피하기 위해 이 애플리케이션을 완전 관리형 서비스로 마이그레이션하는 것을 목표로 하고 있습니다.\n이러한 요구 사항에 맞는 솔루션은 무엇입니까?",
      "eng": "A company has an application utilizing Docker containers within its local data center. The application operates on a container host storing persistent data in a volume on that host, which the container instances utilize.\nThe company aims to migrate this application to a fully managed service, wanting to avoid managing servers or storage infrastructure.\nWhich solution aligns with these requirements?"
    },
    "choices": {
      "kor": {
        "A": "자체 관리형 노드를 사용하는 Amazon Elastic Kubernetes Service(Amazon EKS)를 활용합니다. Amazon EC2 인스턴스에 연결된 Amazon Elastic Block Store(Amazon EBS) 볼륨을 설정합니다. EBS 볼륨을 컨테이너 내에 탑재된 영구 볼륨으로 활용합니다.",
        "B": "AWS Fargate 시작 유형을 사용하여 Amazon Elastic Container Service(Amazon ECS)를 사용합니다. Amazon Elastic File System(Amazon EFS) 볼륨을 설정합니다. EFS 볼륨을 컨테이너 내에 탑재된 영구 스토리지 볼륨으로 포함합니다.",
        "C": "AWS Fargate 시작 유형과 함께 Amazon Elastic Container Service(Amazon ECS)를 활용합니다. Amazon S3 버킷을 생성하고 S3 버킷을 컨테이너 내에 탑재된 영구 스토리지 볼륨으로 매핑합니다.",
        "D": "Amazon EC2 시작 유형과 함께 Amazon Elastic Container Service(Amazon ECS)를 사용하십시오. Amazon Elastic File System(Amazon EFS) 볼륨을 설정합니다. EFS 볼륨을 컨테이너 내에 탑재된 영구 스토리지 볼륨으로 추가합니다."
      },
      "eng": {
        "A": "Utilize Amazon Elastic Kubernetes Service (Amazon EKS) employing self-managed nodes. Set up an Amazon Elastic Block Store (Amazon EBS) volume connected to an Amazon EC2 instance. Utilize the EBS volume as a persistent volume mounted within the containers.",
        "B": "Employ Amazon Elastic Container Service (Amazon ECS) using an AWS Fargate launch type. Establish an Amazon Elastic File System (Amazon EFS) volume. Include the EFS volume as a persistent storage volume mounted within the containers.",
        "C": "Utilize Amazon Elastic Container Service (Amazon ECS) with an AWS Fargate launch type. Create an Amazon S3 bucket and map the S3 bucket as a persistent storage volume mounted within the containers.",
        "D": "Use Amazon Elastic Container Service (Amazon ECS) with an Amazon EC2 launch type. Establish an Amazon Elastic File System (Amazon EFS) volume. Add the EFS volume as a persistent storage volume mounted within the containers."
      }
    },
    "category": [
      "Container"
    ],
    "subcategory": [
      "Fargate"
    ],
    "rote_memorization": false,
    "answer": [
      "B"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 654,
    "question": {
      "kor": "회사는 회사 데이터 센터의 Kubernetes 클러스터에서 컨테이너 애플리케이션을 실행합니다. 애플리케이션은 AMQP(Advanced Message Queuing Protocol)를 사용하여 메시지 큐와 통신합니다. 데이터 센터는 회사의 확장되는 비즈니스 요구 사항을 충족할 만큼 빠르게 확장할 수 없습니다. 회사는 워크로드를 AWS로 마이그레이션하려고 합니다.\n최소한의 운영 오버헤드로 이러한 요구 사항을 충족하는 솔루션은 무엇입니까?",
      "eng": "A company runs a container application on a Kubernetes cluster in the company's data center. The application uses Advanced Message Queuing Protocol (AMQP) to communicate with a message queue. The data center cannot scale fast enough to meet the company’s expanding business needs. The company wants to migrate the workloads to AWS.\nWhich solution will meet these requirements with the LEAST operational overhead?"
    },
    "choices": {
      "kor": {
        "A": "컨테이너 애플리케이션을 Amazon Elastic Container Service(Amazon ECS)로 마이그레이션합니다. Amazon Simple Queue Service(Amazon SQS)를 사용하여 메시지를 검색합니다.",
        "B": "컨테이너 애플리케이션을 Amazon Elastic Kubernetes Service(Amazon EKS)로 마이그레이션합니다. Amazon MQ를 사용하여 메시지를 검색합니다.",
        "C": "고가용성 Amazon EC2 인스턴스를 사용하여 애플리케이션을 실행합니다. Amazon MQ를 사용하여 메시지를 검색합니다.",
        "D": "AWS Lambda 함수를 사용하여 애플리케이션을 실행합니다. Amazon Simple Queue Service(Amazon SQS)를 사용하여 메시지를 검색합니다."
      },
      "eng": {
        "A": "Migrate the container application to Amazon Elastic Container Service (Amazon ECS). Use Amazon Simple Queue Service (Amazon SQS) to retrieve the messages.",
        "B": "Migrate the container application to Amazon Elastic Kubernetes Service (Amazon EKS). Use Amazon MQ to retrieve the messages.",
        "C": "Use highly available Amazon EC2 instances to run the application. Use Amazon MQ to retrieve the messages.",
        "D": "Use AWS Lambda functions to run the application. Use Amazon Simple Queue Service (Amazon SQS) to retrieve the messages."
      }
    },
    "category": [
      "Container"
    ],
    "subcategory": [
      "EKS"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/135266-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "B"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 679,
    "question": {
      "kor": "한 회사가 AWS Fargate 클러스터를 사용하여 Amazon Elastic Kubernetes Service(Amazon EKS)에 새 애플리케이션을 배포하고 있습니다. 애플리케이션에는 데이터 지속성을 위한 스토리지 솔루션이 필요합니다 솔루션은 가용성이 높고 내결함성이 있어야 합니다 또한 솔루션은 여러 애플리케이션 컨테이너 간에 공유되어야 합니다.\n최소한의 운영 오버헤드로 이러한 요구 사항을 충족하는 솔루션은 무엇입니까?",
      "eng": "A company is deploying a new application to Amazon Elastic Kubernetes Service (Amazon EKS) with an AWS Fargate cluster. The application needs a storage solution for data persistence. The solution must be highly available and fault tolerant. The solution also must be shared between multiple application containers.\nWhich solution will meet these requirements with the LEAST operational overhead?"
    },
    "choices": {
      "kor": {
        "A": "EKS 작업자 노드가 배치된 동일한 가용 영역에 Amazon Elastic Block Store(Amazon EBS) 볼륨을 생성합니다. EKS 클러스터의 StorageClass 객체에 볼륨을 등록합니다. EBS 다중 연결을 사용하여 컨테이너 간에 데이터를 공유합니다.",
        "B": "Amazon Elastic File System(Amazon EFS) 파일 시스템을 생성합니다. EKS 클러스터의 StorageClass 객체에 파일 시스템을 등록합니다. 모든 컨테이너에 동일한 파일 시스템을 사용합니다.",
        "C": "Amazon Elastic Block Store(Amazon EBS) 볼륨을 생성합니다. EKS 클러스터의 StorageClass 객체에 볼륨을 등록합니다. 모든 용기에 동일한 용량을 사용하십시오.",
        "D": "EKS 작업자 노드가 배치된 동일한 가용 영역에 Amazon Elastic File System(Amazon EFS) 파일 시스템을 생성합니다. EKS 클러스터의 StorageClass 객체에 파일 시스템을 등록합니다. 파일 시스템 간에 데이터를 동기화하는 AWS Lambda 함수를 생성합니다."
      },
      "eng": {
        "A": "Create Amazon Elastic Block Store (Amazon EBS) volumes in the same Availability Zones where EKS worker nodes are placed. Register the volumes in a StorageClass object on an EKS cluster. Use EBS Multi-Attach to share the data between containers.",
        "B": "Create an Amazon Elastic File System (Amazon EFS) file system. Register the file system in a StorageClass object on an EKS cluster. Use the same file system for all containers.",
        "C": "Create an Amazon Elastic Block Store (Amazon EBS) volume. Register the volume in a StorageClass object on an EKS cluster. Use the same volume for all containers.",
        "D": "Create Amazon Elastic File System (Amazon EFS) file systems in the same Availability Zones where EKS worker nodes are placed. Register the file systems in a StorageClass object on an EKS cluster. Create an AWS Lambda function to synchronize the data between file systems."
      }
    },
    "category": [
      "Container"
    ],
    "subcategory": [
      "EFS"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/132861-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "B"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 684,
    "question": {
      "kor": "한 회사에서 Amazon Elastic Container Service(Amazon ECS)를 사용하여 하이브리드 환경에서 온프레미스 애플리케이션을 실행하려고 합니다. 애플리케이션은 현재 온프레미스 컨테이너에서 실행됩니다.\n회사에는 온프레미스, 하이브리드 또는 클라우드 환경에서 확장할 수 있는 단일 컨테이너 솔루션이 필요합니다. 회사는 AWS 클라우드에서 새로운 애플리케이션 컨테이너를 실행해야 하며 HTTP 트래픽용 로드 밸런서를 사용해야 합니다.\n이러한 요구 사항을 충족하는 작업 조합은 무엇입니까? (2개를 선택하세요.)",
      "eng": "A company wants to use Amazon Elastic Container Service (Amazon ECS) to run its on-premises application in a hybrid environment. The application currently runs on containers on premises.\nThe company needs a single container solution that can scale in an on-premises, hybrid, or cloud environment. The company must run new application containers in the AWS Cloud and must use a load balancer for HTTP traffic.\nWhich combination of actions will meet these requirements? (Choose two.)"
    },
    "choices": {
      "kor": {
        "A": "클라우드 애플리케이션 컨테이너에 대해 AWS Fargate 시작 유형을 사용하는 ECS 클러스터를 설정합니다. 온프레미스 애플리케이션 컨테이너에는 Amazon ECS Anywhere 외부 시작 유형을 사용합니다.",
        "B": "클라우드 ECS 서비스를 위한 Application Load Balancer를 설정합니다.",
        "C": "클라우드 ECS 서비스를 위한 Network Load Balancer를 설정합니다.",
        "D": "AWS Fargate 시작 유형을 사용하는 ECS 클러스터를 설정합니다. 클라우드 애플리케이션 컨테이너와 온프레미스 애플리케이션 컨테이너에는 Fargate를 사용하세요.",
        "E": "클라우드 애플리케이션 컨테이너에 Amazon EC2 시작 유형을 사용하는 ECS 클러스터를 설정합니다. 온프레미스 애플리케이션 컨테이너에 대해 AWS Fargate 시작 유형과 함께",
        "F": "Amazon ECS Anywhere를 사용하십시오."
      },
      "eng": {
        "A": "Set up an ECS cluster that uses the AWS Fargate launch type for the cloud application containers. Use an Amazon ECS Anywhere external launch type for the on-premises application containers.",
        "B": "Set up an Application Load Balancer for cloud ECS services.",
        "C": "Set up a Network Load Balancer for cloud ECS services.",
        "D": "Set up an ECS cluster that uses the AWS Fargate launch type. Use Fargate for the cloud application containers and the on-premises application containers.",
        "E": "Set up an ECS cluster that uses the Amazon EC2 launch type for the cloud application containers. Use Amazon ECS Anywhere with an AWS Fargate launch type for the on-premises application containers."
      }
    },
    "category": [
      "Container"
    ],
    "subcategory": [],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/140210-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "A",
      "B"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 736,
    "question": {
      "kor": "회사는 일주일의 첫날이 되기 전에 매주 중요한 데이터 분석 작업을 실행합니다. 작업을 완료하려면 분석을 완료하는 데 최소 1시간이 필요합니다. 작업은 상태를 저장하며 중단을 허용할 수 없습니다. 회사는 AWS에서 작업을 실행하기 위한 솔루션이 필요합니다.\n이러한 요구 사항을 충족하는 솔루션은 무엇입니까?",
      "eng": "A company runs a critical data analysis job each week before the first day of the work week. The job requires at least 1 hour to complete the analysis. The job is stateful and cannot tolerate interruptions. The company needs a solution to run the job on AWS.\nWhich solution will meet these requirements?"
    },
    "choices": {
      "kor": {
        "A": "작업에 대한 컨테이너를 생성합니다. Amazon EventBridge Scheduler를 사용하여 Amazon Elastic Container Service(Amazon ECS) 클러스터에서 AWS Fargate 작업으로 실행되도록 작업을 예약합니다.",
        "B": "AWS Lambda 함수에서 실행되도록 작업을 구성합니다. Amazon EventBridge에서 예약 규칙을 생성하여 Lambda 함수를 호출합니다.",
        "C": "Amazon Linux를 실행하는 Amazon EC2 스팟 인스턴스의 Auto Scaling 그룹을 구성합니다. 분석을 실행하려면 인스턴스에 crontab 항목을 구성하십시오.",
        "D": "작업을 실행하도록 AWS DataSync 작업을 구성합니다. 일정에 따라 작업을 실행하도록 cron 표현식을 구성합니다."
      },
      "eng": {
        "A": "Create a container for the job. Schedule the job to run as an AWS Fargate task on an Amazon Elastic Container Service (Amazon ECS) cluster by using Amazon EventBridge Scheduler.",
        "B": "Configure the job to run in an AWS Lambda function. Create a scheduled rule in Amazon EventBridge to invoke the Lambda function.",
        "C": "Configure an Auto Scaling group of Amazon EC2 Spot Instances that run Amazon Linux. Configure a crontab entry on the instances to run the analysis.",
        "D": "Configure an AWS DataSync task to run the job. Configure a cron expression to run the task on a schedule."
      }
    },
    "category": [
      "Container"
    ],
    "subcategory": [],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/140209-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "A"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 750,
    "question": {
      "kor": "회사의 실시간에 가까운 스트리밍 애플리케이션이 AWS에서 실행되고 있습니다. 데이터가 수집되면 데이터에 대한 작업이 실행되고 완료하는 데 30분이 걸립니다. 워크로드는 대량의 수신 데이터로 인해 높은 대기 시간을 경험하는 경우가 많습니다. 솔루션 설계자는 성능을 향상시키기 위해 확장 가능한 서버리스 솔루션을 설계해야 합니다.\n솔루션 설계자는 어떤 단계 조합을 수행해야 합니까? (2개를 선택하세요.)",
      "eng": "A company's near-real-time streaming application is running on AWS. As the data is ingested, a job runs on the data and takes 30 minutes to complete. The workload frequently experiences high latency due to large amounts of incoming data. A solutions architect needs to design a scalable and serverless solution to enhance performance.\nWhich combination of steps should the solutions architect take? (Choose two.)"
    },
    "choices": {
      "kor": {
        "A": "Amazon Kinesis Data Firehose를 사용하여 데이터를 수집하십시오.",
        "B": "AWS Step Functions와 함께 AWS Lambda를 사용하여 데이터를 처리합니다.",
        "C": "AWS Database Migration Service(AWS DMS)를 사용하여 데이터를 수집합니다.",
        "D": "Auto Scaling 그룹의 Amazon EC2 인스턴스를 사용하여 데이터를 처리합니다.",
        "E": "Amazon Elastic Container Service(Amazon ECS)와 함께 AWS Fargate를 사용하여 데이터를 처리합니다."
      },
      "eng": {
        "A": "Use Amazon Kinesis Data Firehose to ingest the data.",
        "B": "Use AWS Lambda with AWS Step Functions to process the data.",
        "C": "Use AWS Database Migration Service (AWS DMS) to ingest the data.",
        "D": "Use Amazon EC2 instances in an Auto Scaling group to process the data.",
        "E": "Use AWS Fargate with Amazon Elastic Container Service (Amazon ECS) to process the data."
      }
    },
    "category": [
      "Container",
      "Data Processing"
    ],
    "subcategory": [],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/137829-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "A",
      "E"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 846,
    "question": {
      "kor": "한 회사가 Amazon Elastic Kubernetes Service(Amazon EKS)에서 고객을 대상으로 하는 중요한 애플리케이션을 실행하고 있습니다. 애플리케이션에는 마이크로서비스 아키텍처가 있습니다. 회사는 중앙 위치에서 애플리케이션의 측정항목과 로그를 수집, 집계, 요약하는 솔루션을 구현해야 합니다.\n이러한 요구 사항을 충족하는 솔루션은 무엇입니까?",
      "eng": "A company runs a critical, customer-facing application on Amazon Elastic Kubernetes Service (Amazon EKS). The application has a microservices architecture. The company needs to implement a solution that collects, aggregates, and summarizes metrics and logs from the application in a centralized location.\nWhich solution meets these requirements?"
    },
    "choices": {
      "kor": {
        "A": "기존 EKS 클러스터에서 Amazon CloudWatch 에이전트를 실행합니다. CloudWatch 콘솔에서 지표와 로그를 봅니다.",
        "B": "기존 EKS 클러스터에서 AWS App Mesh를 실행합니다. App Mesh 콘솔에서 지표와 로그를 확인하세요.",
        "C": "데이터 이벤트를 캡처하도록 AWS CloudTrail을 구성합니다. Amazon OpenSearch Service를 사용하여 CloudTrail을 쿼리합니다.",
        "D": "기존 EKS 클러스터에 Amazon CloudWatch Container Insights를 구성합니다. CloudWatch 콘솔에서 지표와 로그를 봅니다."
      },
      "eng": {
        "A": "Run the Amazon CloudWatch agent in the existing EKS cluster. View the metrics and logs in the CloudWatch console.",
        "B": "Run AWS App Mesh in the existing EKS cluster. View the metrics and logs in the App Mesh console.",
        "C": "Configure AWS CloudTrail to capture data events. Query CloudTrail by using Amazon OpenSearch Service.",
        "D": "Configure Amazon CloudWatch Container Insights in the existing EKS cluster. View the metrics and logs in the CloudWatch console."
      }
    },
    "category": [
      "Container"
    ],
    "subcategory": [
      "CloudWatch Container Insights"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/121154-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "D"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 925,
    "question": {
      "kor": "회사는 Amazon Elastic Container Service(Amazon ECS)에서 워크로드를 실행합니다. ECS 작업 정의에서 사용하는 컨테이너 이미지는 CVE(Common Vulnerability and Exposures)를 검사해야 합니다. 생성된 새 컨테이너 이미지도 스캔해야 합니다.\n워크로드를 가장 적게 변경하여 이러한 요구 사항을 충족하는 솔루션은 무엇입니까?",
      "eng": "A company runs its workloads on Amazon Elastic Container Service (Amazon ECS). The container images that the ECS task definition uses need to be scanned for Common Vulnerabilities and Exposures (CVEs). New container images that are created also need to be scanned.\nWhich solution will meet these requirements with the FEWEST changes to the workloads?"
    },
    "choices": {
      "kor": {
        "A": "Amazon Elastic Container Registry(Amazon ECR)를 프라이빗 이미지 리포지토리로 사용하여 컨테이너 이미지를 저장하세요. ECR 기본 검사에 대한 푸시 필터 검사를 지정합니다.",
        "B": "컨테이너 이미지를 Amazon S3 버킷에 저장합니다. Amazon Macie를 사용하여 이미지를 스캔합니다. S3 이벤트 알림을 사용하여 s3:ObjectCreated:Put 이벤트 유형이 있는 모든 이벤트에 대해 Macie 스캔을 시작합니다.",
        "C": "Amazon Elastic Kubernetes Service(Amazon EKS)에 워크로드를 배포합니다. Amazon Elastic Container Registry(Amazon ECR)를 프라이빗 이미지 리포지토리로 사용합니다. ECR 강화 검사를 위해 푸시 필터에 대한 검사를 지정합니다.",
        "D": "버전 관리가 활성화된 Amazon S3 버킷에 컨테이너 이미지를 저장합니다. s3:ObjectCreated:* 이벤트에 대한 S3 이벤트 알림을 구성하여 AWS Lambda 함수를 호출합니다. Amazon Inspector 스캔을 시작하도록 Lambda 함수를 구성합니다."
      },
      "eng": {
        "A": "Use Amazon Elastic Container Registry (Amazon ECR) as a private image repository to store the container images. Specify scan on push filters for the ECR basic scan.",
        "B": "Store the container images in an Amazon S3 bucket. Use Amazon Macie to scan the images. Use an S3 Event Notification to initiate a Macie scan for every event with an s3:ObjectCreated:Put event type.",
        "C": "Deploy the workloads to Amazon Elastic Kubernetes Service (Amazon EKS). Use Amazon Elastic Container Registry (Amazon ECR) as a private image repository. Specify scan on push filters for the ECR enhanced scan.",
        "D": "Store the container images in an Amazon S3 bucket that has versioning enabled. Configure an S3 Event Notification for s3:ObjectCreated:* events to invoke an AWS Lambda function. Configure the Lambda function to initiate an Amazon Inspector scan."
      }
    },
    "category": [
      "Container"
    ],
    "subcategory": [],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/135473-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "A"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  }
]