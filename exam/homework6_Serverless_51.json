[
  {
    "idx": 47,
    "question": {
      "kor": "한 회사에서 REST API로 검색할 주문 배송 통계를 제공하는 애플리케이션을 개발하고 있습니다. 회사는 배송 통계를 추출하고 데이터를 읽기 쉬운 HTML 형식으로 구성하고 매일 아침 동시에 여러 이메일 주소로 보고서를 보내려고 합니다.\n이러한 요구 사항을 충족하기 위해 솔루션 설계자는 어떤 단계 조합을 수행해야 합니까? (두 가지를 선택하세요.)",
      "eng": "A company is developing an application that provides order shipping statistics for retrieval by a REST API. The company wants to extract the shipping statistics, organize the data into an easy-to-read HTML format, and send the report to several email addresses at the same time every morning.\nWhich combination of steps should a solutions architect take to meet these requirements? (Choose two.)"
    },
    "choices": {
      "kor": {
        "A": "데이터를 Amazon Kinesis Data Firehose로 보내도록 애플리케이션을 구성합니다.",
        "B": "Amazon Simple Email Service(Amazon SES)를 사용하여 데이터 형식을 지정하고 이메일로 보고서를 보냅니다.",
        "C": "데이터에 대한 애플리케이션의 API를 쿼리하기 위해 AWS Glue 작업을 호출하는 Amazon EventBridge(Amazon CloudWatch Events) 예약 이벤트를 생성합니다.",
        "D": "데이터에 대한 애플리케이션의 API를 쿼리하기 위해 AWS Lambda 함수를 호출하는 Amazon EventBridge(Amazon CloudWatch Events) 예약 이벤트를 생성합니다.",
        "E": "애플리케이션 데이터를 Amazon S3에 저장합니다. 보고서를 이메일로 보낼 S3 이벤트 대상으로 Amazon Simple Notification Service(Amazon SNS) 주제를 생성합니다."
      },
      "eng": {
        "A": "Configure the application to send the data to Amazon Kinesis Data Firehose.",
        "B": "Use Amazon Simple Email Service (Amazon SES) to format the data and to send the report by email.",
        "C": "Create an Amazon EventBridge (Amazon CloudWatch Events) scheduled event that invokes an AWS Glue job to query the application's API for the data.",
        "D": "Create an Amazon EventBridge (Amazon CloudWatch Events) scheduled event that invokes an AWS Lambda function to query the application's API for the data.",
        "E": "Store the application data in Amazon S3. Create an Amazon Simple Notification Service (Amazon SNS) topic as an S3 event destination to send the report by email."
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [
      "Lambda",
      "SES"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/85557-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "B",
      "D"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 86,
    "question": {
      "kor": "회사에는 Amazon RDS의 데이터베이스에 목록을 저장하는 자동차 판매 웹 사이트가 있습니다. 자동차가 판매되면 웹사이트에서 목록을 제거하고 데이터를 여러 대상 시스템으로 전송해야 합니다.\n솔루션 설계자는 어떤 디자인을 추천해야 합니까?",
      "eng": "A company has an automobile sales website that stores its listings in a database on Amazon RDS. When an automobile is sold, the listing needs to be removed from the website and the data must be sent to multiple target systems.\nWhich design should a solutions architect recommend?"
    },
    "choices": {
      "kor": {
        "A": "대상이 소비할 Amazon Simple Queue Service(Amazon SQS) 대기열로 정보를 전송하도록 Amazon RDS의 데이터베이스가 업데이트될 때 트리거되는 AWS Lambda 함수를 생성합니다.",
        "B": "대상이 사용할 Amazon Simple Queue Service(Amazon SQS) FIFO 대기열에 정보를 전송하도록 Amazon RDS의 데이터베이스가 업데이트될 때 트리거되는 AWS Lambda 함수를 생성합니다.",
        "C": "RDS 이벤트 알림을 구독하고 여러 Amazon Simple Notification Service(Amazon SNS) 주제로 팬 아웃된 Amazon Simple Queue Service(Amazon SQS) 대기열을 보냅니다. AWS Lambda 함수를 사용하여 대상을 업데이트합니다.",
        "D": "RDS 이벤트 알림을 구독하고 여러 Amazon Simple Queue Service(Amazon SQS) 대기열로 팬 아웃된 Amazon Simple Notification Service(Amazon SNS) 주제를 보냅니다. AWS Lambda 함수를 사용하여 대상을 업데이트합니다."
      },
      "eng": {
        "A": "Create an AWS Lambda function triggered when the database on Amazon RDS is updated to send the information to an Amazon Simple Queue Service (Amazon SQS) queue for the targets to consume.",
        "B": "Create an AWS Lambda function triggered when the database on Amazon RDS is updated to send the information to an Amazon Simple Queue Service (Amazon SQS) FIFO queue for the targets to consume.",
        "C": "Subscribe to an RDS event notification and send an Amazon Simple Queue Service (Amazon SQS) queue fanned out to multiple Amazon Simple Notification Service (Amazon SNS) topics. Use AWS Lambda functions to update the targets.",
        "D": "Subscribe to an RDS event notification and send an Amazon Simple Notification Service (Amazon SNS) topic fanned out to multiple Amazon Simple Queue Service (Amazon SQS) queues. Use AWS Lambda functions to update the targets."
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [
      "Lambda"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/85427-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "A"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 142,
    "question": {
      "kor": "회사에 소프트웨어 엔지니어링에 사용되는 AWS 계정이 있습니다. AWS 계정은 한 쌍의 AWS Direct Connect 연결을 통해 회사의 온프레미스 데이터 센터에 액세스할 수 있습니다. 모든 비 VPC 트래픽은 가상 프라이빗 게이트웨이로 라우팅됩니다.\n개발팀은 최근 콘솔을 통해 AWS Lambda 함수를 생성했습니다. 개발 팀은 함수가 회사 데이터 센터의 프라이빗 서브넷에서 실행되는 데이터베이스에 액세스할 수 있도록 허용해야 합니다.\n이러한 요구 사항을 충족하는 솔루션은 무엇입니까?",
      "eng": "A company has an AWS account used for software engineering. The AWS account has access to the company’s on-premises data center through a pair of AWS Direct Connect connections. All non-VPC traffic routes to the virtual private gateway.\nA development team recently created an AWS Lambda function through the console. The development team needs to allow the function to access a database that runs in a private subnet in the company’s data center.\nWhich solution will meet these requirements?"
    },
    "choices": {
      "kor": {
        "A": "적절한 보안 그룹을 사용하여 VPC에서 실행되도록 Lambda 함수를 구성합니다.",
        "B": "AWS에서 데이터 센터로 VPN 연결을 설정합니다. VPN을 통해 Lambda 함수의 트래픽을 라우팅합니다.",
        "C": "Lambda 함수가 Direct Connect를 통해 온프레미스 데이터 센터에 액세스할 수 있도록 VPC의 라우팅 테이블을 업데이트합니다.",
        "D": "탄력적 IP 주소를 생성합니다. 탄력적 네트워크 인터페이스 없이 탄력적 IP 주소를 통해 트래픽을 보내도록 Lambda 함수를 구성합니다."
      },
      "eng": {
        "A": "Configure the Lambda function to run in the VPC with the appropriate security group.",
        "B": "Set up a VPN connection from AWS to the data center. Route the traffic from the Lambda function through the VPN.",
        "C": "Update the route tables in the VPC to allow the Lambda function to access the on-premises data center through Direct Connect.",
        "D": "Create an Elastic IP address. Configure the Lambda function to send traffic through the Elastic IP address without an elastic network interface."
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [
      "Lambda"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/87534-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "A"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 349,
    "question": {
      "kor": "회사는 AWS Lambda와 통합된 Amazon API Gateway API 백엔드를 사용하는 프런트엔드 애플리케이션을 호스팅합니다. API가 요청을 받으면 Lambda 함수는 많은 라이브러리를 로드합니다. 그런 다음 Lambda 함수는 Amazon RDS 데이터베이스에 연결하여 데이터를 처리하고 프런트엔드 애플리케이션에 데이터를 반환합니다. 회사는 회사 운영에 대한 변경 횟수를 최소화하면서 모든 사용자의 응답 대기 시간을 가능한 한 낮추고자 합니다.\n이러한 요구 사항을 충족하는 솔루션은 무엇입니까?",
      "eng": "A company hosts a frontend application that uses an Amazon API Gateway API backend that is integrated with AWS Lambda. When the API receives requests, the Lambda function loads many libraries. Then the Lambda function connects to an Amazon RDS database, processes the data, and returns the data to the frontend application. The company wants to ensure that response latency is as low as possible for all its users with the fewest number of changes to the company's operations.\nWhich solution will meet these requirements?"
    },
    "choices": {
      "kor": {
        "A": "API를 우회하여 쿼리 속도를 높이려면 프런트엔드 애플리케이션과 데이터베이스 사이에 연결을 설정합니다.",
        "B": "요청을 처리하는 Lambda 함수에 대해 프로비저닝된 동시성을 구성합니다.",
        "C": "유사한 데이터 세트를 더 빠르게 검색하기 위해 쿼리 결과를 Amazon S3에 캐시합니다.",
        "D": "Lambda가 한 번에 설정할 수 있는 연결 수를 늘리려면 데이터베이스 크기를 늘립니다."
      },
      "eng": {
        "A": "Establish a connection between the frontend application and the database to make queries faster by bypassing the API.",
        "B": "Configure provisioned concurrency for the Lambda function that handles the requests.",
        "C": "Cache the results of the queries in Amazon S3 for faster retrieval of similar datasets.",
        "D": "Increase the size of the database to increase the number of connections Lambda can establish at one time."
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [
      "Lambda",
      "provisioned concurrency"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/102144-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "B"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 430,
    "question": {
      "kor": "회사는 고객이 재무 정보를 검색할 수 있도록 고객에게 API 인터페이스를 제공합니다. 회사는 연중 사용량이 가장 많은 시간에 더 많은 수의 요청을 예상합니다.\n회사는 API가 고객 만족을 보장하기 위해 낮은 대기 시간으로 일관되게 응답하도록 요구합니다. 회사는 API에 컴퓨팅 호스트를 제공해야 합니다.\n최소한의 운영 오버헤드로 이러한 요구 사항을 충족하는 솔루션은 무엇입니까?",
      "eng": "A company provides an API interface to customers so the customers can retrieve their financial information. Еhe company expects a larger number of requests during peak usage times of the year.\nThe company requires the API to respond consistently with low latency to ensure customer satisfaction. The company needs to provide a compute host for the API.\nWhich solution will meet these requirements with the LEAST operational overhead?"
    },
    "choices": {
      "kor": {
        "A": "Application Load Balancer 및 Amazon Elastic Container Service(Amazon ECS)를 사용합니다.",
        "B": "프로비저닝된 동시성과 함께 Amazon API Gateway 및 AWS Lambda 함수를 사용합니다.",
        "C": "Application Load Balancer 및 Amazon Elastic Kubernetes Service(Amazon EKS) 클러스터를 사용합니다.",
        "D": "예약된 동시성과 함께 Amazon API Gateway 및 AWS Lambda 함수를 사용합니다."
      },
      "eng": {
        "A": "Use an Application Load Balancer and Amazon Elastic Container Service (Amazon ECS).",
        "B": "Use Amazon API Gateway and AWS Lambda functions with provisioned concurrency.",
        "C": "Use an Application Load Balancer and an Amazon Elastic Kubernetes Service (Amazon EKS) cluster.",
        "D": "Use Amazon API Gateway and AWS Lambda functions with reserved concurrency."
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [
      "Lambda",
      "provisioned concurrency"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/109719-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "B"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 436,
    "question": {
      "kor": "솔루션 설계자는 Amazon API Gateway를 사용하여 사용자의 요청을 수신할 새 API를 설계하고 있습니다. 요청량은 매우 다양합니다. 단일 요청을 받지 않고 몇 시간이 지날 수 있습니다.\n데이터 처리는 비동기식으로 이루어지지만 요청이 이루어진 후 몇 초 이내에 완료되어야 합니다.\n최저 비용으로 요구 사항을 제공하기 위해 솔루션 설계자가 API를 호출하도록 해야 하는 컴퓨팅 서비스는 무엇입니까?",
      "eng": "A solutions architect is designing a new API using Amazon API Gateway that will receive requests from users. The volume of requests is highly variable; several hours can pass without receiving a single request. The data processing will take place asynchronously, but should be completed within a few seconds after a request is made.\nWhich compute service should the solutions architect have the API invoke to deliver the requirements at the lowest cost?"
    },
    "choices": {
      "kor": {
        "A": "AWS Glue 작업",
        "B": "AWS Lambda 함수",
        "C": "Amazon Elastic Kubernetes Service(Amazon EKS)에서 호스팅되는 컨테이너화된 서비스",
        "D": "Amazon EC2와 함께 Amazon ECS에서 호스팅되는 컨테이너화된 서비스"
      },
      "eng": {
        "A": "An AWS Glue job",
        "B": "An AWS Lambda function",
        "C": "A containerized service hosted in Amazon Elastic Kubernetes Service (Amazon EKS)",
        "D": "A containerized service hosted in Amazon ECS with Amazon EC2"
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [
      "Lambda"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/95306-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "B"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 458,
    "question": {
      "kor": "IoT 회사는 사용자의 수면에 대한 데이터를 수집하는 센서가 있는 매트리스를 출시하고 있습니다. 센서는 데이터를 Amazon S3 버킷으로 보냅니다. 센서는 각 매트리스에 대해 매일 밤 약 2MB의 데이터를 수집합니다. 회사는 각 매트리스에 대한 데이터를 처리하고 요약해야 합니다. 결과는 가능한 한 빨리 제공되어야 합니다. 데이터 처리에는 1GB의 메모리가 필요하며 30초 이내에 완료됩니다.\n이러한 요구 사항을 가장 비용 효율적으로 충족하는 솔루션은 무엇입니까?",
      "eng": "An IoT company is releasing a mattress that has sensors to collect data about a user’s sleep. The sensors will send data to an Amazon S3 bucket. The sensors collect approximately 2 MB of data every night for each mattress. The company must process and summarize the data for each mattress. The results need to be available as soon as possible. Data processing will require 1 GB of memory and will finish within 30 seconds.\nWhich solution will meet these requirements MOST cost-effectively?"
    },
    "choices": {
      "kor": {
        "A": "Scala 작업에 AWS Glue 사용",
        "B": "Apache Spark 스크립트와 함께 Amazon EMR 사용",
        "C": "Python 스크립트와 함께 AWS Lambda 사용",
        "D": "PySpark 작업과 함께 AWS Glue 사용"
      },
      "eng": {
        "A": "Use AWS Glue with a Scala job",
        "B": "Use Amazon EMR with an Apache Spark script",
        "C": "Use AWS Lambda with a Python script",
        "D": "Use AWS Glue with a PySpark job"
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [
      "Lambda"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/109501-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "C"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 477,
    "question": {
      "kor": "솔루션 설계자는 건물 내 비즈니스 테넌트의 시간당 에너지 소비량을 저장할 워크로드를 설계하고 있습니다. 센서는 각 테넌트의 사용량을 합산하는 HTTP 요청을 통해 데이터베이스에 공급 합니다. 솔루션 설계자는 가능한 경우 관리 서비스를 사용해야 합니다. 워크로드는 솔루션 설계자가 독립적인 구성 요소를 추가함에 따라 향후 더 많은 기능을 받게 됩니다.\n최소한의 운영 오버헤드로 이러한 요구 사항을 충족하는 솔루션은 무엇입니까?",
      "eng": "A solutions architect is designing a workload that will store hourly energy consumption by business tenants in a building. The sensors will feed a database through HTTP requests that will add up usage for each tenant. The solutions architect must use managed services when possible. The workload will receive more features in the future as the solutions architect adds independent components.\nWhich solution will meet these requirements with the LEAST operational overhead?"
    },
    "choices": {
      "kor": {
        "A": "AWS Lambda 함수와 함께 Amazon API Gateway를 사용하여 센서에서 데이터를 수신하고, 데이터를 처리하고, Amazon DynamoDB 테이블에 데이터를 저장합니다.",
        "B": "Amazon EC2 인스턴스의 Auto Scaling 그룹에서 지원하는 Elastic Load Balancer를 사용하여 센서에서 데이터를 수신하고 처리합니다. Amazon S3 버킷을 사용하여 처리된 데이터를 저장합니다.",
        "C": "AWS Lambda 함수와 함께 Amazon API Gateway를 사용하여 센서에서 데이터를 수신하고, 데이터를 처리하고, Amazon EC2 인스턴스의 Microsoft SQL Server Express 데이터베이스에 데이터를 저장합니다.",
        "D": "Amazon EC2 인스턴스의 Auto Scaling 그룹에서 지원하는 Elastic Load Balancer를 사용하여 센서에서 데이터를 수신하고 처리합니다. Amazon Elastic File System(Amazon EFS) 공유 파일 시스템을 사용하여 처리된 데이터를 저장합니다."
      },
      "eng": {
        "A": "Use Amazon API Gateway with AWS Lambda functions to receive the data from the sensors, process the data, and store the data in an Amazon DynamoDB table.",
        "B": "Use an Elastic Load Balancer that is supported by an Auto Scaling group of Amazon EC2 instances to receive and process the data from the sensors. Use an Amazon S3 bucket to store the processed data.",
        "C": "Use Amazon API Gateway with AWS Lambda functions to receive the data from the sensors, process the data, and store the data in a Microsoft SQL Server Express database on an Amazon EC2 instance.",
        "D": "Use an Elastic Load Balancer that is supported by an Auto Scaling group of Amazon EC2 instances to receive and process the data from the sensors. Use an Amazon Elastic File System (Amazon EFS) shared file system to store the processed data."
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [
      "Lambda"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/117026-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "A"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 564,
    "question": {
      "kor": "회사는 타사 데이터 피드와 통합해야 합니다. 데이터 피드는 웹후크를 보내 새 데이터를 사용할 준비가 되면 외부 서비스에 알립니다. 개발자는 회사에서 웹후크 콜백을 수신할 때 데이터를 검색하는 AWS Lambda 함수를 작성했습니다. 개발자는 제3자가 호출할 수 있도록 Lambda 함수를 제공해야 합니다.\n이러한 요구 사항을 가장 효율적으로 충족하는 솔루션은 무엇입니까?",
      "eng": "A company needs to integrate with a third-party data feed. The data feed sends a webhook to notify an external service when new data is ready for consumption. A developer wrote an AWS Lambda function to retrieve data when the company receives a webhook callback. The developer must make the Lambda function available for the third party to call.\nWhich solution will meet these requirements with the MOST operational efficiency?"
    },
    "choices": {
      "kor": {
        "A": "Lambda 함수에 대한 함수 URL을 생성합니다. Webhook에 대한 Lambda 함수 URL을 타사에 제공합니다.",
        "B": "Lambda 함수 앞에 ALB(Application Load Balancer)를 배포합니다. Webhook에 대한 ALB URL을 타사에 제공합니다.",
        "C": "Amazon Simple Notification Service(Amazon SNS) 주제를 생성합니다. Lambda 함수에 주제를 연결합니다. Webhook에 대한 제3자에게 SNS 주제의 공개 호스트 이름을 제공합니다.",
        "D": "Amazon Simple Queue Service(Amazon SQS) 대기열을 생성합니다. 대기열을 Lambda 함수에 연결합니다. Webhook에 대해 타사에 SQS 대기열의 공개 호스트 이름을 제공합니다."
      },
      "eng": {
        "A": "Create a function URL for the Lambda function. Provide the Lambda function URL to the third party for the webhook.",
        "B": "Deploy an Application Load Balancer (ALB) in front of the Lambda function. Provide the ALB URL to the third party for the webhook.",
        "C": "Create an Amazon Simple Notification Service (Amazon SNS) topic. Attach the topic to the Lambda function. Provide the public hostname of the SNS topic to the third party for the webhook.",
        "D": "Create an Amazon Simple Queue Service (Amazon SQS) queue. Attach the queue to the Lambda function. Provide the public hostname of the SQS queue to the third party for the webhook."
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [
      "Lambda"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/111430-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "A"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 577,
    "question": {
      "kor": "한 회사는 대규모 웹 애플리케이션을 서버리스 마이크로서비스 아키텍처로 재설계하려고 합니다. 애플리케이션은 Amazon EC2 인스턴스를 사용하며 Python으로 작성되었습니다.\n회사는 마이크로서비스로 테스트하기 위해 웹 애플리케이션의 한 구성 요소를 선택했습니다. 구성 요소는 초당 수백 개의 요청을 지원합니다. 회사는 Python을 지원하는 AWS 솔루션에서 마이크로서비스를 생성하고 테스트하려고 합니다. 또한 솔루션은 자동으로 확장되어야 하며 최소한의 인프라와 최소한의 운영 지원이 필요합니다.\n어떤 솔루션이 이러한 요구 사항을 충족합니까?",
      "eng": "A company wants to rearchitect a large-scale web application to a serverless microservices architecture. The application uses Amazon EC2 instances and is written in Python.\nThe company selected one component of the web application to test as a microservice. The component supports hundreds of requests each second. The company wants to create and test the microservice on an AWS solution that supports Python. The solution must also scale automatically and require minimal infrastructure and minimal operational support.\nWhich solution will meet these requirements?"
    },
    "choices": {
      "kor": {
        "A": "최신 Amazon Linux 운영 체제를 실행하는 EC2 인스턴스의 자동 확장 기능이 있는 스팟 집합을 사용하십시오.",
        "B": "고가용성이 구성된 AWS Elastic Beanstalk 웹 서버 환경을 사용하십시오.",
        "C": "Amazon Elastic Kubernetes Service(Amazon EKS)를 사용합니다. 자체 관리형 EC2 인스턴스의 Auto Scaling 그룹을 시작합니다.",
        "D": "사용자 정의 개발 코드를 실행하는 AWS Lambda 함수를 사용하십시오."
      },
      "eng": {
        "A": "Use a Spot Fleet with auto scaling of EC2 instances that run the most recent Amazon Linux operating system.",
        "B": "Use an AWS Elastic Beanstalk web server environment that has high availability configured.",
        "C": "Use Amazon Elastic Kubernetes Service (Amazon EKS). Launch Auto Scaling groups of self-managed EC2 instances.",
        "D": "Use an AWS Lambda function that runs custom developed code."
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [
      "Lambda"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/132894-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "D"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 655,
    "question": {
      "kor": "한 회사는 높은 동시성 AWS Lambda 함수를 사용하여 마케팅 이벤트 중에 메시지 대기열에서 지속적으로 증가하는 메시지 수를 처리합니다. Lambda 함수는 CPU 집약적인 코드를 사용하여 메시지를 처리합니다. 회사는 컴퓨팅 비용을 줄이고 고객의 서비스 대기 시간을 유지하기를 원합니다.\n어떤 솔루션이 이러한 요구 사항을 충족합니까?",
      "eng": "A company uses high concurrency AWS Lambda functions to process a constantly increasing number of messages in a message queue during marketing events. The Lambda functions use CPU intensive code to process the messages. The company wants to reduce the compute costs and to maintain service latency for its customers.\nWhich solution will meet these requirements?"
    },
    "choices": {
      "kor": {
        "A": "Lambda 함수에 대해 예약된 동시성을 구성합니다. Lambda 함수에 할당된 메모리를 줄입니다.",
        "B": "Lambda 함수에 대한 예약된 동시성을 구성합니다. AWS Compute Optimizer 권장 사항에 따라 메모리를 늘리십시오.",
        "C": "Lambda 함수에 대해 프로비저닝된 동시성을 구성합니다. Lambda 함수에 할당된 메모리를 줄입니다.",
        "D": "Lambda 함수에 대해 프로비저닝된 동시성을 구성합니다. AWS Compute Optimizer 권장 사항에 따라 메모리를 늘리십시오."
      },
      "eng": {
        "A": "Configure reserved concurrency for the Lambda functions. Decrease the memory allocated to the Lambda functions.",
        "B": "Configure reserved concurrency for the Lambda functions. Increase the memory according to AWS Compute Optimizer recommendations.",
        "C": "Configure provisioned concurrency for the Lambda functions. Decrease the memory allocated to the Lambda functions.",
        "D": "Configure provisioned concurrency for the Lambda functions. Increase the memory according to AWS Compute Optimizer recommendations."
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [
      "Lambda"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/135552-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "D"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 188,
    "question": {
      "kor": "회사에서 3계층 웹 애플리케이션을 사용하여 신입 직원에게 교육을 제공합니다. 애플리케이션은 매일 12시간 동안만 액세스됩니다. 이 회사는 Amazon RDS for MySQL DB 인스턴스를 사용하여 정보를 저장하고 비용을 최소화하려고 합니다.\n솔루션 설계자는 이러한 요구 사항을 충족하기 위해 무엇을 해야 합니까?",
      "eng": "A company uses a three-tier web application to provide training to new employees. The application is accessed for only 12 hours every day. The company is using an Amazon RDS for MySQL DB instance to store information and wants to minimize costs.\nWhat should a solutions architect do to meet these requirements?"
    },
    "choices": {
      "kor": {
        "A": "AWS Systems Manager Session Manager에 대한 IAM 정책을 구성합니다. 정책에 대한 IAM 역할을 생성합니다. 역할의 신뢰 관계를 업데이트합니다. DB 인스턴스에 대한 자동 시작 및 중지를 설정합니다.",
        "B": "DB 인스턴스가 중지될 때 사용자가 캐시에서 데이터에 액세스할 수 있는 기능을 제공하는 Redis용 Amazon ElastiCache 캐시 클러스터를 생성합니다. DB 인스턴스가 시작된 후 캐시를 무효화합니다.",
        "C": "Amazon EC2 인스턴스를 시작합니다. Amazon RDS에 대한 액세스 권한을 부여하는 IAM 역할을 생성합니다. 역할을 EC2 인스턴스에 연결합니다. 원하는 일정에 따라 EC2 인스턴스를 시작 및 중지하도록 cron 작업을 구성합니다.",
        "D": "DB 인스턴스를 시작하고 중지하는 AWS Lambda 함수를 생성합니다. Amazon EventBridge(Amazon CloudWatch Events) 예약 규칙을 생성하여 Lambda 함수를 호출합니다. 규칙에 대한 이벤트 대상으로 Lambda 함수를 구성합니다."
      },
      "eng": {
        "A": "Configure an IAM policy for AWS Systems Manager Session Manager. Create an IAM role for the policy. Update the trust relationship of the role. Set up automatic start and stop for the DB instance.",
        "B": "Create an Amazon ElastiCache for Redis cache cluster that gives users the ability to access the data from the cache when the DB instance is stopped. Invalidate the cache after the DB instance is started.",
        "C": "Launch an Amazon EC2 instance. Create an IAM role that grants access to Amazon RDS. Attach the role to the EC2 instance. Configure a cron job to start and stop the EC2 instance on the desired schedule.",
        "D": "Create AWS Lambda functions to start and stop the DB instance. Create Amazon EventBridge (Amazon CloudWatch Events) scheduled rules to invoke the Lambda functions. Configure the Lambda functions as event targets for the rules."
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [
      "EventBridge",
      "Lambda"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/86046-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "D"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 311,
    "question": {
      "kor": "회사에서 온프레미스 워크로드를 AWS 클라우드로 마이그레이션하고 있습니다. 이 회사는 이미 여러 Amazon EC2 인스턴스와 Amazon RDS DB 인스턴스를 사용하고 있습니다. 회사는 업무 시간 외에 EC2 인스턴스와 DB 인스턴스를 자동으로 시작하고 중지하는 솔루션을 원합니다. 솔루션은 비용 및 인프라 유지 관리를 최소화해야 합니다.\n이러한 요구 사항을 충족하는 솔루션은 무엇입니까?",
      "eng": "A company is migrating its on-premises workload to the AWS Cloud. The company already uses several Amazon EC2 instances and Amazon RDS DB instances. The company wants a solution that automatically starts and stops the EC2 instances and DB instances outside of business hours. The solution must minimize cost and infrastructure maintenance.\nWhich solution will meet these requirements?"
    },
    "choices": {
      "kor": {
        "A": "탄력적 크기 조정을 사용하여 EC2 인스턴스를 확장합니다. 업무 시간 외에는 DB 인스턴스를 0으로 조정합니다.",
        "B": "일정에 따라 EC2 인스턴스와 DB 인스턴스를 자동으로 시작 및 중지하는 파트너 솔루션에 대한 AWS Marketplace를 살펴보십시오.",
        "C": "다른 EC2 인스턴스를 시작합니다. 일정에 따라 기존 EC2 인스턴스와 DB 인스턴스를 시작 및 중지하는 셸 스크립트를 실행하도록 crontab 일정을 구성합니다.",
        "D": "EC2 인스턴스와 DB 인스턴스를 시작하고 중지할 AWS Lambda 함수를 생성합니다. 일정에 따라 Lambda 함수를 호출하도록 Amazon EventBridge를 구성합니다."
      },
      "eng": {
        "A": "Scale the EC2 instances by using elastic resize. Scale the DB instances to zero outside of business hours.",
        "B": "Explore AWS Marketplace for partner solutions that will automatically start and stop the EC2 instances and DB instances on a schedule.",
        "C": "Launch another EC2 instance. Configure a crontab schedule to run shell scripts that will start and stop the existing EC2 instances and DB instances on a schedule.",
        "D": "Create an AWS Lambda function that will start and stop the EC2 instances and DB instances. Configure Amazon EventBridge to invoke the Lambda function on a schedule."
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [
      "EventBridge",
      "Lambda"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/102145-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "D"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 641,
    "question": {
      "kor": "한 회사는 맞춤형 보고서 작성 프로그램을 사용하여 주로 매월 마지막 주에 수행되는 모바일 앱 사용을 추적하는 보고서를 효율적으로 생성하는 것을 목표로 합니다. 프로그램의 생성 프로세스는 각 보고서당 10분 미만이 소요될 정도로 신속합니다. 이 기간 외에는 자주 사용되지 않는 회사는 요청 시 신속한 보고서 생성을 위한 비용 효율적인 솔루션을 찾고 있습니다.\n이러한 요구 사항을 가장 잘 충족하는 솔루션은 무엇입니까?",
      "eng": "A company aims to efficiently generate reports tracking usage of its mobile app, which is primarily done during the last week of each month using a custom report-building program. The program's generation process is swift, taking under 10 minutes for each report. Infrequently used outside this timeframe, the company seeks a cost-effective solution for swift report generation upon request.\nWhich solution would best fulfill these requirements?"
    },
    "choices": {
      "kor": {
        "A": "Amazon EC2 온디맨드 인스턴스를 사용하여 프로그램을 실행하십시오. 보고서가 요청될 때 EC2 인스턴스를 트리거하는 Amazon EventBridge 규칙을 설정합니다. 매월 마지막 주에만 EC2 인스턴스를 지속적으로 운영합니다.",
        "B": "AWS Lambda를 사용하여 프로그램을 실행합니다. 보고서가 요청되면 Lambda 함수를 트리거하는 Amazon EventBridge 규칙을 생성합니다.",
        "C": "Amazon Elastic Container Service(Amazon ECS) 내에서 프로그램을 운영하고 보고서 요청 시 실행되도록 예약합니다.",
        "D": "Amazon EC2 스팟 인스턴스를 활용하여 프로그램을 실행합니다. 보고서가 요청되면 EC2 인스턴스를 시작하는 Amazon EventBridge 규칙을 생성합니다. 매월 마지막 주 동안 EC2 인스턴스를 지속적으로 실행하도록 유지합니다."
      },
      "eng": {
        "A": "Use Amazon EC2 On-Demand Instances to run the program. Set up an Amazon EventBridge rule triggering the EC2 instances when reports are requested. Operate the EC2 instances continuously only during the last week of each month.",
        "B": "Employ AWS Lambda to execute the program. Create an Amazon EventBridge rule triggering a Lambda function when reports are requested.",
        "C": "Operate the program within Amazon Elastic Container Service (Amazon ECS) and schedule it to run upon report requests.",
        "D": "Utilize Amazon EC2 Spot Instances to run the program. Create an Amazon EventBridge rule to start the EC2 instances when reports are requested. Maintain the EC2 instances running continuously during the last week of each month."
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [
      "EventBridge"
    ],
    "rote_memorization": false,
    "answer": [
      "B"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 40,
    "question": {
      "kor": "한 회사가 Amazon Route 53에 도메인 이름을 등록했습니다. 이 회사는 ca-central-1 리전의 Amazon API Gateway를 백엔드 마이크로서비스 API용 퍼블릭 인터페이스로 사용합니다. 타사 서비스는 API를 안전하게 사용합니다. 회사는 타사 서비스가 HTTPS를 사용할 수 있도록 회사의 도메인 이름과 해당 인증서로 API 게이트웨이 URL을 설계하려고 합니다.\n이러한 요구 사항을 충족하는 솔루션은 무엇입니까?",
      "eng": "A company has registered its domain name with Amazon Route 53. The company uses Amazon API Gateway in the ca-central-1 Region as a public interface for its backend microservice APIs. Third-party services consume the APIs securely. The company wants to design its API Gateway URL with the company's domain name and corresponding certificate so that the third-party services can use HTTPS.\nWhich solution will meet these requirements?"
    },
    "choices": {
      "kor": {
        "A": "API Gateway에서 Name=\"Endpoint-URL\" 및 Value=\"Company Domain Name\"으로 단계 변수를 생성하여 기본 URL을 덮어씁니다. 회사 도메인 이름과 연결된 공인 인증서를 AWS Certificate Manager(ACM)로 가져옵니다.",
        "B": "회사의 도메인 이름으로 Route 53 DNS 레코드를 생성합니다. 별칭 레코드가 지역 API 게이트웨이 단계 엔드포인트를 가리킵니다. 회사 도메인 이름과 연결된 공인 인증서를 us-east-1 리전의 AWS Certificate Manager(ACM)로 가져옵니다.",
        "C": "지역 API 게이트웨이 엔드포인트를 생성합니다. API Gateway 끝점을 회사의 도메인 이름과 연결합니다. 회사 도메인 이름과 연결된 공인 인증서를 동일한 리전의 AWS Certificate Manager(ACM)로 가져옵니다. API Gateway 엔드포인트에 인증서를 연결합니다. 트래픽을 API 게이트웨이 엔드포인트로 라우팅하도록 Route 53을 구성합니다.",
        "D": "지역 API 게이트웨이 엔드포인트를 생성합니다. API Gateway 끝점을 회사의 도메인 이름과 연결합니다. 회사 도메인 이름과 연결된 공인 인증서를 us-east-1 리전의 AWS Certificate Manager(ACM)로 가져옵니다. API Gateway API에 인증서를 연결합니다. 회사의 도메인 이름으로 Route 53 DNS 레코드를 생성합니다. A 레코드가 회사의 도메인 이름을 가리킵니다."
      },
      "eng": {
        "A": "Create stage variables in API Gateway with Name=\"Endpoint-URL\" and Value=\"Company Domain Name\" to overwrite the default URL. Import the public certificate associated with the company's domain name into AWS Certificate Manager (ACM).",
        "B": "Create Route 53 DNS records with the company's domain name. Point the alias record to the Regional API Gateway stage endpoint. Import the public certificate associated with the company's domain name into AWS Certificate Manager (ACM) in the us-east-1 Region.",
        "C": "Create a Regional API Gateway endpoint. Associate the API Gateway endpoint with the company's domain name. Import the public certificate associated with the company's domain name into AWS Certificate Manager (ACM) in the same Region. Attach the certificate to the API Gateway endpoint. Configure Route 53 to route traffic to the API Gateway endpoint.",
        "D": "Create a Regional API Gateway endpoint. Associate the API Gateway endpoint with the company's domain name. Import the public certificate associated with the company's domain name into AWS Certificate Manager (ACM) in the us-east-1 Region. Attach the certificate to the API Gateway APIs. Create Route 53 DNS records with the company's domain name. Point an A record to the company's domain name."
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [
      "API Gateway"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/85266-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "C"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 46,
    "question": {
      "kor": "자전거 공유 회사는 피크 운영 시간 동안 자전거의 위치를 추적하기 위해 다계층 아키텍처를 개발하고 있습니다. 회사는 기존 분석 플랫폼에서 이러한 데이터 포인트를 사용하려고 합니다. 솔루션 설계자는 이 아키텍처를 지원하기 위해 가장 실행 가능한 다중 계층 옵션을 결정해야 합니다. 데이터 포인트는 REST API에서 액세스할 수 있어야 합니다.\n위치 데이터 저장 및 검색에 대한 이러한 요구 사항을 충족하는 작업은 무엇입니까?",
      "eng": "A bicycle sharing company is developing a multi-tier architecture to track the location of its bicycles during peak operating hours. The company wants to use these data points in its existing analytics platform. A solutions architect must determine the most viable multi-tier option to support this architecture. The data points must be accessible from the REST API.\nWhich action meets these requirements for storing and retrieving location data?"
    },
    "choices": {
      "kor": {
        "A": "Amazon S3와 함께 Amazon Athena를 사용합니다.",
        "B": "AWS Lambda와 함께 Amazon API Gateway를 사용합니다.",
        "C": "Amazon Redshift와 함께 Amazon QuickSight를 사용합니다.",
        "D": "Amazon Kinesis Data Analytics와 함께 Amazon API Gateway를 사용합니다."
      },
      "eng": {
        "A": "Use Amazon Athena with Amazon S3.",
        "B": "Use Amazon API Gateway with AWS Lambda.",
        "C": "Use Amazon QuickSight with Amazon Redshift.",
        "D": "Use Amazon API Gateway with Amazon Kinesis Data Analytics."
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [
      "API Gateway",
      "Lambda"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/85212-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "B"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 60,
    "question": {
      "kor": "한 전자상거래 회사가 AWS에서 하루에 하나의 거래 웹사이트를 시작하려고 합니다. 매일 24시간 동안 정확히 하나의 제품이 판매됩니다. 이 회사는 사용량이 많은 시간에 밀리초 대기 시간으로 시간당 수백만 건의 요청을 처리할 수 있기를 원합니다. 최소한의 운영 오버헤드로 이러한 요구 사항을 충족하는 솔루션은 무엇입니까?",
      "eng": "An ecommerce company wants to launch a one-deal-a-day website on AWS. Each day will feature exactly one product on sale for a period of 24 hours. The company wants to be able to handle millions of requests each hour with millisecond latency during peak hours.\nWhich solution will meet these requirements with the LEAST operational overhead?"
    },
    "choices": {
      "kor": {
        "A": "Amazon S3를 사용하여 다른 S3 버킷에서 전체 웹 사이트를 호스팅합니다. Amazon CloudFront 배포를 추가합니다. S3 버킷을 배포의 원본으로 설정합니다. 주문 데이터를 Amazon S3에 저장합니다.",
        "B": "여러 가용 영역의 Auto Scaling 그룹에서 실행되는 Amazon EC2 인스턴스에 전체 웹 사이트를 배포합니다. ALB(Application Load Balancer)를 추가하여 웹 사이트 트래픽을 분산합니다. 백엔드 API에 대해 다른 ALB를 추가하십시오. MySQL용 Amazon RDS에 데이터를 저장합니다.",
        "C": "전체 애플리케이션을 마이그레이션하여 컨테이너에서 실행합니다. Amazon Elastic Kubernetes Service(Amazon EKS)에서 컨테이너를 호스팅합니다. Kubernetes ClusterAutoscaler를 사용하여 팟(Pod) 수를 늘리거나 줄여 트래픽의 버스트를 처리합니다. MySQL용 Amazon RDS에 데이터를 저장합니다.",
        "D": "Amazon S3 버킷을 사용하여 웹 사이트의 정적 콘텐츠를 호스팅합니다. Amazon CloudFront 배포를 배포합니다. S3 버킷을 오리진으로 설정합니다. 백엔드 API에 Amazon API Gateway 및 AWS Lambda 함수를 사용합니다. Amazon DynamoDB에 데이터를 저장합니다."
      },
      "eng": {
        "A": "Use Amazon S3 to host the full website in different S3 buckets. Add Amazon CloudFront distributions. Set the S3 buckets as origins for the distributions. Store the order data in Amazon S3.",
        "B": "Deploy the full website on Amazon EC2 instances that run in Auto Scaling groups across multiple Availability Zones. Add an Application Load Balancer (ALB) to distribute the website traffic. Add another ALB for the backend APIs. Store the data in Amazon RDS for MySQL.",
        "C": "Migrate the full application to run in containers. Host the containers on Amazon Elastic Kubernetes Service (Amazon EKS). Use the Kubernetes Cluster Autoscaler to increase and decrease the number of pods to process bursts in traffic. Store the data in Amazon RDS for MySQL.",
        "D": "Use an Amazon S3 bucket to host the website's static content. Deploy an Amazon CloudFront distribution. Set the S3 bucket as the origin. Use Amazon API Gateway and AWS Lambda functions for the backend APIs. Store the data in Amazon DynamoDB."
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [
      "API Gateway",
      "CloudFront",
      "Lambda",
      "S3",
      "operational overhead"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/85195-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "D"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 108,
    "question": {
      "kor": "한 회사에서 다중 계층 애플리케이션을 온프레미스에서 AWS 클라우드로 이동하여 애플리케이션의 성능을 개선하려고 합니다. 애플리케이션은 RESTful 서비스를 통해 서로 통신하는 애플리케이션 계층으로 구성됩니다. 한 계층이 과부하되면 트랜잭션이 삭제됩니다. 솔루션 설계자는 이러한 문제를 해결하고 애플리케이션을 현대화하는 솔루션을 설계해야 합니다.\n어떤 솔루션이 이러한 요구 사항을 충족하고 운영상 가장 효율적입니까?",
      "eng": "A company wants to move a multi-tiered application from on premises to the AWS Cloud to improve the application's performance. The application consists of application tiers that communicate with each other by way of RESTful services. Transactions are dropped when one tier becomes overloaded. A solutions architect must design a solution that resolves these issues and modernizes the application.\nWhich solution meets these requirements and is the MOST operationally efficient?"
    },
    "choices": {
      "kor": {
        "A": "Amazon API Gateway를 사용하고 애플리케이션 계층으로 AWS Lambda 기능에 대한 직접 트랜잭션을 사용하십시오. 애플리케이션 서비스 간의 통신 계층으로 Amazon Simple Queue Service(Amazon SQS)를 사용합니다.",
        "B": "Amazon CloudWatch 지표를 사용하여 애플리케이션 성능 기록을 분석하여 성능 장애 시 서버의 최대 사용률을 결정합니다. 최대 요구 사항을 충족하도록 애플리케이션 서버의 Amazon EC2 인스턴스 크기를 늘립니다.",
        "C": "Amazon Simple Notification Service(Amazon SNS)를 사용하여 Auto Scaling 그룹의 Amazon EC2에서 실행되는 애플리케이션 서버 간의 메시징을 처리합니다. Amazon CloudWatch를 사용하여 SNS 대기열 길이를 모니터링하고 필요에 따라 확장 및 축소합니다.",
        "D": "Amazon Simple Queue Service(Amazon SQS)를 사용하여 Auto Scaling 그룹의 Amazon EC2에서 실행되는 애플리케이션 서버 간의 메시징을 처리합니다. Amazon CloudWatch를 사용하여 SQS 대기열 길이를 모니터링하고 통신 실패가 감지되면 확장합니다."
      },
      "eng": {
        "A": "Use Amazon API Gateway and direct transactions to the AWS Lambda functions as the application layer. Use Amazon Simple Queue Service (Amazon SQS) as the communication layer between application services.",
        "B": "Use Amazon CloudWatch metrics to analyze the application performance history to determine the servers' peak utilization during the performance failures. Increase the size of the application server's Amazon EC2 instances to meet the peak requirements.",
        "C": "Use Amazon Simple Notification Service (Amazon SNS) to handle the messaging between application servers running on Amazon EC2 in an Auto Scaling group. Use Amazon CloudWatch to monitor the SNS queue length and scale up and down as required.",
        "D": "Use Amazon Simple Queue Service (Amazon SQS) to handle the messaging between application servers running on Amazon EC2 in an Auto Scaling group. Use Amazon CloudWatch to monitor the SQS queue length and scale up when communication failures are detected."
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [
      "API Gateway",
      "Lambda",
      "SQS"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/86120-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "A"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 205,
    "question": {
      "kor": "회사의 웹 애플리케이션은 함수 앞의 와 데이터베이스로 AWS Lambda Amazon API Gateway API Amazon DynamoDB 구성됩니다. Lambda 함수는 비즈니스 로직을 처리하고 DynamoDB 테이블은 데이터를 호스팅합니다. 애플리케이션은 Amazon Cognito 사용자 풀을 사용하여 애플리케이션의 개별 사용자를 식별합니다. 솔루션 설계자는 구독이 있는 사용자만 프리미엄 콘텐츠에 액세스할 수 있도록 애플리케이션을 업데이트해야 합니다.\n최소한의 운영 오버헤드로 이 요구 사항을 충족하는 솔루션은 무엇입니까?",
      "eng": "A company’s web application consists of an Amazon API Gateway API in front of an AWS Lambda function and an Amazon DynamoDB database. The Lambda function handles the business logic, and the DynamoDB table hosts the data. The application uses Amazon Cognito user pools to identify the individual users of the application. A solutions architect needs to update the application so that only users who have a subscription can access premium content.\nWhich solution will meet this requirement with the LEAST operational overhead?"
    },
    "choices": {
      "kor": {
        "A": "API Gateway API에서 API 캐싱 및 제한을 활성화합니다.",
        "B": "API Gateway API에서 AWS WAF를 설정합니다. 구독이 있는 사용자를 필터링하는 규칙을 만듭니다.",
        "C": "DynamoDB 테이블의 프리미엄 콘텐츠에 세분화된 IAM 권한을 적용합니다.",
        "D": "구독하지 않은 사용자의 액세스를 제한하기 위해 API 사용 계획 및 API 키를 구현하십시오."
      },
      "eng": {
        "A": "Enable API caching and throttling on the API Gateway API.",
        "B": "Set up AWS WAF on the API Gateway API. Create a rule to filter users who have a subscription.",
        "C": "Apply fine-grained IAM permissions to the premium content in the DynamoDB table.",
        "D": "Implement API usage plans and API keys to limit the access of users who do not have a subscription."
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [
      "API Gateway"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/102128-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "D"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 208,
    "question": {
      "kor": "회사는 Amazon S3를 사용하여 정적 웹 사이트를 호스팅합니다. 회사는 웹 페이지에 연락처 양식을 추가하려고 합니다. 연락처 양식에는 사용자가 이름, 이메일 주소, 전화번호 및 사용자 메시지를 입력할 수 있는 동적 서버 측 구성 요소가 있습니다. 회사는 매월 100회 미만의 사이트 방문이 있을 것으로 예상합니다.\n이러한 요구 사항을 가장 비용 효율적으로 충족하는 솔루션은 무엇입니까?",
      "eng": "A company hosts its static website by using Amazon S3. The company wants to add a contact form to its webpage. The contact form will have dynamic server-side components for users to input their name, email address, phone number, and user message. The company anticipates that there will be fewer than 100 site visits each month.\nWhich solution will meet these requirements MOST cost-effectively?"
    },
    "choices": {
      "kor": {
        "A": "Amazon Elastic Container Service(Amazon ECS)에서 동적 문의 양식 페이지를 호스팅합니다. 타사 이메일 공급자에 연결하도록 Amazon Simple Email Service(Amazon SES)를 설정합니다.",
        "B": "Amazon Simple Email Service(Amazon SES)를 호출하는 AWS Lambda 백엔드로 Amazon API Gateway 엔드포인트를 생성합니다.",
        "C": "Amazon Lightsail을 배포하여 정적 웹 페이지를 동적으로 변환합니다. 클라이언트 측 스크립팅을 사용하여 연락처 양식을 작성하십시오. 양식을 Amazon WorkMail과 통합합니다.",
        "D": "t2.micro Amazon EC2 인스턴스를 생성합니다. LAMP(Linux, Apache, MySQL, PHP/Perl/Python) 스택을 배포하여 웹 페이지를 호스팅합니다. 클라이언트 측 스크립팅을 사용하여 연락처 양식을 작성하십시오. 양식을 Amazon WorkMail과 통합합니다."
      },
      "eng": {
        "A": "Host a dynamic contact form page in Amazon Elastic Container Service (Amazon ECS). Set up Amazon Simple Email Service (Amazon SES) to connect to any third-party email provider.",
        "B": "Create an Amazon API Gateway endpoint with an AWS Lambda backend that makes a call to Amazon Simple Email Service (Amazon SES).",
        "C": "Convert the static webpage to dynamic by deploying Amazon Lightsail. Use client-side scripting to build the contact form. Integrate the form with Amazon WorkMail.",
        "D": "Create a t2.micro Amazon EC2 instance. Deploy a LAMP (Linux, Apache, MySQL, PHP/Perl/Python) stack to host the webpage. Use client-side scripting to build the contact form. Integrate the form with Amazon WorkMail."
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [
      "API Gateway",
      "Lambda",
      "SES"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/99680-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "B"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 254,
    "question": {
      "kor": "회사에서 새로운 동적 주문 웹사이트를 구축하고 있습니다. 회사는 서버 유지 관리 및 패치를 최소화하려고 합니다. 웹 사이트는 가용성이 높아야 하며 사용자 요구의 변화를 충족하기 위해 가능한 한 빨리 읽기 및 쓰기 용량을 확장해야 합니다.\n이러한 요구 사항을 충족하는 솔루션은 무엇입니까?",
      "eng": "A company is building a new dynamic ordering website. The company wants to minimize server maintenance and patching. The website must be highly available and must scale read and write capacity as quickly as possible to meet changes in user demand.\nWhich solution will meet these requirements?"
    },
    "choices": {
      "kor": {
        "A": "Amazon S3에서 정적 콘텐츠를 호스팅합니다. Amazon API Gateway 및 AWS Lambda를 사용하여 동적 콘텐츠를 호스팅합니다. 데이터베이스에 대한 온디맨드 용량과 함께 Amazon DynamoDB를 사용합니다. 웹 사이트 콘텐츠를 제공하도록 Amazon CloudFront를 구성합니다.",
        "B": "Amazon S3에서 정적 콘텐츠를 호스팅합니다. Amazon API Gateway 및 AWS Lambda를 사용하여 동적 콘텐츠를 호스팅합니다. 데이터베이스에는 Aurora Auto Scaling과 함께 Amazon Aurora를 사용하십시오. 웹 사이트 콘텐츠를 제공하도록 Amazon CloudFront를 구성합니다.",
        "C": "Amazon EC2 인스턴스에서 모든 웹 사이트 콘텐츠를 호스팅합니다. Auto Scaling 그룹을 생성하여 EC2 인스턴스를 확장합니다. Application Load Balancer를 사용하여 트래픽을 분산합니다. 데이터베이스에 대해 프로비저닝된 쓰기 용량과 함께 Amazon DynamoDB를 사용합니다.",
        "D": "Amazon EC2 인스턴스에서 모든 웹 사이트 콘텐츠를 호스팅합니다. Auto Scaling 그룹을 생성하여 EC2 인스턴스를 확장합니다. Application Load Balancer를 사용하여 트래픽을 분산합니다. 데이터베이스에는 Aurora Auto Scaling과 함께 Amazon Aurora를 사용하십시오."
      },
      "eng": {
        "A": "Host static content in Amazon S3. Host dynamic content by using Amazon API Gateway and AWS Lambda. Use Amazon DynamoDB with on-demand capacity for the database. Configure Amazon CloudFront to deliver the website content.",
        "B": "Host static content in Amazon S3. Host dynamic content by using Amazon API Gateway and AWS Lambda. Use Amazon Aurora with Aurora Auto Scaling for the database. Configure Amazon CloudFront to deliver the website content.",
        "C": "Host all the website content on Amazon EC2 instances. Create an Auto Scaling group to scale the EC2 instances. Use an Application Load Balancer to distribute traffic. Use Amazon DynamoDB with provisioned write capacity for the database.",
        "D": "Host all the website content on Amazon EC2 instances. Create an Auto Scaling group to scale the EC2 instances. Use an Application Load Balancer to distribute traffic. Use Amazon Aurora with Aurora Auto Scaling for the database."
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [
      "API Gateway",
      "CloudFront",
      "DynamoDB",
      "Lambda",
      "S3"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/87570-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "A"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 308,
    "question": {
      "kor": "회사의 시설에는 건물 전체의 모든 입구에 배지 판독기가 있습니다. 배지를 스캔하면 판독기가 HTTPS를 통해 메시지를 보내 누가 해당 입구에 액세스하려고 시도했는지 나타냅니다.\n솔루션 설계자는 센서에서 보내는 이러한 메시지를 처리하는 시스템을 설계해야 합니다. 솔루션은 가용성이 높아야 하며 회사의 보안 팀이 분석할 수 있도록 결과를 제공해야 합니다.\n솔루션 설계자는 어떤 시스템 아키텍처를 추천해야 합니까?",
      "eng": "A company’s facility has badge readers at every entrance throughout the building. When badges are scanned, the readers send a message over HTTPS to indicate who attempted to access that particular entrance.\nA solutions architect must design a system to process these messages from the sensors. The solution must be highly available, and the results must be made available for the company’s security team to analyze.\nWhich system architecture should the solutions architect recommend?"
    },
    "choices": {
      "kor": {
        "A": "Amazon EC2 인스턴스를 시작하여 HTTPS 엔드포인트 역할을 하고 메시지를 처리합니다. 결과를 Amazon S3 버킷에 저장하도록 EC2 인스턴스를 구성합니다.",
        "B": "Amazon API Gateway에서 HTTPS 엔드포인트를 생성합니다. AWS Lambda 함수를 호출하여 메시지를 처리하고 결과를 Amazon DynamoDB 테이블에 저장하도록 API Gateway 엔드포인트를 구성합니다.",
        "C": "Amazon Route 53을 사용하여 들어오는 센서 메시지를 AWS Lambda 함수로 보냅니다. 메시지를 처리하고 결과를 Amazon DynamoDB 테이블에 저장하도록 Lambda 함수를 구성합니다.",
        "D": "Amazon S3용 게이트웨이 VPC 엔드포인트를 생성합니다. 센서 데이터가 VPC 엔드포인트를 통해 S3 버킷에 직접 기록될 수 있도록 시설 네트워크에서 VPC로의 Site-to-Site VPN 연결을 구성합니다."
      },
      "eng": {
        "A": "Launch an Amazon EC2 instance to serve as the HTTPS endpoint and to process the messages. Configure the EC2 instance to save the results to an Amazon S3 bucket.",
        "B": "Create an HTTPS endpoint in Amazon API Gateway. Configure the API Gateway endpoint to invoke an AWS Lambda function to process the messages and save the results to an Amazon DynamoDB table.",
        "C": "Use Amazon Route 53 to direct incoming sensor messages to an AWS Lambda function. Configure the Lambda function to process the messages and save the results to an Amazon DynamoDB table.",
        "D": "Create a gateway VPC endpoint for Amazon S3. Configure a Site-to-Site VPN connection from the facility network to the VPC so that sensor data can be written directly to an S3 bucket by way of the VPC endpoint."
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [
      "API Gateway"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/99699-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "B"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 315,
    "question": {
      "kor": "회사는 사용자에게 항목 가격을 기반으로 세금 계산을 위한 조회를 자동화하는 API를 제공합니다. 회사는 연휴 기간에만 더 많은 수의 문의가 발생하여 응답 시간이 느려집니다. 솔루션 설계자는 확장 가능하고 탄력적인 솔루션을 설계해야 합니다.\n이를 달성하기 위해 솔루션 설계자는 무엇을 해야 합니까?",
      "eng": "A company provides an API to its users that automates inquiries for tax computations based on item prices. The company experiences a larger number of inquiries during the holiday season only that cause slower response times. A solutions architect needs to design a solution that is scalable and elastic.\nWhat should the solutions architect do to accomplish this?"
    },
    "choices": {
      "kor": {
        "A": "Amazon EC2 인스턴스에서 호스팅되는 API를 제공합니다. EC2 인스턴스는 API 요청이 있을 때 필요한 계산을 수행합니다.",
        "B": "항목 이름을 허용하는 Amazon API Gateway를 사용하여 REST API를 설계합니다. API Gateway는 세금 계산을 위해 항목 이름을 AWS Lambda에 전달합니다.",
        "C": "두 개의 Amazon EC2 인스턴스가 있는 Application Load Balancer를 생성합니다. EC2 인스턴스는 받은 항목 이름에 대한 세금을 계산합니다.",
        "D": "Amazon EC2 인스턴스에서 호스팅되는 API와 연결되는 Amazon API Gateway를 사용하여 REST API를 설계합니다. API Gateway는 세금 계산을 위해 항목 이름을 수락하고 EC2 인스턴스에 전달합니다."
      },
      "eng": {
        "A": "Provide an API hosted on an Amazon EC2 instance. The EC2 instance performs the required computations when the API request is made.",
        "B": "Design a REST API using Amazon API Gateway that accepts the item names. API Gateway passes item names to AWS Lambda for tax computations.",
        "C": "Create an Application Load Balancer that has two Amazon EC2 instances behind it. The EC2 instances will compute the tax on the received item names.",
        "D": "Design a REST API using Amazon API Gateway that connects with an API hosted on an Amazon EC2 instance. API Gateway accepts and passes the item names to the EC2 instance for tax computations."
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [
      "API Gateway"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/87529-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "B"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 341,
    "question": {
      "kor": "솔루션 설계자는 회사의 애플리케이션을 위한 새로운 마이크로서비스를 설계해야 합니다. 클라이언트는 마이크로 서비스에 도달하기 위해 HTTPS 끝점을 호출할 수 있어야 합니다. 또한 마이크로서비스는 AWS Identity and Access Management(IAM)를 사용하여 호출을 인증해야 합니다. 솔루션 설계자는 Go 1.x로 작성된 단일 AWS Lambda 함수를 사용하여 이 마이크로서비스에 대한 논리를 작성합니다.\n어떤 솔루션이 운영상 가장 효율적인 방식으로 기능을 배포합니까?",
      "eng": "A solutions architect needs to design a new microservice for a company’s application. Clients must be able to call an HTTPS endpoint to reach the microservice. The microservice also must use AWS Identity and Access Management (IAM) to authenticate calls. The solutions architect will write the logic for this microservice by using a single AWS Lambda function that is written in Go 1.x.\nWhich solution will deploy the function in the MOST operationally efficient way?"
    },
    "choices": {
      "kor": {
        "A": "Amazon API Gateway REST API를 생성합니다. Lambda 함수를 사용하도록 메서드를 구성합니다. API에서 IAM 인증을 활성화합니다.",
        "B": "함수에 대한 Lambda 함수 URL을 생성합니다. 인증 유형으로 AWS_IAM을 지정합니다.",
        "C": "Amazon CloudFront 배포를 생성합니다. 함수를 Lambda@Edge에 배포합니다. IAM 인증 로직을 Lambda@Edge 함수에 통합합니다.",
        "D": "Amazon CloudFront 배포를 생성합니다. CloudFront Functions에 함수를 배포합니다. 인증 유형으로 AWS_IAM을 지정합니다."
      },
      "eng": {
        "A": "Create an Amazon API Gateway REST API. Configure the method to use the Lambda function. Enable IAM authentication on the API.",
        "B": "Create a Lambda function URL for the function. Specify AWS_IAM as the authentication type.",
        "C": "Create an Amazon CloudFront distribution. Deploy the function to Lambda@Edge. Integrate IAM authentication logic into the Lambda@Edge function.",
        "D": "Create an Amazon CloudFront distribution. Deploy the function to CloudFront Functions. Specify AWS_IAM as the authentication type."
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [
      "API Gateway",
      "Lambda"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/95365-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "A"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 367,
    "question": {
      "kor": "회사는 Amazon API Gateway 및 AWS Lambda를 사용하여 AWS에서 RESTful 서버리스 웹 애플리케이션을 구축하고 있습니다. 이 웹 애플리케이션의 사용자는 지리적으로 분산되며 회사는 이러한 사용자에 대한 API 요청 대기 시간을 줄이려고 합니다.\n솔루션 설계자는 이러한 요구 사항을 충족하기 위해 어떤 유형의 엔드포인트를 사용해야 합니까?",
      "eng": "A company is building a RESTful serverless web application on AWS by using Amazon API Gateway and AWS Lambda. The users of this web application will be geographically distributed, and the company wants to reduce the latency of API requests to these users.\nWhich type of endpoint should a solutions architect use to meet these requirements?"
    },
    "choices": {
      "kor": {
        "A": "프라이빗 엔드포인트",
        "B": "지역 종점",
        "C": "인터페이스 VPC 엔드포인트",
        "D": "엣지 최적화 엔드포인트"
      },
      "eng": {
        "A": "Private endpoint",
        "B": "Regional endpoint",
        "C": "Interface VPC endpoint",
        "D": "Edge-optimized endpoint"
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [
      "API Gateway"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/116906-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "D"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 417,
    "question": {
      "kor": "회사에서 AWS에서 웹 애플리케이션을 구축하려고 합니다. 웹 사이트에 대한 클라이언트 액세스 요청은 예측할 수 없으며 오랫동안 유휴 상태일 수 있습니다. 가입비를 지불한 고객만이 웹 애플리케이션에 로그인하고 사용할 수 있습니다.\n이러한 요구 사항을 가장 비용 효율적으로 충족하는 단계 조합은 무엇입니까? (3개를 선택하세요.)",
      "eng": "A company wants to build a web application on AWS. Client access requests to the website are not predictable and can be idle for a long time. Only customers who have paid a subscription fee can have the ability to sign in and use the web application.\nWhich combination of steps will meet these requirements MOST cost-effectively? (Choose three.)"
    },
    "choices": {
      "kor": {
        "A": "Amazon DynamoDB에서 사용자 정보를 검색하는 AWS Lambda 함수를 생성합니다. RESTful API를 수락할 Amazon API Gateway 엔드포인트를 생성합니다. API 호출을 Lambda 함수로 보냅니다.",
        "B": "Application Load Balancer 뒤에 Amazon Elastic Container Service(Amazon ECS) 서비스를 생성하여 Amazon RDS에서 사용자 정보를 검색합니다. RESTful API를 수락할 Amazon API Gateway 엔드포인트를 생성합니다. API 호출을 Lambda 함수로 보냅니다.",
        "C": "사용자를 인증하기 위해 Amazon Cognito 사용자 풀을 생성합니다.",
        "D": "사용자를 인증하기 위해 Amazon Cognito 자격 증명 풀을 생성합니다.",
        "E": "AWS Amplify를 사용하여 HTML, CSS 및 JS로 프런트엔드 웹 콘텐츠를 제공합니다. 통합 Amazon CloudFront 구성을 사용합니다.",
        "F": "PHP, CSS 및 JS와 함께 Amazon S3 정적 웹 호스팅을 사용합니다. Amazon CloudFront를 사용하여 프런트엔드 웹 콘텐츠를 제공합니다."
      },
      "eng": {
        "A": "Create an AWS Lambda function to retrieve user information from Amazon DynamoDB. Create an Amazon API Gateway endpoint to accept RESTful APIs. Send the API calls to the Lambda function.",
        "B": "Create an Amazon Elastic Container Service (Amazon ECS) service behind an Application Load Balancer to retrieve user information from Amazon RDS. Create an Amazon API Gateway endpoint to accept RESTful APIs. Send the API calls to the Lambda function.",
        "C": "Create an Amazon Cognito user pool to authenticate users.",
        "D": "Create an Amazon Cognito identity pool to authenticate users.",
        "E": "Use AWS Amplify to serve the frontend web content with HTML, CSS, and JS. Use an integrated Amazon CloudFront configuration.",
        "F": "Use Amazon S3 static web hosting with PHP, CSS, and JS. Use Amazon CloudFront to serve the frontend web content."
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/111440-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "A",
      "C",
      "E"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 454,
    "question": {
      "kor": "전자상거래 회사는 테라바이트 규모의 고객 데이터를 AWS 클라우드에 저장합니다. 데이터에는 개인 식별 정보(PII)가 포함되어 있습니다. 회사는 세 가지 응용 프로그램에서 데이터를 사용하려고 합니다. 애플리케이션 중 하나만 PII를 처리해야 합니다. 다른 두 애플리케이션이 데이터를 처리하기 전에 PII를 제거해야 합니다.\n최소한의 운영 오버헤드로 이러한 요구 사항을 충족하는 솔루션은 무엇입니까?",
      "eng": "An ecommerce company stores terabytes of customer data in the AWS Cloud. The data contains personally identifiable information (PII). The company wants to use the data in three applications. Only one of the applications needs to process the PII. The PII must be removed before the other two applications process the data.\nWhich solution will meet these requirements with the LEAST operational overhead?"
    },
    "choices": {
      "kor": {
        "A": "Amazon DynamoDB 테이블에 데이터를 저장합니다. 각 애플리케이션이 요청하는 데이터를 가로채서 처리할 프록시 애플리케이션 계층을 생성합니다.",
        "B": "데이터를 Amazon S3 버킷에 저장합니다. 요청 애플리케이션에 데이터를 반환하기 전에 S3 객체 Lambda를 사용하여 데이터를 처리하고 변환합니다.",
        "C": "데이터를 처리하고 변환된 데이터를 3개의 개별 Amazon S3 버킷에 저장하여 각 애플리케이션이 고유한 사용자 지정 데이터 세트를 갖도록 합니다. 각 애플리케이션이 해당 S3 버킷을 가리키도록 합니다.",
        "D": "데이터를 처리하고 변환된 데이터를 3개의 별도 Amazon DynamoDB 테이블에 저장하여 각 애플리케이션이 자체 사용자 지정 데이터 세트를 갖도록 합니다. 각 애플리케이션이 해당",
        "E": "DynamoDB 테이블을 가리키도록 합니다."
      },
      "eng": {
        "A": "Store the data in an Amazon DynamoDB table. Create a proxy application layer to intercept and process the data that each application requests.",
        "B": "Store the data in an Amazon S3 bucket. Process and transform the data by using S3 Object Lambda before returning the data to the requesting application.",
        "C": "Process the data and store the transformed data in three separate Amazon S3 buckets so that each application has its own custom dataset. Point each application to its respective S3 bucket.",
        "D": "Process the data and store the transformed data in three separate Amazon DynamoDB tables so that each application has its own custom dataset. Point each application to its respective DynamoDB table."
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/99956-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "B"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 501,
    "question": {
      "kor": "회사에는 JSON 문서를 처리하고 그 결과를 온프레미스 SQL 데이터베이스에 출력하는 작은 Python 애플리케이션이 있습니다. 이 애플리케이션은 매일 수천 번 실행됩니다. 회사는 애플리케이션을 AWS 클라우드로 이동하려고 합니다. 이 회사는 확장성을 최대화하고 운영 오버헤드를 최소화하는 고가용성 솔루션이 필요합니다.\n이러한 요구 사항을 충족하는 솔루션은 무엇입니까?",
      "eng": "A company has a small Python application that processes JSON documents and outputs the results to an on-premises SQL database. The application runs thousands of times each day. The company wants to move the application to the AWS Cloud. The company needs a highly available solution that maximizes scalability and minimizes operational overhead.\nWhich solution will meet these requirements?"
    },
    "choices": {
      "kor": {
        "A": "JSON 문서를 Amazon S3 버킷에 넣습니다. 여러 Amazon EC2 인스턴스에서 Python 코드를 실행하여 문서를 처리합니다. 결과를 Amazon Aurora DB 클러스터에 저장합니다.",
        "B": "JSON 문서를 Amazon S3 버킷에 넣습니다. 문서가 S3 버킷에 도착하면 이를 처리하기 위해 Python 코드를 실행하는 AWS Lambda 함수를 생성합니다. 결과를 Amazon Aurora DB 클러스터에 저장합니다.",
        "C": "JSON 문서를 Amazon Elastic Block Store(Amazon EBS) 볼륨에 넣습니다. EBS 다중 연결 기능을 사용하여 볼륨을 여러 Amazon EC2 인스턴스에 연결합니다. EC2 인스턴스에서 Python 코드를 실행하여 문서를 처리합니다. Amazon RDS DB 인스턴스에 결과를 저장합니다.",
        "D": "문서를 대기열에 JSON Amazon Simple Queue Service(Amazon SQS) 메시지로 배치합니다. Amazon EC2 시작 유형으로 구성된 Amazon Elastic Container Service(Amazon ECS) 클러스터에 Python 코드를 컨테이너로 배포합니다. 컨테이너를 사용하여 SQS 메시지를 처리합니다. Amazon RDS DB 인스턴스에 결과를 저장합니다."
      },
      "eng": {
        "A": "Place the JSON documents in an Amazon S3 bucket. Run the Python code on multiple Amazon EC2 instances to process the documents. Store the results in an Amazon Aurora DB cluster.",
        "B": "Place the JSON documents in an Amazon S3 bucket. Create an AWS Lambda function that runs the Python code to process the documents as they arrive in the S3 bucket. Store the results in an Amazon Aurora DB cluster.",
        "C": "Place the JSON documents in an Amazon Elastic Block Store (Amazon EBS) volume. Use the EBS Multi-Attach feature to attach the volume to multiple Amazon EC2 instances. Run the Python code on the EC2 instances to process the documents. Store the results on an Amazon RDS DB instance.",
        "D": "Place the JSON documents in an Amazon Simple Queue Service (Amazon SQS) queue as messages. Deploy the Python code as a container on an Amazon Elastic Container Service (Amazon ECS) cluster that is configured with the Amazon EC2 launch type. Use the container to process the SQS messages. Store the results on an Amazon RDS DB instance."
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/87633-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "B"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 532,
    "question": {
      "kor": "소매 회사는 퍼블릭 REST API에 지역 Amazon API Gateway API를 사용합니다. API Gateway 엔드포인트는 Amazon Route 53 별칭 레코드를 가리키는 사용자 지정 도메인 이름입니다. 솔루션 아키텍트는 고객에게 최소한의 영향을 미치고 데이터 손실을 최소화하는 솔루션을 생성하여 새 버전의 API를 릴리스해야 합니다.\n이러한 요구 사항을 충족하는 솔루션은 무엇입니까?",
      "eng": "A retail company uses a regional Amazon API Gateway API for its public REST APIs. The API Gateway endpoint is a custom domain name that points to an Amazon Route 53 alias record. A solutions architect needs to create a solution that has minimal effects on customers and minimal data loss to release the new version of APIs.\nWhich solution will meet these requirements?"
    },
    "choices": {
      "kor": {
        "A": "API 게이트웨이에 대한 카나리아 릴리스 배포 단계를 생성합니다. 최신 API 버전을 배포합니다. 트래픽의 적절한 비율을 카나리아 단계로 지정합니다. API 검증 후 카나리아 단계를 프로덕션 단계로 승격합니다.",
        "B": "OpenAPI YAML 파일 형식의 새 API 버전으로 새 API 게이트웨이 엔드포인트를 생성합니다. API Gateway의 API에 병합 모드에서 가져오기-업데이트 작업을 사용합니다. API의 새 버전을 프로덕션 단계에 배포합니다.",
        "C": "OpenAPI JSON 파일 형식의 새 API 버전으로 새 API 게이트웨이 엔드포인트를 생성합니다. 덮어쓰기 모드에서 업데이트로 가져오기 작업을 API Gateway의 API에 사용합니다. API의 새 버전을 프로덕션 단계에 배포합니다.",
        "D": "API 정의의 새 버전으로 새 API 게이트웨이 엔드포인트를 생성합니다. 새 API Gateway API에 대한 사용자 지정 도메인 이름을 생성합니다. Route 53 별칭 레코드가 새 API Gateway API 사용자 지정 도메인 이름을 가리키도록 합니다."
      },
      "eng": {
        "A": "Create a canary release deployment stage for API Gateway. Deploy the latest API version. Point an appropriate percentage of traffic to the canary stage. After API verification, promote the canary stage to the production stage.",
        "B": "Create a new API Gateway endpoint with a new version of the API in OpenAPI YAML file format. Use the import-to-update operation in merge mode into the API in API Gateway. Deploy the new version of the API to the production stage.",
        "C": "Create a new API Gateway endpoint with a new version of the API in OpenAPI JSON file format. Use the import-to-update operation in overwrite mode into the API in API Gateway. Deploy the new version of the API to the production stage.",
        "D": "Create a new API Gateway endpoint with new versions of the API definitions. Create a custom domain name for the new API Gateway API. Point the Route 53 alias record to the new API Gateway API custom domain name."
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [
      "API Gateway"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/111450-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "A"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 559,
    "question": {
      "kor": "회사는 Amazon API Gateway 및 AWS Lambda를 사용하여 AWS에서 내부 서버리스 애플리케이션을 호스팅합니다. 회사 직원들은 매일 애플리케이션을 사용하기 시작할 때 대기 시간이 길어지는 문제를 보고합니다. 회사는 대기 시간을 줄이고 싶어합니다.\n어떤 솔루션이 이러한 요구 사항을 충족합니까?",
      "eng": "A company hosts an internal serverless application on AWS by using Amazon API Gateway and AWS Lambda. The company’s employees report issues with high latency when they begin using the application each day. The company wants to reduce latency.\nWhich solution will meet these requirements?"
    },
    "choices": {
      "kor": {
        "A": "API 게이트웨이 조절 한도를 늘리십시오.",
        "B": "직원이 매일 애플리케이션을 사용하기 전에 Lambda 프로비저닝 동시성을 높이기 위해 예약된 조정을 설정합니다.",
        "C": "Amazon CloudWatch 경보를 생성하여 매일 시작 시 경보 대상으로 Lambda 함수를 시작합니다.",
        "D": "Lambda 함수 메모리를 늘립니다."
      },
      "eng": {
        "A": "Increase the API Gateway throttling limit.",
        "B": "Set up a scheduled scaling to increase Lambda provisioned concurrency before employees begin to use the application each day.",
        "C": "Create an Amazon CloudWatch alarm to initiate a Lambda function as a target for the alarm at the beginning of each day.",
        "D": "Increase the Lambda function memory."
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/119465-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "B"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 591,
    "question": {
      "kor": "회사는 Amazon EC2 인스턴스에서 Java 기반 작업을 실행합니다. 작업은 매시간 실행되며 실행하는 데 10초가 걸립니다. 작업은 예약된 간격으로 실행되며 1GB의 메모리를 사용합니다.\n작업이 사용 가능한 최대 CPU를 사용하는 짧은 순간을 제외하고 인스턴스의 CPU 사용률은 낮습니다. 회사는 작업 실행 비용을 최적화하려고 합니다.\n이러한 요구 사항을 충족하는 솔루션은 무엇입니까?",
      "eng": "A company runs a Java-based job on an Amazon EC2 instance. The job runs every hour and takes 10 seconds to run. The job runs on a scheduled interval and consumes 1 GB of memory. The CPU utilization of the instance is low except for short surges during which the job uses the maximum CPU available.\nThe company wants to optimize the costs to run the job.\nWhich solution will meet these requirements?"
    },
    "choices": {
      "kor": {
        "A": "AWS App2Container(A2C)를 사용하여 작업을 컨테이너화합니다. 0.5 vCPU(가상 CPU) 및 1GB 메모리를 사용하여 AWS Fargate에서 Amazon Elastic Container Service(Amazon ECS) 작업으로 작업을 실행합니다.",
        "B": "메모리가 1GB인 AWS Lambda 함수에 코드를 복사합니다. Amazon EventBridge 예약 규칙을 생성하여 매시간 코드를 실행합니다.",
        "C": "AWS App2Container(A2C)를 사용하여 작업을 컨테이너화합니다. 기존 Amazon Machine Image(AMI)에 컨테이너를 설치합니다. 태스크가 완료되면 스케줄이 컨테이너를 중지하는지 확인하십시오.",
        "D": "작업 완료 시 EC2 인스턴스를 중지하고 다음 작업이 시작될 때 EC2 인스턴스를 다시 시작하도록 기존 일정을 구성합니다."
      },
      "eng": {
        "A": "Use AWS App2Container (A2C) to containerize the job. Run the job as an Amazon Elastic Container Service (Amazon ECS) task on AWS Fargate with 0.5 virtual CPU (vCPU) and 1 GB of memory.",
        "B": "Copy the code into an AWS Lambda function that has 1 GB of memory. Create an Amazon EventBridge scheduled rule to run the code each hour.",
        "C": "Use AWS App2Container (A2C) to containerize the job. Install the container in the existing Amazon Machine Image (AMI). Ensure that the schedule stops the container when the task finishes.",
        "D": "Configure the existing schedule to stop the EC2 instance at the completion of the job and restart the EC2 instance when the next job starts."
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/109521-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "B"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 788,
    "question": {
      "kor": "회사는 Amazon EC2 인스턴스를 사용하여 스크립트를 실행하여 Amazon Simple Queue Service(Amazon SQS) 대기열에서 메시지를 폴링하고 처리합니다. 이 회사는 대기열에 추가되는 점점 더 많은 수의 메시지를 처리할 수 있는 능력을 유지하면서 운영 비용을 절감하고자 합니다.\n이러한 요구 사항을 충족하기 위해 솔루션 설계자는 무엇을 권장해야 합니까?",
      "eng": "A company uses an Amazon EC2 instance to run a script to poll for and process messages in an Amazon Simple Queue Service (Amazon SQS) queue. The company wants to reduce operational costs while maintaining its ability to process a growing number of messages that are added to the queue.\nWhat should a solutions architect recommend to meet these requirements?"
    },
    "choices": {
      "kor": {
        "A": "메시지를 더 빠르게 처리하려면 EC2 인스턴스의 크기를 늘리십시오.",
        "B": "인스턴스가 충분히 활용되지 않을 때 Amazon EventBridge를 사용하여 EC2 인스턴스를 끕니다.",
        "C": "EC2 인스턴스의 스크립트를 적절한 런타임이 있는 AWS Lambda 함수로 마이그레이션합니다.",
        "D": "AWS Systems Manager Run Command를 사용하여 요청 시 스크립트를 실행합니다."
      },
      "eng": {
        "A": "Increase the size of the EC2 instance to process messages faster.",
        "B": "Use Amazon EventBridge to turn off the EC2 instance when the instance is underutilized.",
        "C": "Migrate the script on the EC2 instance to an AWS Lambda function with the appropriate runtime.",
        "D": "Use AWS Systems Manager Run Command to run the script on demand."
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/99698-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "C"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 827,
    "question": {
      "kor": "회사에서 REST API를 만들고 있습니다. 회사에는 TLS 사용에 대한 엄격한 요구 사항이 있습니다. 회사는 API 엔드포인트에 TLSv1.3을 요구합니다. 또한 회사는 TLS 인증서에 서명하기 위해 특정 공개 타사 인증 기관(CA)을 요구합니다.\n이러한 요구 사항을 충족하는 솔루션은 무엇입니까?",
      "eng": "A company is creating a REST API. The company has strict requirements for the use of TLS. The company requires TLSv1.3 on the API endpoints. The company also requires a specific public third-party certificate authority (CA) to sign the TLS certificate.\nWhich solution will meet these requirements?"
    },
    "choices": {
      "kor": {
        "A": "로컬 시스템을 사용하여 타사 CI가 서명한 인증서를 생성하고 인증서를 AWS Certificate Manager(ACM)로 가져옵니다. 사용자 지정 도메인을 사용하여 Amazon API Gateway에서 HTTP API를 생성합니다. 인증서를 사용하도록 사용자 지정 도메인을 구성합니다.",
        "B": "타사 CA가 서명한 AWS Certificate Manager(ACM)에서 인증서를 생성합니다. 사용자 지정 도메인을 사용하여 Amazon API Gateway에서 HTTP API를 생성합니다. 인증서를 사용하도록 사용자 지정 도메인을 구성합니다.",
        "C": "AWS Certificate Manager(ACM)를 사용하여 타사 CA에서 서명한 인증서를 생성합니다. 인증서를 AWS Certificate Manager(ACM)로 가져옵니다. Lambda 함수 URL을 사용하여 AWS Lambda 함수를 생성합니다. 인증서를 사용하도록 Lambda 함수 URL을 구성합니다.",
        "D": "타사 CA에서 서명한 AWS Certificate Manager(ACM)에서 인증서를 생성합니다. Lambda 함수 URL을 사용하여 AWS Lambda 함수를 생성합니다. 인증서를 사용하도록 Lambda 함수 URL을 구성합니다."
      },
      "eng": {
        "A": "Use a local machine to create a certificate that is signed by the third-party CI. Import the certificate into AWS Certificate Manager (ACM). Create an HTTP API in Amazon API Gateway with a custom domain. Configure the custom domain to use the certificate.",
        "B": "Create a certificate in AWS Certificate Manager (ACM) that is signed by the third-party CA. Create an HTTP API in Amazon API Gateway with a custom domain. Configure the custom domain to use the certificate.",
        "C": "Use AWS Certificate Manager (ACM) to create a certificate that is signed by the third-party CA. Import the certificate into AWS Certificate Manager (ACM). Create an AWS Lambda function with a Lambda function URL. Configure the Lambda function URL to use the certificate.",
        "D": "Create a certificate in AWS Certificate Manager (ACM) that is signed by the third-party CA. Create an AWS Lambda function with a Lambda function URL. Configure the Lambda function URL to use the certificate."
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [
      "ACM",
      "API Gateway"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/116904-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "A"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 861,
    "question": {
      "kor": "솔루션 아키텍트는 Amazon API Gateway 기반의 새로운 서비스를 설계하고 있습니다. 서비스에 대한 요청 패턴은 예측할 수 없으며 요청이 0개에서 초당 500개 이상으로 갑자기 변경될 수 있습니다. 백엔드 데이터베이스에 유지해야 하는 데이터의 총 크기는 현재 1GB 미만이며 향후 증가를 예측할 수 없습니다. 간단한 키-값 요청을 사용하여 데이터를 쿼리할 수 있습니다.\n이러한 요구 사항을 충족하는 AWS 서비스 조합은 무엇입니까? (2개를 선택하세요.)",
      "eng": "A solutions architect is designing a new service behind Amazon API Gateway. The request patterns for the service will be unpredictable and can change suddenly from 0 requests to over 500 per second. The total size of the data that needs to be persisted in a backend database is currently less than 1 GB with unpredictable future growth. Data can be queried using simple key-value requests.\nWhich combination ofAWS services would meet these requirements? (Choose two.)"
    },
    "choices": {
      "kor": {
        "A": "AWS 파게이트",
        "B": "AWS 람다",
        "C": "아마존 다이나모DB",
        "D": "아마존 EC2 자동 스케일링",
        "E": "MySQL 호환 Amazon Aurora"
      },
      "eng": {
        "A": "AWS Fargate",
        "B": "AWS Lambda",
        "C": "Amazon DynamoDB",
        "D": "Amazon EC2 Auto Scaling",
        "E": "MySQL-compatible Amazon Aurora"
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/125547-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "B",
      "C"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 903,
    "question": {
      "kor": "한 회사가 서버리스 아키텍처를 사용하는 새로운 애플리케이션을 구축하고 있습니다. 아키텍처는 수신 요청을 관리하기 위한 Amazon API Gateway REST API와 AWS Lambda 함수로 구성됩니다.\n회사는 처리를 위해 API Gateway REST API에서 받은 메시지를 여러 대상 Lambda 함수로 보낼 수 있는 서비스를 추가하려고 합니다. 서비스는 대상 Lambda 함수에 필요한 메시지만 수신할 수 있는 기능을 제공하는 메시지 필터링을 제공해야 합니다.\n최소한의 운영 오버헤드로 이러한 요구 사항을 충족하는 솔루션은 무엇입니까?",
      "eng": "A company is building a new application that uses serverless architecture. The architecture will consist of an Amazon API Gateway REST API and AWS Lambda functions to manage incoming requests.\nThe company wants to add a service that can send messages received from the API Gateway REST API to multiple target Lambda functions for processing.\nThe service must offer message filtering that gives the target Lambda functions the ability to receive only the messages the functions need.\nWhich solution will meet these requirements with the LEAST operational overhead?"
    },
    "choices": {
      "kor": {
        "A": "API Gateway REST API의 요청을 Amazon Simple Notification Service(Amazon SNS) 주제로 보냅니다. Amazon Simple Queue Service(Amazon SQS) 대기열을 SNS 주제에 등록합니다. 다양한 SQS 대기열을 폴링하도록 대상 Lambda 함수를 구성합니다.",
        "B": "API Gateway REST API의 요청을 Amazon EventBridge로 보냅니다. 대상 Lambda 함수를 호출하도록 EventBridge를 구성합니다.",
        "C": "의 요청을 용 API Gateway REST API Apache Kafka Amazon Managed Streaming(Amazon MSK)으로 보냅니다. 대상 Lambda 함수에 메시지를 게시하도록 Amazon MSK를 구성합니다.",
        "D": "API Gateway REST API의 요청을 여러 Amazon Simple Queue Service(Amazon SQS) 대기열로 보냅니다. 다양한 SQS 대기열을 폴링하도록 대상 Lambda 함수를 구성 합니다."
      },
      "eng": {
        "A": "Send the requests from the API Gateway REST API to an Amazon Simple Notification Service (Amazon SNS) topic. Subscribe Amazon Simple Queue Service (Amazon SQS) queues to the SNS topic. Configure the target Lambda functions to poll the different SQS queues.",
        "B": "Send the requests from the API Gateway REST API to Amazon EventBridge. Configure EventBridge to invoke the target Lambda functions.",
        "C": "Send the requests from the API Gateway REST API to Amazon Managed Streaming for Apache Kafka (Amazon MSK). Configure Amazon MSK to publish the messages to the target Lambda functions.",
        "D": "Send the requests from the API Gateway REST API to multiple Amazon Simple Queue Service (Amazon SQS) queues. Configure the target Lambda functions to poll the different SQS queues."
      }
    },
    "category": [
      "SNS",
      "SQS",
      "Serverless"
    ],
    "subcategory": [],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/132929-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "A"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 945,
    "question": {
      "kor": "한 회사에 직원이 15명 있습니다. 회사는 직원 시작 날짜를 Amazon DynamoDB 테이블에 저장합니다. 회사에서는 직원의 입사 기념일에 각 직원에게 이메일 메시지를 보내려고 합니다.\n가장 효율적인 운영 효율성으로 이러한 요구 사항을 충족하는 솔루션은 무엇입니까?",
      "eng": "A company has 15 employees. The company stores employee start dates in an Amazon DynamoDB table. The company wants to send an email message to each employee on the day of the employee's work anniversary.\nWhich solution will meet these requirements with the MOST operational efficiency?"
    },
    "choices": {
      "kor": {
        "A": "DynamoDB 테이블을 스캔하고 Amazon Simple 알림 서비스(Amazon SNS)를 사용하여 필요할 때 직원에게 이메일 메시지를 보내는 스크립트를 생성합니다. cron 작업을 사용하여 Amazon EC2 인스턴스에서 매일 이 스크립트를 실행하세요.",
        "B": "DynamoDB 테이블을 스캔하고 Amazon Simple Queue Service(Amazon SQS)를 사용하여 필요할 때 직원에게 이메일 메시지를 보내는 스크립트를 만듭니다. cron 작업을 사용하여 Amazon EC2 인스턴스에서 매일 이 스크립트를 실행하세요.",
        "C": "DynamoDB 테이블을 스캔하고 필요할 때 Amazon Simple 알림 서비스(Amazon SNS)를 사용하여 직원에게 이메일 메시지를 보내는 AWS Lambda 함수를 생성합니다. 이 Lambda 함수가 매일 실행되도록 예약하세요.",
        "D": "DynamoDB 테이블을 스캔하고 Amazon Simple Queue Service(Amazon SQS)를 사용하여 필요할 때 직원에게 이메일 메시지를 보내는 AWS Lambda 함수를 생성합니다. 이 Lambda 함수가 매일 실행되도록 예약하세요."
      },
      "eng": {
        "A": "Create a script that scans the DynamoDB table and uses Amazon Simple Notification Service (Amazon SNS) to send email messages to employees when necessary. Use a cron job to run this script every day on an Amazon EC2 instance.",
        "B": "Create a script that scans the DynamoDB table and uses Amazon Simple Queue Service (Amazon SQS) to send email messages to employees when necessary. Use a cron job to run this script every day on an Amazon EC2 instance.",
        "C": "Create an AWS Lambda function that scans the DynamoDB table and uses Amazon Simple Notification Service (Amazon SNS) to send email messages to employees when necessary. Schedule this Lambda function to run every day.",
        "D": "Create an AWS Lambda function that scans the DynamoDB table and uses Amazon Simple Queue Service (Amazon SQS) to send email messages to employees when necessary. Schedule this Lambda function to run every day."
      }
    },
    "category": [
      "SNS",
      "Serverless"
    ],
    "subcategory": [],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/139191-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "C"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 960,
    "question": {
      "kor": "한 회사는 Amazon S3를 사용하여 정적 웹 사이트를 호스팅합니다. 회사는 웹페이지에 문의 양식을 추가하려고 합니다. 문의 양식에는 사용자가 이름, 이메일 주소, 전화번호 및 사용자 메시지를 입력할 수 있는 동적 서버측 구성 요소가 있습니다.\n회사에서는 매월 사이트 방문 횟수가 100회 미만일 것으로 예상합니다. 문의 양식은 고객이 양식을 작성할 때 이메일로 회사에 알려야 합니다.\n이러한 요구 사항을 가장 비용 효율적으로 충족하는 솔루션은 무엇입니까?",
      "eng": "A company uses Amazon S3 to host its static website. The company wants to add a contact form to the webpage. The contact form will have dynamic serverside components for users to input their name, email address, phone number, and user message.\nThe company expects fewer than 100 site visits each month. The contact form must notify the company by email when a customer fills out the form.\nWhich solution will meet these requirements MOST cost-effectively?"
    },
    "choices": {
      "kor": {
        "A": "Amazon Elastic Container Service(Amazon ECS)에서 동적 문의 양식을 호스팅합니다. 타사 이메일 공급자에 연결하려면 Amazon Simple Email Service(Amazon SES)를 설정하십시오.",
        "B": "AWS Lambda 함수에서 문의 양식을 반환하는 Amazon API Gateway 엔드포인트를 생성합니다. Amazon Simple 알림 서비스(Amazon SNS) 주제에 메시지를 게시하도록 API 게이트웨이에서 또 다른 Lambda 함수를 구성합니다.",
        "C": "정적 콘텐츠와 동적 콘텐츠에 AWS Amplify 호스팅을 사용하여 웹 사이트를 호스팅합니다. 서버측 스크립팅을 사용하여 문의 양식을 작성합니다. 메시지를 회사에 전달하도록 Amazon Simple Queue Service(Amazon SQS)를 구성합니다.",
        "D": "웹 사이트를 Amazon S3에서 Windows Server를 실행하는 Amazon EC2 인스턴스로 마이그레이션합니다. Windows Server용 인터넷 정보 서비스(IIS)를 사용하여 웹 페이지를 호스팅합니다. 클라이언트측 스크립팅을 사용하여 문의 양식을 작성합니다. 양식을 Amazon WorkMail과 통합합니다."
      },
      "eng": {
        "A": "Host the dynamic contact form in Amazon Elastic Container Service (Amazon ECS). Set up Amazon Simple Email Service (Amazon SES) to connect to a third-party email provider.",
        "B": "Create an Amazon API Gateway endpoint that returns the contact form from an AWS Lambda function. Configure another Lambda function on the API Gateway to publish a message to an Amazon Simple Notification Service (Amazon SNS) topic.",
        "C": "Host the website by using AWS Amplify Hosting for static content and dynamic content. Use server-side scripting to build the contact form. Configure Amazon Simple Queue Service (Amazon SQS) to deliver the message to the company.",
        "D": "Migrate the website from Amazon S3 to Amazon EC2 instances that run Windows Server. Use Internet Information Services (IIS) for Windows Server to host the webpage. Use client-side scripting to build the contact form. Integrate the form with Amazon WorkMail."
      }
    },
    "category": [
      "SNS",
      "Serverless"
    ],
    "subcategory": [],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/139252-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "B"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 593,
    "question": {
      "kor": "한 회사는 애플리케이션 메시징을 정확히 한 번만 전달하면서 인프라 관리를 최소화하는 솔루션을 채택하는 것을 목표로 합니다.\n이러한 요구 사항을 충족하는 작업 조합은 무엇입니까? (2개를 선택하세요.)",
      "eng": "A company aims to employ a solution that demands minimal infrastructure management while ensuring exactly-once delivery for application messaging.\nWhich combination of actions will meet these requirements? (Select TWO.)"
    },
    "choices": {
      "kor": {
        "A": "아키텍처의 컴퓨팅 계층에 AWS Lambda를 활용합니다.",
        "B": "아키텍처의 컴퓨팅 계층에 Amazon EC2 인스턴스를 사용합니다.",
        "C": "컴퓨팅 계층 간의 메시징 구성 요소로 Amazon Simple 알림 서비스(Amazon SNS)를 구현합니다.",
        "D": "Amazon Simple Queue Service(Amazon SQS) FIFO 대기열을 컴퓨팅 계층 간의 메시징 구성 요소로 활용합니다.",
        "E": "아키텍처의 컴퓨팅 계층을 위해 Amazon Elastic Kubernetes Service(Amazon EKS)를 기반으로 컨테이너를 배포합니다."
      },
      "eng": {
        "A": "Utilize AWS Lambda for the compute layers in the architecture.",
        "B": "Employ Amazon EC2 instances for the compute layers in the architecture.",
        "C": "Implement Amazon Simple Notification Service (Amazon SNS) as the messaging component between the compute layers.",
        "D": "Utilize Amazon Simple Queue Service (Amazon SQS) FIFO queues as the messaging component between the compute layers.",
        "E": "Deploy containers based on Amazon Elastic Kubernetes Service (Amazon EKS) for the compute layers in the architecture."
      }
    },
    "category": [
      "Messaging",
      "Serverless"
    ],
    "subcategory": [
      "SQS"
    ],
    "rote_memorization": false,
    "answer": [
      "A",
      "D"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 908,
    "question": {
      "kor": "회사에는 가상 머신(VM)을 기반으로 하는 다중 계층 결제 처리 애플리케이션이 있습니다. 계층 간의 통신은 정확히 1회 전달을 보장하는 타사 미들웨어 솔루션을 통해 비동기적으로 발생합니다.\n회사에는 최소한의 인프라 관리가 필요한 솔루션이 필요합니다. 솔루션은 애플리케이션 메시징을 정확히 한 번만 전달하도록 보장해야 합니다.\n이러한 요구 사항을 충족하는 작업 조합은 무엇입니까? (2개를 선택하세요.)",
      "eng": "A company has a multi-tier payment processing application that is based on virtual machines (VMs). The communication between the tiers occurs asynchronously through a third-party middleware solution that guarantees exactly-once delivery.\nThe company needs a solution that requires the least amount of infrastructure management. The solution must guarantee exactly-once delivery for application messaging.\nWhich combination of actions will meet these requirements? (Choose two.)"
    },
    "choices": {
      "kor": {
        "A": "아키텍처의 컴퓨팅 계층에 AWS Lambda를 사용하십시오.",
        "B": "아키텍처의 컴퓨팅 계층에 Amazon EC2 인스턴스를 사용하십시오.",
        "C": "컴퓨팅 계층 사이의 메시징 구성 요소로 Amazon Simple 알림 서비스(Amazon SNS)를 사용합니다.",
        "D": "Amazon Simple Queue Service(Amazon SQS) FIFO 대기열을 컴퓨팅 계층 간의 메시징 구성 요소로 사용합니다.",
        "E": "아키텍처의 컴퓨팅 계층에 Amazon Elastic Kubernetes Service(Amazon EKS)를 기반으로 하는 컨테이너를 사용합니다."
      },
      "eng": {
        "A": "Use AWS Lambda for the compute layers in the architecture.",
        "B": "Use Amazon EC2 instances for the compute layers in the architecture.",
        "C": "Use Amazon Simple Notification Service (Amazon SNS) as the messaging component between the compute layers.",
        "D": "Use Amazon Simple Queue Service (Amazon SQS) FIFO queues as the messaging component between the compute layers.",
        "E": "Use containers that are based on Amazon Elastic Kubernetes Service (Amazon EKS) for the compute layers in the architecture."
      }
    },
    "category": [
      "Messaging",
      "Serverless"
    ],
    "subcategory": [
      "SQS"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/google/view/133405-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "A",
      "D"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 452,
    "question": {
      "kor": "회사에서 AWS Lambda와 함께 이벤트 기반 프로그래밍 모델을 사용하려고 합니다. 회사는 Java 11에서 실행되는 Lambda 함수의 시작 지연 시간을 줄이려고 합니다. 회사는 애플리케이션에 대한 엄격한 지연 시간 요구 사항이 없습니다. 이 회사는 함수가 확장될 때 콜드 스타트와 이상치 대기 시간을 줄이려고 합니다.\n이러한 요구 사항을 가장 비용 효율적으로 충족하는 솔루션은 무엇입니까?",
      "eng": "A company wants to use an event-driven programming model with AWS Lambda. The company wants to reduce startup latency for Lambda functions that run on Java 11. The company does not have strict latency requirements for the applications. The company wants to reduce cold starts and outlier latencies when a function scales up.\nWhich solution will meet these requirements MOST cost-effectively?"
    },
    "choices": {
      "kor": {
        "A": "Lambda 프로비저닝된 동시성을 구성합니다.",
        "B": "Lambda 함수의 제한 시간을 늘립니다.",
        "C": "Lambda 함수의 메모리를 늘립니다.",
        "D": "Lambda SnapStart를 구성합니다."
      },
      "eng": {
        "A": "Configure Lambda provisioned concurrency.",
        "B": "Increase the timeout of the Lambda functions.",
        "C": "Increase the memory of the Lambda functions.",
        "D": "Configure Lambda SnapStart."
      }
    },
    "category": [
      "Lambda"
    ],
    "subcategory": [
      "SnapStart"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/116925-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "D"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 259,
    "question": {
      "kor": "회사에서 주요 웹 애플리케이션 중 하나의 콘텐츠에 대한 액세스를 제한하고 AWS에서 사용할 수 있는 권한 부여 기술을 사용하여 콘텐츠를 보호하려고 합니다. 이 회사는 서버리스 아키텍처와 100명 미만의 사용자를 위한 인증 솔루션을 구현하려고 합니다. 솔루션은 기본 웹 애플리케이션과 통합하고 웹 콘텐츠를 전역적으로 제공해야 합니다. 솔루션은 또한 회사의 사용자 기반이 성장함에 따라 확장되어야 하며 가능한 한 가장 낮은 로그인 대기 시간을 제공해야 합니다.\n이러한 요구 사항을 가장 비용 효율적으로 충족하는 솔루션은 무엇입니까?",
      "eng": "A company wants to restrict access to the content of one of its main web applications and to protect the content by using authorization techniques available on AWS. The company wants to implement a serverless architecture and an authentication solution for fewer than 100 users. The solution needs to integrate with the main web application and serve web content globally. The solution must also scale as the company's user base grows while providing the lowest login latency possible.\nWhich solution will meet these requirements MOST cost-effectively?"
    },
    "choices": {
      "kor": {
        "A": "인증에 Amazon Cognito를 사용하십시오. 인증을 위해 Lambda@Edge를 사용합니다. Amazon CloudFront를 사용하여 전 세계적으로 웹 애플리케이션을 제공합니다.",
        "B": "인증을 위해 Microsoft Active Directory용 AWS Directory Service를 사용합니다. 승인을 위해 AWS Lambda를 사용합니다. Application Load Balancer를 사용하여 웹 애플리케이션을 전역적으로 제공합니다.",
        "C": "인증에 Amazon Cognito를 사용합니다. 승인을 위해 AWS Lambda를 사용합니다. Amazon S3 Transfer Acceleration을 사용하여 전 세계적으로 웹 애플리케이션을 제공합니다.",
        "D": "인증을 위해 Microsoft Active Directory용 AWS Directory Service를 사용합니다. 인증을 위해 Lambda@Edge를 사용합니다. AWS Elastic Beanstalk를 사용하여 전 세계적으로 웹 애플리케이션을 제공합니다."
      },
      "eng": {
        "A": "Use Amazon Cognito for authentication. Use Lambda@Edge for authorization. Use Amazon CloudFront to serve the web application globally.",
        "B": "Use AWS Directory Service for Microsoft Active Directory for authentication. Use AWS Lambda for authorization. Use an Application Load Balancer to serve the web application globally.",
        "C": "Use Amazon Cognito for authentication. Use AWS Lambda for authorization. Use Amazon S3 Transfer Acceleration to serve the web application globally.",
        "D": "Use AWS Directory Service for Microsoft Active Directory for authentication. Use Lambda@Edge for authorization. Use AWS Elastic Beanstalk to serve the web application globally."
      }
    },
    "category": [
      "Lambda"
    ],
    "subcategory": [
      "Lambda@Edge"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/100341-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "A"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 385,
    "question": {
      "kor": "한 회사가 최근 전 세계 고객을 대상으로 소매 웹 사이트를 배포한다고 발표했습니다. 웹 사이트는 Elastic Load Balancer 뒤에 있는 여러 Amazon EC2 인스턴스에서 실행됩니다. 인스턴스는 여러 가용 영역의 Auto Scaling 그룹에서 실행됩니다.\n회사는 고객이 웹 사이트에 액세스하는 데 사용하는 장치에 따라 다양한 버전의 콘텐츠를 고객에게 제공하려고 합니다.\n이러한 요구 사항을 충족하기 위해 솔루션 설계자는 어떤 작업 조합을 수행해야 합니까? (두 가지를 선택하세요.)",
      "eng": "A company recently announced the deployment of its retail website to a global audience. The website runs on multiple Amazon EC2 instances behind an Elastic Load Balancer. The instances run in an Auto Scaling group across multiple Availability Zones.\nThe company wants to provide its customers with different versions of content based on the devices that the customers use to access the website.\nWhich combination of actions should a solutions architect take to meet these requirements? (Choose two.)"
    },
    "choices": {
      "kor": {
        "A": "여러 버전의 콘텐츠를 캐시하도록 Amazon CloudFront를 구성합니다.",
        "B": "트래픽을 다른 인스턴스로 전달하도록 Network Load Balancer에서 호스트 헤더를 구성합니다.",
        "C": "User-Agent 헤더를 기반으로 사용자에게 특정 객체를 보내도록 Lambda@Edge 함수를 구성합니다 .",
        "D": "AWS Global Accelerator를 구성합니다. NLB(Network Load Balancer)에 요청을 전달합니다. 다른 EC2 인스턴스에 대한 호스트 기반 라우팅을 설정하도록 NLB를 구성합니다.",
        "E": "AWS Global Accelerator를 구성합니다. NLB(Network Load Balancer)에 요청을 전달합니다. 다른 EC2 인스턴스에 대한 경로 기반 라우팅을 설정하도록 NLB를 구성합니다."
      },
      "eng": {
        "A": "Configure Amazon CloudFront to cache multiple versions of the content.",
        "B": "Configure a host header in a Network Load Balancer to forward traffic to different instances.",
        "C": "Configure a Lambda@Edge function to send specific objects to users based on the User-Agent header.",
        "D": "Configure AWS Global Accelerator. Forward requests to a Network Load Balancer (NLB). Configure the NLB to set up host-based routing to different EC2 instances.",
        "E": "Configure AWS Global Accelerator. Forward requests to a Network Load Balancer (NLB). Configure the NLB to set up path-based routing to different EC2 instances."
      }
    },
    "category": [
      "Lambda"
    ],
    "subcategory": [
      "Lambda@Edge"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/95011-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "A",
      "C"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 408,
    "question": {
      "kor": "소셜 미디어 회사는 뒤의 인스턴스에서 애플리케이션을 ALB(Application Load Balancer) Amazon EC2 실행합니다. ALB는 Amazon CloudFront 배포의 오리진입니다. 이 애플리케이션은 Amazon S3 버킷에 10억 개 이상의 이미지가 저장되어 있으며 초당 수천 개의 이미지를 처리합니다. 회사는 이미지 크기를 동적으로 조정하고 고객에게 적절한 형식을 제공하기를 원합니다.\n최소한의 운영 오버헤드로 이러한 요구 사항을 충족하는 솔루션은 무엇입니까?",
      "eng": "A social media company runs its application on Amazon EC2 instances behind an Application Load Balancer (ALB). The ALB is the origin for an Amazon CloudFront distribution. The application has more than a billion images stored in an Amazon S3 bucket and processes thousands of images each second.\nThe company wants to resize the images dynamically and serve appropriate formats to clients.\nWhich solution will meet these requirements with the LEAST operational overhead?"
    },
    "choices": {
      "kor": {
        "A": "EC2 인스턴스에 외부 이미지 관리 라이브러리를 설치합니다. 이미지 관리 라이브러리를 사용하여 이미지를 처리합니다.",
        "B": "CloudFront 오리진 요청 정책을 생성합니다. 정책을 사용하여 자동으로 이미지 크기를 조정하고 요청의 User-Agent HTTP 헤더를 기반으로 적절한 형식을 제공합니다.",
        "C": "외부 이미지 관리 라이브러리와 함께 Lambda@Edge 함수를 사용합니다. Lambda@Edge 함수를 이미지를 제공하는 CloudFront 동작과 연결합니다 .",
        "D": "CloudFront 응답 헤더 정책을 생성합니다. 정책을 사용하여 자동으로 이미지 크기를 조정하고 요청의 User-Agent HTTP 헤더를 기반으로 적절한 형식을 제공합니다."
      },
      "eng": {
        "A": "Install an external image management library on an EC2 instance. Use the image management library to process the images.",
        "B": "Create a CloudFront origin request policy. Use the policy to automatically resize images and to serve the appropriate format based on the User-Agent HTTP header in the request.",
        "C": "Use a Lambda@Edge function with an external image management library. Associate the Lambda@Edge function with the CloudFront behaviors that serve the images.",
        "D": "Create a CloudFront response headers policy. Use the policy to automatically resize images and to serve the appropriate format based on the User-Agent HTTP header in the request."
      }
    },
    "category": [
      "Lambda"
    ],
    "subcategory": [
      "Lambda@Edge"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/100231-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "C"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 492,
    "question": {
      "kor": "회사에서 마이크로서비스 기반 서버리스 웹 애플리케이션을 실행합니다. 애플리케이션은 여러 Amazon DynamoDB 테이블에서 데이터를 검색할 수 있어야 합니다. 솔루션 설계자는 애플리케이션의 기본 성능에 영향을 주지 않고 데이터를 검색할 수 있는 기능을 애플리케이션에 제공해야 합니다.\n운영상 가장 효율적인 방식으로 이러한 요구 사항을 충족하는 솔루션은 무엇입니까?",
      "eng": "A company runs a microservice-based serverless web application. The application must be able to retrieve data from multiple Amazon DynamoDB tables. A solutions architect needs to give the application the ability to retrieve the data with no impact on the baseline performance of the application.\nWhich solution will meet these requirements in the MOST operationally efficient way?"
    },
    "choices": {
      "kor": {
        "A": "AWS AppSync 파이프라인 해석기",
        "B": "Lambda@Edge 기능이 있는 Amazon CloudFront",
        "C": "AWS Lambda 함수를 사용하는 엣지 최적화 Amazon API Gateway",
        "D": "DynamoDB 커넥터를 사용한 Amazon Athena Federated Query"
      },
      "eng": {
        "A": "AWS AppSync pipeline resolvers",
        "B": "Amazon CloudFront with Lambda@Edge functions",
        "C": "Edge-optimized Amazon API Gateway with AWS Lambda functions",
        "D": "Amazon Athena Federated Query with a DynamoDB connector"
      }
    },
    "category": [
      "Lambda"
    ],
    "subcategory": [
      "Lambda@Edge"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/109701-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "B"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 546,
    "question": {
      "kor": "소셜 미디어 회사는 ALB(Application Load Balancer) 뒤의 Amazon EC2 인스턴스에서 애플리케이션을 실행합니다. ALB는 Amazon CloudFront 배포의 오리진입니다. 이 애플리케이션은 Amazon S3 버킷에 10억 개 이상의 이미지가 저장되어 있으며 초당 수천 개의 이미지를 처리합니다. 회사는 이미지 크기를 동적으로 조정하고 고객에게 적절한 형식을 제공하기를 원합니다.\n최소한의 운영 오버헤드로 이러한 요구 사항을 충족하는 솔루션은 무엇입니까?",
      "eng": "A social media company runs its application on Amazon EC2 instances behind an Application Load Balancer (ALB). The ALB is the origin for an Amazon CloudFront distribution. The application has more than a billion images stored in an Amazon S3 bucket and processes thousands of images each second.\nThe company wants to resize the images dynamically and serve appropriate formats to clients.\nWhich solution will meet these requirements with the LEAST operational overhead?"
    },
    "choices": {
      "kor": {
        "A": "EC2 인스턴스에 외부 이미지 관리 라이브러리를 설치합니다. 이미지 관리 라이브러리를 사용하여 이미지를 처리합니다.",
        "B": "CloudFront 오리진 요청 정책을 생성합니다. 정책을 사용하여 자동으로 이미지 크기를 조정하고 요청의 User-Agent HTTP 헤더를 기반으로 적절한 형식을 제공합니다.",
        "C": "외부 이미지 관리 라이브러리와 함께 Lambda@Edge 함수를 사용합니다. Lambda@Edge 함수를 이미지를 제공하는 CloudFront 동작과 연결합니다 .",
        "D": "CloudFront 응답 헤더 정책을 생성합니다. 정책을 사용하여 자동으로 이미지 크기를 조정하고 요청의 User-Agent HTTP 헤더를 기반으로 적절한 형식을 제공합니다."
      },
      "eng": {
        "A": "Install an external image management library on an EC2 instance. Use the image management library to process the images.",
        "B": "Create a CloudFront origin request policy. Use the policy to automatically resize images and to serve the appropriate format based on the User-Agent HTTP header in the request.",
        "C": "Use a Lambda@Edge function with an external image management library. Associate the Lambda@Edge function with the CloudFront behaviors that serve the images.",
        "D": "Create a CloudFront response headers policy. Use the policy to automatically resize images and to serve the appropriate format based on the User-Agent HTTP header in the request."
      }
    },
    "category": [
      "Lambda"
    ],
    "subcategory": [
      "Lambda@Edge"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/100231-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "C"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 958,
    "question": {
      "kor": "회사에서는 웹 애플리케이션 콘텐츠에 대한 액세스를 제한하려고 합니다. 회사는 AWS에서 사용할 수 있는 인증 기술을 사용하여 콘텐츠를 보호해야 합니다. 또한 회사는 로그인 대기 시간이 짧은 권한 부여 및 인증을 위한 서버리스 아키텍처를 구현하려고 합니다.\n솔루션은 웹 애플리케이션과 통합되어야 하며 웹 콘텐츠를 전역적으로 제공해야 합니다. 현재 애플리케이션의 사용자 기반은 작지만 회사는 애플리케이션의 사용자 기반이 증가할 것으로 예상하고 있습니다.\n어떤 솔루션이 이러한 요구 사항을 충족합니까?",
      "eng": "A company wants to restrict access to the content of its web application. The company needs to protect the content by using authorization techniques that are available on AWS. The company also wants to implement a serverless architecture for authorization and authentication that has low login latency.\nThe solution must integrate with the web application and serve web content globally. The application currently has a small user base, but the company expects the application's user base to increase.\nWhich solution will meet these requirements?"
    },
    "choices": {
      "kor": {
        "A": "인증을 위해 Amazon Cognito를 구성합니다. 인증을 위해 Lambda@Edge를 구현합니다. 웹 애플리케이션을 전 세계적으로 제공하도록 Amazon CloudFront를 구성합니다.",
        "B": "인증을 위해 Microsoft Active Directory용 AWS 디렉터리 서비스를 구성합니다. 인증을 위해 AWS Lambda를 구현합니다. Application Load Balancer를 사용하여 웹 애플리케이션을 전역적으로 제공합니다.",
        "C": "인증을 위해 Amazon Cognito를 구성합니다. 인증을 위해 AWS Lambda를 구현합니다. Amazon S3 Transfer Acceleration을 사용하여 웹 애플리케이션을 전 세계적으로 제공 합니다.",
        "D": "인증을 위해 Microsoft Active Directory용 AWS 디렉터리 서비스를 구성합니다. 인증을 위해 Lambda@Edge를 구현합니다. AWS Elastic Beanstalk를 사용하여 웹 애플리케이션을 전 세계적으로 제공합니다."
      },
      "eng": {
        "A": "Configure Amazon Cognito for authentication. Implement Lambda@Edge for authorization. Configure Amazon CloudFront to serve the web application globally.",
        "B": "Configure AWS Directory Service for Microsoft Active Directory for authentication. Implement AWS Lambda for authorization. Use an Application Load Balancer to serve the web application globally.",
        "C": "Configure Amazon Cognito for authentication. Implement AWS Lambda for authorization. Use Amazon S3 Transfer Acceleration to serve the web application globally.",
        "D": "Configure AWS Directory Service for Microsoft Active Directory for authentication. Implement Lambda@Edge for authorization. Use AWS Elastic Beanstalk to serve the web application globally."
      }
    },
    "category": [
      "Lambda"
    ],
    "subcategory": [
      "Lambda@Edge"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/138553-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "A"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 921,
    "question": {
      "kor": "회사에 환경 변수를 사용하는 AWS Lambda 함수가 있습니다. 회사는 개발자가 환경 변수를 일반 텍스트로 보는 것을 원하지 않습니다.\n어떤 솔루션이 이러한 요구 사항을 충족합니까?",
      "eng": "A company has AWS Lambda functions that use environment variables. The company does not want its developers to see environment variables in plaintext.\nWhich solution will meet these requirements?"
    },
    "choices": {
      "kor": {
        "A": "Lambda 함수를 사용하는 대신 Amazon EC2 인스턴스에 코드를 배포하십시오.",
        "B": "AWS CloudHSM을 사용하여 환경 변수를 저장하고 암호화하도록 Lambda 함수에 SSL 암호화를 구성합니다.",
        "C": "AWS Certificate Manager(ACM)에서 인증서를 생성합니다. 인증서를 사용하여 환경 변수를 암호화하도록 Lambda 함수를 구성합니다.",
        "D": "AWS Key Management Service(AWS KMS) 키를 생성합니다. KMS 키를 사용하여 환경 변수를 저장하고 암호화하려면 Lambda 함수에서 암호화 도우미를 활성화하십시오."
      },
      "eng": {
        "A": "Deploy code to Amazon EC2 instances instead of using Lambda functions.",
        "B": "Configure SSL encryption on the Lambda functions to use AWS CloudHSM to store and encrypt the environment variables.",
        "C": "Create a certificate in AWS Certificate Manager (ACM). Configure the Lambda functions to use the certificate to encrypt the environment variables.",
        "D": "Create an AWS Key Management Service (AWS KMS) key. Enable encryption helpers on the Lambda functions to use the KMS key to store and encrypt the environment variables."
      }
    },
    "category": [
      "Lambda"
    ],
    "subcategory": [
      "KMS"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/133030-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "D"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 438,
    "question": {
      "kor": "솔루션 설계자는 현금 회수 서비스를 위해 Amazon API Gateway에서 REST API를 설계하고 있습니다. 응용 프로그램에는 컴퓨팅 리소스를 위해 1GB의 메모리와 2GB의 스토리지가 필요합니다. 애플리케이션은 데이터가 관계형 형식이어야 합니다.\n최소한의 관리 노력으로 이러한 요구 사항을 충족하는 추가 AWS 서비스 조합은 무엇입니까? (두 가지를 선택하세요.)",
      "eng": "A solutions architect is designing a REST API in Amazon API Gateway for a cash payback service. The application requires 1 GB of memory and 2 GB of storage for its computation resources. The application will require that the data is in a relational format.\nWhich additional combination ofAWS services will meet these requirements with the LEAST administrative effort? (Choose two.)"
    },
    "choices": {
      "kor": {
        "A": "아마존 EC2",
        "B": "AWS 람다",
        "C": "아마존 RDS",
        "D": "아마존 DynamoDB",
        "E": "Amazon Elastic Kubernetes 서비스(Amazon EKS)"
      },
      "eng": {
        "A": "Amazon EC2",
        "B": "AWS Lambda",
        "C": "Amazon RDS",
        "D": "Amazon DynamoDB",
        "E": "Amazon Elastic Kubernetes Services (Amazon EKS)"
      }
    },
    "category": [
      "Database",
      "Serverless"
    ],
    "subcategory": [
      "Lambda",
      "RDS"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/109435-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "B",
      "C"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 834,
    "question": {
      "kor": "한 회사는 분석을 처리하고 예측하기 위해 다양한 웹 애플리케이션에서 고객 활동을 캡처하는 솔루션을 설계하고 있습니다. 웹 애플리케이션에서의 고객 활동은 예측할 수 없으며 갑자기 증가할 수 있습니다. 회사에는 다른 웹 애플리케이션과 통합되는 솔루션이 필요합니다. 솔루션에는 보안 목적을 위한 인증 단계가 포함되어야 합니다.\n어떤 솔루션이 이러한 요구 사항을 충족합니까?",
      "eng": "A company is designing a solution to capture customer activity in different web applications to process analytics and make predictions. Customer activity in the web applications is unpredictable and can increase suddenly. The company requires a solution that integrates with other web applications. The solution must include an authorization step for security purposes.\nWhich solution will meet these requirements?"
    },
    "choices": {
      "kor": {
        "A": "회사가 Amazon Elastic File System(Amazon EFS) 파일 시스템에서 수신하는 정보를 저장하는 Amazon Elastic Container Service(Amazon ECS) 컨테이너 인스턴스 앞에 게이트웨이 로드 밸런서(GWLB)를 구성합니다. 승인은 GWLB에서 해결됩니다.",
        "B": "회사가 Amazon S3 버킷에 수신하는 정보를 저장하는 Amazon Kinesis 데이터 스트림 앞에 Amazon API Gateway 엔드포인트를 구성합니다. AWS Lambda 함수를 사용하여 인증을 해결합니다.",
        "C": "회사가 Amazon S3 버킷에 수신하는 정보를 저장하는 Amazon Kinesis Data Firehose 앞에 Amazon API Gateway 엔드포인트를 구성합니다. API Gateway Lambda 권한 부여자를 사용하여 권한 부여를 해결합니다.",
        "D": "회사가 Amazon Elastic File System(Amazon EFS) 파일 시스템에서 수신하는 정보를 저장하는 Amazon Elastic Container Service(Amazon ECS) 컨테이너 인스턴스 앞에 게이트웨이 로드 밸런서(GWLB)를 구성합니다. AWS Lambda 함수를 사용하여 인증을 해결합니다."
      },
      "eng": {
        "A": "Configure a Gateway Load Balancer (GWLB) in front of an Amazon Elastic Container Service (Amazon ECS) container instance that stores the information that the company receives in an Amazon Elastic File System (Amazon EFS) file system. Authorization is resolved at the GWLB.",
        "B": "Configure an Amazon API Gateway endpoint in front of an Amazon Kinesis data stream that stores the information that the company receives in an Amazon S3 bucket. Use an AWS Lambda function to resolve authorization.",
        "C": "Configure an Amazon API Gateway endpoint in front of an Amazon Kinesis Data Firehose that stores the information that the company receives in an Amazon S3 bucket. Use an API Gateway Lambda authorizer to resolve authorization.",
        "D": "Configure a Gateway Load Balancer (GWLB) in front of an Amazon Elastic Container Service (Amazon ECS) container instance that stores the information that the company receives on an Amazon Elastic File System (Amazon EFS) file system. Use an AWS Lambda function to resolve authorization."
      }
    },
    "category": [
      "Data Processing",
      "Serverless"
    ],
    "subcategory": [],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/119576-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "C"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 658,
    "question": {
      "kor": "한 회사가 AWS에서 결제 애플리케이션을 실행하려고 합니다. 애플리케이션은 모바일 장치로부터 결제 알림을 받습니다. 결제 알림은 추가 처리를 위해 전송되기 전에 기본적인 확인이 필요합니다.\n백엔드 처리 애플리케이션은 장기간 실행되며 컴퓨팅 및 메모리를 조정해야 합니다. 회사는 인프라 관리를 원하지 않습니다.\n최소한의 운영 오버헤드로 이러한 요구 사항을 충족하는 솔루션은 무엇입니까?",
      "eng": "A company wants to run its payment application on AWS. The application receives payment notifications from mobile devices. Payment notifications require a basic validation before they are sent for further processing.\nThe backend processing application is long running and requires compute and memory to be adjusted. The company does not want to manage the infrastructure.\nWhich solution will meet these requirements with the LEAST operational overhead?"
    },
    "choices": {
      "kor": {
        "A": "Amazon Simple Queue Service(Amazon SQS) 대기열을 생성합니다. 대기열을 Amazon EventBridge 규칙과 통합하여 모바일 장치에서 결제 알림을 받습니다. 결제 알림을 검증하고 백엔드 애플리케이션에 알림을 보내도록 규칙을 구성합니다. Amazon Elastic Kubernetes Service(Amazon EKS)에 백엔드 애플리케이션을 어디서나 배포합니다. 독립형 클러스터를 만듭니다.",
        "B": "Amazon API Gateway API를 생성합니다. API를 AWS Step Functions 상태 머신과 통합하여 모바일 장치로부터 결제 알림을 수신하세요. 상태 시스템을 호출하여 결제 알림을 검증하고 백엔드 애플리케이션에 알림을 보냅니다. Amazon Elastic Kubernetes Service(Amazon EKS)에 백엔드 애플리케이션을 배포합니다. 자체 관리형 노드로 EKS 클러스터를 구성합니다.",
        "C": "Amazon Simple Queue Service(Amazon SQS) 대기열을 생성합니다. 대기열을 Amazon EventBridge 규칙과 통합하여 모바일 장치에서 결제 알림을 받습니다. 결제 알림을 검증하고 백엔드 애플리케이션에 알림을 보내도록 규칙을 구성합니다. Amazon EC2 스팟 인스턴스에 백엔드 애플리케이션을 배포합니다. 기본 할당 전략으로 스팟 집합을 구성합니다.",
        "D": "Amazon API Gateway API를 생성합니다. API를 AWS Lambda와 통합하여 모바일 장치로부터 결제 알림을 받으세요. Lambda 함수를 호출하여 결제 알림을 검증하고 백엔드 애플리케이션에 알림을 보냅니다. Amazon Elastic Container Service(Amazon ECS)에 백엔드 애플리케이션을 배포합니다. AWS Fargate 시작 유형으로 Amazon ECS를 구성 합니다."
      },
      "eng": {
        "A": "Create an Amazon Simple Queue Service (Amazon SQS) queue. Integrate the queue with an Amazon EventBridge rule to receive payment notifications from mobile devices. Configure the rule to validate payment notifications and send the notifications to the backend application. Deploy the backend application on Amazon Elastic Kubernetes Service (Amazon EKS) Anywhere. Create a standalone cluster.",
        "B": "Create an Amazon API Gateway API. Integrate the API with an AWS Step Functions state machine to receive payment notifications from mobile devices. Invoke the state machine to validate payment notifications and send the notifications to the backend application. Deploy the backend application on Amazon Elastic Kubernetes Service (Amazon EKS). Configure an EKS cluster with self-managed nodes.",
        "C": "Create an Amazon Simple Queue Service (Amazon SQS) queue. Integrate the queue with an Amazon EventBridge rule to receive payment notifications from mobile devices. Configure the rule to validate payment notifications and send the notifications to the backend application. Deploy the backend application on Amazon EC2 Spot Instances. Configure a Spot Fleet with a default allocation strategy.",
        "D": "Create an Amazon API Gateway API. Integrate the API with AWS Lambda to receive payment notifications from mobile devices. Invoke a Lambda function to validate payment notifications and send the notifications to the backend application. Deploy the backend application on Amazon Elastic Container Service (Amazon ECS). Configure Amazon ECS with an AWS Fargate launch type."
      }
    },
    "category": [
      "Container",
      "Serverless"
    ],
    "subcategory": [],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/135260-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "D"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 809,
    "question": {
      "kor": "회사에서 고객을 위한 검색 카탈로그를 제공할 마이크로서비스 애플리케이션을 개발하고 있습니다. 회사는 REST API를 사용하여 애플리케이션의 프런트엔드를 사용자에게 제시해야 합니다.\nREST API는 회사가 프라이빗 VPC 서브넷의 컨테이너에서 호스팅하는 백엔드 서비스에 액세스해야 합니다.\n이러한 요구 사항을 충족하는 솔루션은 무엇입니까?",
      "eng": "A company is developing a microservices application that will provide a search catalog for customers. The company must use REST APIs to present the frontend of the application to users. The REST APIs must access the backend services that the company hosts in containers in private VPC subnets.\nWhich solution will meet these requirements?"
    },
    "choices": {
      "kor": {
        "A": "Amazon API Gateway를 사용하여 WebSocket API를 설계합니다. 프라이빗 서브넷의 Amazon Elastic Container Service(Amazon ECS)에서 애플리케이션을 호스팅합니다. Amazon ECS에 액세스하기 위해 API Gateway용 프라이빗 VPC 링크를 생성합니다.",
        "B": "Amazon API Gateway를 사용하여 REST API를 설계합니다. 프라이빗 서브넷의 Amazon Elastic Container Service(Amazon ECS)에서 애플리케이션을 호스팅합니다. Amazon ECS에 액세스하기 위해 API Gateway용 프라이빗 VPC 링크를 생성합니다.",
        "C": "Amazon API Gateway를 사용하여 WebSocket API를 설계합니다. 프라이빗 서브넷의 Amazon Elastic Container Service(Amazon ECS)에서 애플리케이션을 호스팅합니다. Amazon ECS에 액세스하기 위해 API Gateway에 대한 보안 그룹을 생성합니다.",
        "D": "Amazon API Gateway를 사용하여 REST API를 설계합니다. 프라이빗 서브넷의 Amazon Elastic Container Service(Amazon ECS)에서 애플리케이션을 호스팅합니다. Amazon ECS에 액세스하기 위해 API Gateway에 대한 보안 그룹을 생성합니다."
      },
      "eng": {
        "A": "Design a WebSocket API by using Amazon API Gateway. Host the application in Amazon Elastic Container Service (Amazon ECS) in a private subnet. Create a private VPC link for API Gateway to access Amazon ECS.",
        "B": "Design a REST API by using Amazon API Gateway. Host the application in Amazon Elastic Container Service (Amazon ECS) in a private subnet. Create a private VPC link for API Gateway to access Amazon ECS.",
        "C": "Design a WebSocket API by using Amazon API Gateway. Host the application in Amazon Elastic Container Service (Amazon ECS) in a private subnet. Create a security group for API Gateway to access Amazon ECS.",
        "D": "Design a REST API by using Amazon API Gateway. Host the application in Amazon Elastic Container Service (Amazon ECS) in a private subnet. Create a security group for API Gateway to access Amazon ECS."
      }
    },
    "category": [
      "Container",
      "Serverless",
      "VPC"
    ],
    "subcategory": [],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/109451-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "B"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  }
]