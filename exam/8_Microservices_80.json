[
  {
    "idx": 40,
    "question": {
      "kor": "한 회사가 Amazon Route 53에 도메인 이름을 등록했습니다. 이 회사는 ca-central-1 리전의 Amazon API Gateway를 백엔드 마이크로서비스 API용 퍼블릭 인터페이스로 사용합니다. 타사 서비스는 API를 안전하게 사용합니다. 회사는 타사 서비스가 HTTPS를 사용할 수 있도록 회사의 도메인 이름과 해당 인증서로 API 게이트웨이 URL을 설계하려고 합니다.\n이러한 요구 사항을 충족하는 솔루션은 무엇입니까?",
      "eng": "A company has registered its domain name with Amazon Route 53. The company uses Amazon API Gateway in the ca-central-1 Region as a public interface for its backend microservice APIs. Third-party services consume the APIs securely. The company wants to design its API Gateway URL with the company's domain name and corresponding certificate so that the third-party services can use HTTPS.\nWhich solution will meet these requirements?"
    },
    "choices": {
      "kor": {
        "A": "API Gateway에서 Name=\"Endpoint-URL\" 및 Value=\"Company Domain Name\"으로 단계 변수를 생성하여 기본 URL을 덮어씁니다. 회사 도메인 이름과 연결된 공인 인증서를 AWS Certificate Manager(ACM)로 가져옵니다.",
        "B": "회사의 도메인 이름으로 Route 53 DNS 레코드를 생성합니다. 별칭 레코드가 지역 API 게이트웨이 단계 엔드포인트를 가리킵니다. 회사 도메인 이름과 연결된 공인 인증서를 us-east-1 리전의 AWS Certificate Manager(ACM)로 가져옵니다.",
        "C": "지역 API 게이트웨이 엔드포인트를 생성합니다. API Gateway 끝점을 회사의 도메인 이름과 연결합니다. 회사 도메인 이름과 연결된 공인 인증서를 동일한 리전의 AWS Certificate Manager(ACM)로 가져옵니다. API Gateway 엔드포인트에 인증서를 연결합니다. 트래픽을 API 게이트웨이 엔드포인트로 라우팅하도록 Route 53을 구성합니다.",
        "D": "지역 API 게이트웨이 엔드포인트를 생성합니다. API Gateway 끝점을 회사의 도메인 이름과 연결합니다. 회사 도메인 이름과 연결된 공인 인증서를 us-east-1 리전의 AWS Certificate Manager(ACM)로 가져옵니다. API Gateway API에 인증서를 연결합니다. 회사의 도메인 이름으로 Route 53 DNS 레코드를 생성합니다. A 레코드가 회사의 도메인 이름을 가리킵니다."
      },
      "eng": {
        "A": "Create stage variables in API Gateway with Name=\"Endpoint-URL\" and Value=\"Company Domain Name\" to overwrite the default URL. Import the public certificate associated with the company's domain name into AWS Certificate Manager (ACM).",
        "B": "Create Route 53 DNS records with the company's domain name. Point the alias record to the Regional API Gateway stage endpoint. Import the public certificate associated with the company's domain name into AWS Certificate Manager (ACM) in the us-east-1 Region.",
        "C": "Create a Regional API Gateway endpoint. Associate the API Gateway endpoint with the company's domain name. Import the public certificate associated with the company's domain name into AWS Certificate Manager (ACM) in the same Region. Attach the certificate to the API Gateway endpoint. Configure Route 53 to route traffic to the API Gateway endpoint.",
        "D": "Create a Regional API Gateway endpoint. Associate the API Gateway endpoint with the company's domain name. Import the public certificate associated with the company's domain name into AWS Certificate Manager (ACM) in the us-east-1 Region. Attach the certificate to the API Gateway APIs. Create Route 53 DNS records with the company's domain name. Point an A record to the company's domain name."
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [
      "API Gateway"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/85266-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "C"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 46,
    "question": {
      "kor": "자전거 공유 회사는 피크 운영 시간 동안 자전거의 위치를 추적하기 위해 다계층 아키텍처를 개발하고 있습니다. 회사는 기존 분석 플랫폼에서 이러한 데이터 포인트를 사용하려고 합니다. 솔루션 설계자는 이 아키텍처를 지원하기 위해 가장 실행 가능한 다중 계층 옵션을 결정해야 합니다. 데이터 포인트는 REST API에서 액세스할 수 있어야 합니다.\n위치 데이터 저장 및 검색에 대한 이러한 요구 사항을 충족하는 작업은 무엇입니까?",
      "eng": "A bicycle sharing company is developing a multi-tier architecture to track the location of its bicycles during peak operating hours. The company wants to use these data points in its existing analytics platform. A solutions architect must determine the most viable multi-tier option to support this architecture. The data points must be accessible from the REST API.\nWhich action meets these requirements for storing and retrieving location data?"
    },
    "choices": {
      "kor": {
        "A": "Amazon S3와 함께 Amazon Athena를 사용합니다.",
        "B": "AWS Lambda와 함께 Amazon API Gateway를 사용합니다.",
        "C": "Amazon Redshift와 함께 Amazon QuickSight를 사용합니다.",
        "D": "Amazon Kinesis Data Analytics와 함께 Amazon API Gateway를 사용합니다."
      },
      "eng": {
        "A": "Use Amazon Athena with Amazon S3.",
        "B": "Use Amazon API Gateway with AWS Lambda.",
        "C": "Use Amazon QuickSight with Amazon Redshift.",
        "D": "Use Amazon API Gateway with Amazon Kinesis Data Analytics."
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [
      "API Gateway",
      "Lambda"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/85212-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "B"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 47,
    "question": {
      "kor": "한 회사에서 REST API로 검색할 주문 배송 통계를 제공하는 애플리케이션을 개발하고 있습니다. 회사는 배송 통계를 추출하고 데이터를 읽기 쉬운 HTML 형식으로 구성하고 매일 아침 동시에 여러 이메일 주소로 보고서를 보내려고 합니다.\n이러한 요구 사항을 충족하기 위해 솔루션 설계자는 어떤 단계 조합을 수행해야 합니까? (두 가지를 선택하세요.)",
      "eng": "A company is developing an application that provides order shipping statistics for retrieval by a REST API. The company wants to extract the shipping statistics, organize the data into an easy-to-read HTML format, and send the report to several email addresses at the same time every morning.\nWhich combination of steps should a solutions architect take to meet these requirements? (Choose two.)"
    },
    "choices": {
      "kor": {
        "A": "데이터를 Amazon Kinesis Data Firehose로 보내도록 애플리케이션을 구성합니다.",
        "B": "Amazon Simple Email Service(Amazon SES)를 사용하여 데이터 형식을 지정하고 이메일로 보고서를 보냅니다.",
        "C": "데이터에 대한 애플리케이션의 API를 쿼리하기 위해 AWS Glue 작업을 호출하는 Amazon EventBridge(Amazon CloudWatch Events) 예약 이벤트를 생성합니다.",
        "D": "데이터에 대한 애플리케이션의 API를 쿼리하기 위해 AWS Lambda 함수를 호출하는 Amazon EventBridge(Amazon CloudWatch Events) 예약 이벤트를 생성합니다.",
        "E": "애플리케이션 데이터를 Amazon S3에 저장합니다. 보고서를 이메일로 보낼 S3 이벤트 대상으로 Amazon Simple Notification Service(Amazon SNS) 주제를 생성합니다."
      },
      "eng": {
        "A": "Configure the application to send the data to Amazon Kinesis Data Firehose.",
        "B": "Use Amazon Simple Email Service (Amazon SES) to format the data and to send the report by email.",
        "C": "Create an Amazon EventBridge (Amazon CloudWatch Events) scheduled event that invokes an AWS Glue job to query the application's API for the data.",
        "D": "Create an Amazon EventBridge (Amazon CloudWatch Events) scheduled event that invokes an AWS Lambda function to query the application's API for the data.",
        "E": "Store the application data in Amazon S3. Create an Amazon Simple Notification Service (Amazon SNS) topic as an S3 event destination to send the report by email."
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [
      "SES",
      "Lambda"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/85557-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "B",
      "D"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 60,
    "question": {
      "kor": "한 전자상거래 회사가 AWS에서 하루에 하나의 거래 웹사이트를 시작하려고 합니다. 매일 24시간 동안 정확히 하나의 제품이 판매됩니다. 이 회사는 사용량이 많은 시간에 밀리초 대기 시간으로 시간당 수백만 건의 요청을 처리할 수 있기를 원합니다. 최소한의 운영 오버헤드로 이러한 요구 사항을 충족하는 솔루션은 무엇입니까?",
      "eng": "An ecommerce company wants to launch a one-deal-a-day website on AWS. Each day will feature exactly one product on sale for a period of 24 hours. The company wants to be able to handle millions of requests each hour with millisecond latency during peak hours.\nWhich solution will meet these requirements with the LEAST operational overhead?"
    },
    "choices": {
      "kor": {
        "A": "Amazon S3를 사용하여 다른 S3 버킷에서 전체 웹 사이트를 호스팅합니다. Amazon CloudFront 배포를 추가합니다. S3 버킷을 배포의 원본으로 설정합니다. 주문 데이터를 Amazon S3에 저장합니다.",
        "B": "여러 가용 영역의 Auto Scaling 그룹에서 실행되는 Amazon EC2 인스턴스에 전체 웹 사이트를 배포합니다. ALB(Application Load Balancer)를 추가하여 웹 사이트 트래픽을 분산합니다. 백엔드 API에 대해 다른 ALB를 추가합니다. MySQL용 Amazon RDS에 데이터를 저장합니다.",
        "C": "전체 애플리케이션을 마이그레이션하여 컨테이너에서 실행합니다. Amazon Elastic Kubernetes Service(Amazon EKS)에서 컨테이너를 호스팅합니다. Kubernetes ClusterAutoscaler를 사용하여 팟(Pod) 수를 늘리거나 줄여 트래픽의 버스트를 처리합니다. MySQL용 Amazon RDS에 데이터를 저장합니다.",
        "D": "Amazon S3 버킷을 사용하여 웹 사이트의 정적 콘텐츠를 호스팅합니다. Amazon CloudFront 배포를 배포합니다. S3 버킷을 오리진으로 설정합니다. 백엔드 API에 Amazon API Gateway 및 AWS Lambda 함수를 사용합니다. Amazon DynamoDB에 데이터를 저장합니다."
      },
      "eng": {
        "A": "Use Amazon S3 to host the full website in different S3 buckets. Add Amazon CloudFront distributions. Set the S3 buckets as origins for the distributions. Store the order data in Amazon S3.",
        "B": "Deploy the full website on Amazon EC2 instances that run in Auto Scaling groups across multiple Availability Zones. Add an Application Load Balancer (ALB) to distribute the website traffic. Add another ALB for the backend APIs. Store the data in Amazon RDS for MySQL.",
        "C": "Migrate the full application to run in containers. Host the containers on Amazon Elastic Kubernetes Service (Amazon EKS). Use the Kubernetes Cluster Autoscaler to increase and decrease the number of pods to process bursts in traffic. Store the data in Amazon RDS for MySQL.",
        "D": "Use an Amazon S3 bucket to host the website's static content. Deploy an Amazon CloudFront distribution. Set the S3 bucket as the origin. Use Amazon API Gateway and AWS Lambda functions for the backend APIs. Store the data in Amazon DynamoDB."
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [
      "S3",
      "CloudFront",
      "API Gateway",
      "Lambda",
      "operational overhead"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/85195-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "D"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 86,
    "question": {
      "kor": "회사에는 Amazon RDS의 데이터베이스에 목록을 저장하는 자동차 판매 웹 사이트가 있습니다. 자동차가 판매되면 웹사이트에서 목록을 제거하고 데이터를 여러 대상 시스템으로 전송해야 합니다.\n솔루션 설계자는 어떤 디자인을 추천해야 합니까?",
      "eng": "A company has an automobile sales website that stores its listings in a database on Amazon RDS. When an automobile is sold, the listing needs to be removed from the website and the data must be sent to multiple target systems.\nWhich design should a solutions architect recommend?"
    },
    "choices": {
      "kor": {
        "A": "대상이 소비할 Amazon Simple Queue Service(Amazon SQS) 대기열로 정보를 전송하도록 Amazon RDS의 데이터베이스가 업데이트될 때 트리거되는 AWS Lambda 함수를 생성합니다.",
        "B": "대상이 사용할 Amazon Simple Queue Service(Amazon SQS) FIFO 대기열에 정보를 전송하도록 Amazon RDS의 데이터베이스가 업데이트될 때 트리거되는 AWS Lambda 함수를 생성합니다.",
        "C": "RDS 이벤트 알림을 구독하고 여러 Amazon Simple Notification Service(Amazon SNS) 주제로 팬 아웃된 Amazon Simple Queue Service(Amazon SQS) 대기열을 보냅니다. AWS Lambda 함수를 사용하여 대상을 업데이트합니다.",
        "D": "RDS 이벤트 알림을 구독하고 여러 Amazon Simple Queue Service(Amazon SQS) 대기열로 팬 아웃된 Amazon Simple Notification Service(Amazon SNS) 주제를 보냅니다. AWS Lambda 함수를 사용하여 대상을 업데이트합니다."
      },
      "eng": {
        "A": "Create an AWS Lambda function triggered when the database on Amazon RDS is updated to send the information to an Amazon Simple Queue Service (Amazon SQS) queue for the targets to consume.",
        "B": "Create an AWS Lambda function triggered when the database on Amazon RDS is updated to send the information to an Amazon Simple Queue Service (Amazon SQS) FIFO queue for the targets to consume.",
        "C": "Subscribe to an RDS event notification and send an Amazon Simple Queue Service (Amazon SQS) queue fanned out to multiple Amazon Simple Notification Service (Amazon SNS) topics. Use AWS Lambda functions to update the targets.",
        "D": "Subscribe to an RDS event notification and send an Amazon Simple Notification Service (Amazon SNS) topic fanned out to multiple Amazon Simple Queue Service (Amazon SQS) queues. Use AWS Lambda functions to update the targets."
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [
      "Lambda"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/85427-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "A"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 108,
    "question": {
      "kor": "한 회사에서 다중 계층 애플리케이션을 온프레미스에서 AWS 클라우드로 이동하여 애플리케이션의 성능을 개선하려고 합니다. 애플리케이션은 RESTful 서비스를 통해 서로 통신하는 애플리케이션 계층으로 구성됩니다. 한 계층이 과부하되면 트랜잭션이 삭제됩니다. 솔루션 설계자는 이러한 문제를 해결하고 애플리케이션을 현대화하는 솔루션을 설계해야 합니다.\n어떤 솔루션이 이러한 요구 사항을 충족하고 운영상 가장 효율적입니까?",
      "eng": "A company wants to move a multi-tiered application from on premises to the AWS Cloud to improve the application's performance. The application consists of application tiers that communicate with each other by way of RESTful services. Transactions are dropped when one tier becomes overloaded. A solutions architect must design a solution that resolves these issues and modernizes the application.\nWhich solution meets these requirements and is the MOST operationally efficient?"
    },
    "choices": {
      "kor": {
        "A": "Amazon API Gateway를 사용하고 애플리케이션 계층으로 AWS Lambda 기능에 대한 직접 트랜잭션을 사용합니다. 애플리케이션 서비스 간의 통신 계층으로 Amazon Simple Queue Service(Amazon SQS)를 사용합니다.",
        "B": "Amazon CloudWatch 지표를 사용하여 애플리케이션 성능 기록을 분석하여 성능 장애 시 서버의 최대 사용률을 결정합니다. 최대 요구 사항을 충족하도록 애플리케이션 서버의 Amazon EC2 인스턴스 크기를 늘립니다.",
        "C": "Amazon Simple Notification Service(Amazon SNS)를 사용하여 Auto Scaling 그룹의 Amazon EC2에서 실행되는 애플리케이션 서버 간의 메시징을 처리합니다. Amazon CloudWatch를 사용하여 SNS 대기열 길이를 모니터링하고 필요에 따라 확장 및 축소합니다.",
        "D": "Amazon Simple Queue Service(Amazon SQS)를 사용하여 Auto Scaling 그룹의 Amazon EC2에서 실행되는 애플리케이션 서버 간의 메시징을 처리합니다. Amazon CloudWatch를 사용하여 SQS 대기열 길이를 모니터링하고 통신 실패가 감지되면 확장합니다."
      },
      "eng": {
        "A": "Use Amazon API Gateway and direct transactions to the AWS Lambda functions as the application layer. Use Amazon Simple Queue Service (Amazon SQS) as the communication layer between application services.",
        "B": "Use Amazon CloudWatch metrics to analyze the application performance history to determine the servers' peak utilization during the performance failures. Increase the size of the application server's Amazon EC2 instances to meet the peak requirements.",
        "C": "Use Amazon Simple Notification Service (Amazon SNS) to handle the messaging between application servers running on Amazon EC2 in an Auto Scaling group. Use Amazon CloudWatch to monitor the SNS queue length and scale up and down as required.",
        "D": "Use Amazon Simple Queue Service (Amazon SQS) to handle the messaging between application servers running on Amazon EC2 in an Auto Scaling group. Use Amazon CloudWatch to monitor the SQS queue length and scale up when communication failures are detected."
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [
      "API Gateway",
      "Lambda",
      "SQS"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/86120-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "A"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 142,
    "question": {
      "kor": "회사에 소프트웨어 엔지니어링에 사용되는 AWS 계정이 있습니다. AWS 계정은 한 쌍의 AWS Direct Connect 연결을 통해 회사의 온프레미스 데이터 센터에 액세스할 수 있습니다. 모든 비 VPC 트래픽은 가상 프라이빗 게이트웨이로 라우팅됩니다.\n개발팀은 최근 콘솔을 통해 AWS Lambda 함수를 생성했습니다. 개발 팀은 함수가 회사 데이터 센터의 프라이빗 서브넷에서 실행되는 데이터베이스에 액세스할 수 있도록 허용해야 합니다.\n이러한 요구 사항을 충족하는 솔루션은 무엇입니까?",
      "eng": "A company has an AWS account used for software engineering. The AWS account has access to the company’s on-premises data center through a pair of AWS Direct Connect connections. All non-VPC traffic routes to the virtual private gateway.\nA development team recently created an AWS Lambda function through the console. The development team needs to allow the function to access a database that runs in a private subnet in the company’s data center.\nWhich solution will meet these requirements?"
    },
    "choices": {
      "kor": {
        "A": "적절한 보안 그룹을 사용하여 VPC에서 실행되도록 Lambda 함수를 구성합니다.",
        "B": "AWS에서 데이터 센터로 VPN 연결을 설정합니다. VPN을 통해 Lambda 함수의 트래픽을 라우팅합니다.",
        "C": "Lambda 함수가 Direct Connect를 통해 온프레미스 데이터 센터에 액세스할 수 있도록 VPC의 라우팅 테이블을 업데이트합니다.",
        "D": "탄력적 IP 주소를 생성합니다. 탄력적 네트워크 인터페이스 없이 탄력적 IP 주소를 통해 트래픽을 보내도록 Lambda 함수를 구성합니다."
      },
      "eng": {
        "A": "Configure the Lambda function to run in the VPC with the appropriate security group.",
        "B": "Set up a VPN connection from AWS to the data center. Route the traffic from the Lambda function through the VPN.",
        "C": "Update the route tables in the VPC to allow the Lambda function to access the on-premises data center through Direct Connect.",
        "D": "Create an Elastic IP address. Configure the Lambda function to send traffic through the Elastic IP address without an elastic network interface."
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [
      "Lambda"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/87534-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "A"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 188,
    "question": {
      "kor": "회사에서 3계층 웹 애플리케이션을 사용하여 신입 직원에게 교육을 제공합니다. 애플리케이션은 매일 12시간 동안만 액세스됩니다. 이 회사는 Amazon RDS for MySQL DB 인스턴스를 사용하여 정보를 저장하고 비용을 최소화하려고 합니다.\n솔루션 설계자는 이러한 요구 사항을 충족하기 위해 무엇을 해야 합니까?",
      "eng": "A company uses a three-tier web application to provide training to new employees. The application is accessed for only 12 hours every day. The company is using an Amazon RDS for MySQL DB instance to store information and wants to minimize costs.\nWhat should a solutions architect do to meet these requirements?"
    },
    "choices": {
      "kor": {
        "A": "AWS Systems Manager Session Manager에 대한 IAM 정책을 구성합니다. 정책에 대한 IAM 역할을 생성합니다. 역할의 신뢰 관계를 업데이트합니다. DB 인스턴스에 대한 자동 시작 및 중지를 설정합니다.",
        "B": "DB 인스턴스가 중지될 때 사용자가 캐시에서 데이터에 액세스할 수 있는 기능을 제공하는 Redis용 Amazon ElastiCache 캐시 클러스터를 생성합니다. DB 인스턴스가 시작된 후 캐시를 무효화합니다.",
        "C": "Amazon EC2 인스턴스를 시작합니다. Amazon RDS에 대한 액세스 권한을 부여하는 IAM 역할을 생성합니다. 역할을 EC2 인스턴스에 연결합니다. 원하는 일정에 따라 EC2 인스턴스를 시작 및 중지하도록 cron 작업을 구성합니다.",
        "D": "DB 인스턴스를 시작하고 중지하는 AWS Lambda 함수를 생성합니다. Amazon EventBridge(Amazon CloudWatch Events) 예약 규칙을 생성하여 Lambda 함수를 호출합니다. 규칙에 대한 이벤트 대상으로 Lambda 함수를 구성합니다."
      },
      "eng": {
        "A": "Configure an IAM policy for AWS Systems Manager Session Manager. Create an IAM role for the policy. Update the trust relationship of the role. Set up automatic start and stop for the DB instance.",
        "B": "Create an Amazon ElastiCache for Redis cache cluster that gives users the ability to access the data from the cache when the DB instance is stopped. Invalidate the cache after the DB instance is started.",
        "C": "Launch an Amazon EC2 instance. Create an IAM role that grants access to Amazon RDS. Attach the role to the EC2 instance. Configure a cron job to start and stop the EC2 instance on the desired schedule.",
        "D": "Create AWS Lambda functions to start and stop the DB instance. Create Amazon EventBridge (Amazon CloudWatch Events) scheduled rules to invoke the Lambda functions. Configure the Lambda functions as event targets for the rules."
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [
      "Lambda",
      "EventBridge"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/86046-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "D"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 205,
    "question": {
      "kor": "회사의 웹 애플리케이션은 함수 앞의 와 데이터베이스로 AWS Lambda Amazon API Gateway API Amazon DynamoDB 구성됩니다. Lambda 함수는 비즈니스 로직을 처리하고 DynamoDB 테이블은 데이터를 호스팅합니다. 애플리케이션은 Amazon Cognito 사용자 풀을 사용하여 애플리케이션의 개별 사용자를 식별합니다. 솔루션 설계자는 구독이 있는 사용자만 프리미엄 콘텐츠에 액세스할 수 있도록 애플리케이션을 업데이트해야 합니다.\n최소한의 운영 오버헤드로 이 요구 사항을 충족하는 솔루션은 무엇입니까?",
      "eng": "A company’s web application consists of an Amazon API Gateway API in front of an AWS Lambda function and an Amazon DynamoDB database. The Lambda function handles the business logic, and the DynamoDB table hosts the data. The application uses Amazon Cognito user pools to identify the individual users of the application. A solutions architect needs to update the application so that only users who have a subscription can access premium content.\nWhich solution will meet this requirement with the LEAST operational overhead?"
    },
    "choices": {
      "kor": {
        "A": "API Gateway API에서 API 캐싱 및 제한을 활성화합니다.",
        "B": "API Gateway API에서 AWS WAF를 설정합니다. 구독이 있는 사용자를 필터링하는 규칙을 만듭니다.",
        "C": "DynamoDB 테이블의 프리미엄 콘텐츠에 세분화된 IAM 권한을 적용합니다.",
        "D": "구독하지 않은 사용자의 액세스를 제한하기 위해 API 사용 계획 및 API 키를 구현합니다."
      },
      "eng": {
        "A": "Enable API caching and throttling on the API Gateway API.",
        "B": "Set up AWS WAF on the API Gateway API. Create a rule to filter users who have a subscription.",
        "C": "Apply fine-grained IAM permissions to the premium content in the DynamoDB table.",
        "D": "Implement API usage plans and API keys to limit the access of users who do not have a subscription."
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [
      "API Gateway"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/102128-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "D"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 208,
    "question": {
      "kor": "회사는 Amazon S3를 사용하여 정적 웹 사이트를 호스팅합니다. 회사는 웹 페이지에 연락처 양식을 추가하려고 합니다. 연락처 양식에는 사용자가 이름, 이메일 주소, 전화번호 및 사용자 메시지를 입력할 수 있는 동적 서버 측 구성 요소가 있습니다. 회사는 매월 100회 미만의 사이트 방문이 있을 것으로 예상합니다.\n이러한 요구 사항을 가장 비용 효율적으로 충족하는 솔루션은 무엇입니까?",
      "eng": "A company hosts its static website by using Amazon S3. The company wants to add a contact form to its webpage. The contact form will have dynamic server-side components for users to input their name, email address, phone number, and user message. The company anticipates that there will be fewer than 100 site visits each month.\nWhich solution will meet these requirements MOST cost-effectively?"
    },
    "choices": {
      "kor": {
        "A": "Amazon Elastic Container Service(Amazon ECS)에서 동적 문의 양식 페이지를 호스팅합니다. 타사 이메일 공급자에 연결하도록 Amazon Simple Email Service(Amazon SES)를 설정합니다.",
        "B": "Amazon Simple Email Service(Amazon SES)를 호출하는 AWS Lambda 백엔드로 Amazon API Gateway 엔드포인트를 생성합니다.",
        "C": "Amazon Lightsail을 배포하여 정적 웹 페이지를 동적으로 변환합니다. 클라이언트 측 스크립팅을 사용하여 연락처 양식을 작성합니다. 양식을 Amazon WorkMail과 통합합니다.",
        "D": "t2.micro Amazon EC2 인스턴스를 생성합니다. LAMP(Linux, Apache, MySQL, PHP/Perl/Python) 스택을 배포하여 웹 페이지를 호스팅합니다. 클라이언트 측 스크립팅을 사용하여 연락처 양식을 작성합니다. 양식을 Amazon WorkMail과 통합합니다."
      },
      "eng": {
        "A": "Host a dynamic contact form page in Amazon Elastic Container Service (Amazon ECS). Set up Amazon Simple Email Service (Amazon SES) to connect to any third-party email provider.",
        "B": "Create an Amazon API Gateway endpoint with an AWS Lambda backend that makes a call to Amazon Simple Email Service (Amazon SES).",
        "C": "Convert the static webpage to dynamic by deploying Amazon Lightsail. Use client-side scripting to build the contact form. Integrate the form with Amazon WorkMail.",
        "D": "Create a t2.micro Amazon EC2 instance. Deploy a LAMP (Linux, Apache, MySQL, PHP/Perl/Python) stack to host the webpage. Use client-side scripting to build the contact form. Integrate the form with Amazon WorkMail."
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [
      "API Gateway",
      "Lambda",
      "SES"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/99680-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "B"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 254,
    "question": {
      "kor": "회사에서 새로운 동적 주문 웹사이트를 구축하고 있습니다. 회사는 서버 유지 관리 및 패치를 최소화하려고 합니다. 웹 사이트는 가용성이 높아야 하며 사용자 요구의 변화를 충족하기 위해 가능한 한 빨리 읽기 및 쓰기 용량을 확장해야 합니다.\n이러한 요구 사항을 충족하는 솔루션은 무엇입니까?",
      "eng": "A company is building a new dynamic ordering website. The company wants to minimize server maintenance and patching. The website must be highly available and must scale read and write capacity as quickly as possible to meet changes in user demand.\nWhich solution will meet these requirements?"
    },
    "choices": {
      "kor": {
        "A": "Amazon S3에서 정적 콘텐츠를 호스팅합니다. Amazon API Gateway 및 AWS Lambda를 사용하여 동적 콘텐츠를 호스팅합니다. 데이터베이스에 대한 온디맨드 용량과 함께 Amazon DynamoDB를 사용합니다. 웹 사이트 콘텐츠를 제공하도록 Amazon CloudFront를 구성합니다.",
        "B": "Amazon S3에서 정적 콘텐츠를 호스팅합니다. Amazon API Gateway 및 AWS Lambda를 사용하여 동적 콘텐츠를 호스팅합니다. 데이터베이스에는 Aurora Auto Scaling과 함께 Amazon Aurora를 사용합니다. 웹 사이트 콘텐츠를 제공하도록 Amazon CloudFront를 구성합니다.",
        "C": "Amazon EC2 인스턴스에서 모든 웹 사이트 콘텐츠를 호스팅합니다. Auto Scaling 그룹을 생성하여 EC2 인스턴스를 확장합니다. Application Load Balancer를 사용하여 트래픽을 분산합니다. 데이터베이스에 대해 프로비저닝된 쓰기 용량과 함께 Amazon DynamoDB를 사용합니다.",
        "D": "Amazon EC2 인스턴스에서 모든 웹 사이트 콘텐츠를 호스팅합니다. Auto Scaling 그룹을 생성하여 EC2 인스턴스를 확장합니다. Application Load Balancer를 사용하여 트래픽을 분산합니다. 데이터베이스에는 Aurora Auto Scaling과 함께 Amazon Aurora를 사용합니다."
      },
      "eng": {
        "A": "Host static content in Amazon S3. Host dynamic content by using Amazon API Gateway and AWS Lambda. Use Amazon DynamoDB with on-demand capacity for the database. Configure Amazon CloudFront to deliver the website content.",
        "B": "Host static content in Amazon S3. Host dynamic content by using Amazon API Gateway and AWS Lambda. Use Amazon Aurora with Aurora Auto Scaling for the database. Configure Amazon CloudFront to deliver the website content.",
        "C": "Host all the website content on Amazon EC2 instances. Create an Auto Scaling group to scale the EC2 instances. Use an Application Load Balancer to distribute traffic. Use Amazon DynamoDB with provisioned write capacity for the database.",
        "D": "Host all the website content on Amazon EC2 instances. Create an Auto Scaling group to scale the EC2 instances. Use an Application Load Balancer to distribute traffic. Use Amazon Aurora with Aurora Auto Scaling for the database."
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [
      "S3",
      "API Gateway",
      "Lambda",
      "DynamoDB",
      "CloudFront"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/87570-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "A"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 284,
    "question": {
      "kor": "회사에서 계층적 구조 관계로 직원 데이터를 저장하는 애플리케이션을 만들고자 합니다. 회사는 직원 데이터에 대한 트래픽이 많은 쿼리에 대한 최소 대기 시간 응답이 필요하며 민감한 데이터를 보호해야 합니다. 회사는 또한 직원 데이터에 재무 정보가 있는 경우 월별 이메일 메시지를 받아야 합니다.\n이러한 요구 사항을 충족하기 위해 솔루션 설계자는 어떤 단계 조합을 수행해야 합니까? (두 가지를 선택하세요.)",
      "eng": "A company wants to create an application to store employee data in a hierarchical structured relationship. The company needs a minimum-latency response to high-traffic queries for the employee data and must protect any sensitive data. The company also needs to receive monthly email messages if any financial information is present in the employee data.\nWhich combination of steps should a solutions architect take to meet these requirements? (Choose two.)"
    },
    "choices": {
      "kor": {
        "A": "Amazon Redshift를 사용하여 직원 데이터를 계층에 저장합니다. 매월 Amazon S3에 데이터를 언로드합니다.",
        "B": "Amazon DynamoDB를 사용하여 직원 데이터를 계층에 저장합니다. 매월 데이터를 Amazon S3로 내보냅니다.",
        "C": "AWS 계정에 대해 Amazon Macie를 구성합니다. Macie를 Amazon EventBridge와 통합하여 월별 이벤트를 AWS Lambda로 전송합니다.",
        "D": "Amazon Athena를 사용하여 Amazon S3에서 직원 데이터를 분석합니다. Athena를 Amazon QuickSight와 통합하여 분석 대시보드를 게시하고 사용자와 대시보드를 공유합니다.",
        "E": "AWS 계정에 대해 Amazon Macie를 구성합니다. Macie를 Amazon EventBridge와 통합하여 Amazon Simple Notification Service(Amazon SNS) 구독을 통해 월별 알림을 보냅니다."
      },
      "eng": {
        "A": "Use Amazon Redshift to store the employee data in hierarchies. Unload the data to Amazon S3 every month.",
        "B": "Use Amazon DynamoDB to store the employee data in hierarchies. Export the data to Amazon S3 every month.",
        "C": "Configure Amazon Macie for the AWS account. Integrate Macie with Amazon EventBridge to send monthly events to AWS Lambda.",
        "D": "Use Amazon Athena to analyze the employee data in Amazon S3. Integrate Athena with Amazon QuickSight to publish analysis dashboards and share the dashboards with users.",
        "E": "Configure Amazon Macie for the AWS account. Integrate Macie with Amazon EventBridge to send monthly notifications through an Amazon Simple Notification Service (Amazon SNS) subscription."
      }
    },
    "category": [
      "Serverless",
      "Macie"
    ],
    "subcategory": [
      "DynamoDB"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/99940-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "B",
      "E"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 308,
    "question": {
      "kor": "회사의 시설에는 건물 전체의 모든 입구에 배지 판독기가 있습니다. 배지를 스캔하면 판독기가 HTTPS를 통해 메시지를 보내 누가 해당 입구에 액세스하려고 시도했는지 나타냅니다.\n솔루션 설계자는 센서에서 보내는 이러한 메시지를 처리하는 시스템을 설계해야 합니다. 솔루션은 가용성이 높아야 하며 회사의 보안 팀이 분석할 수 있도록 결과를 제공해야 합니다.\n솔루션 설계자는 어떤 시스템 아키텍처를 추천해야 합니까?",
      "eng": "A company’s facility has badge readers at every entrance throughout the building. When badges are scanned, the readers send a message over HTTPS to indicate who attempted to access that particular entrance.\nA solutions architect must design a system to process these messages from the sensors. The solution must be highly available, and the results must be made available for the company’s security team to analyze.\nWhich system architecture should the solutions architect recommend?"
    },
    "choices": {
      "kor": {
        "A": "Amazon EC2 인스턴스를 시작하여 HTTPS 엔드포인트 역할을 하고 메시지를 처리합니다. 결과를 Amazon S3 버킷에 저장하도록 EC2 인스턴스를 구성합니다.",
        "B": "Amazon API Gateway에서 HTTPS 엔드포인트를 생성합니다. AWS Lambda 함수를 호출하여 메시지를 처리하고 결과를 Amazon DynamoDB 테이블에 저장하도록 API Gateway 엔드포인트를 구성합니다.",
        "C": "Amazon Route 53을 사용하여 들어오는 센서 메시지를 AWS Lambda 함수로 보냅니다. 메시지를 처리하고 결과를 Amazon DynamoDB 테이블에 저장하도록 Lambda 함수를 구성합니다.",
        "D": "Amazon S3용 게이트웨이 VPC 엔드포인트를 생성합니다. 센서 데이터가 VPC 엔드포인트를 통해 S3 버킷에 직접 기록될 수 있도록 시설 네트워크에서 VPC로의 Site-to-Site VPN 연결을 구성합니다."
      },
      "eng": {
        "A": "Launch an Amazon EC2 instance to serve as the HTTPS endpoint and to process the messages. Configure the EC2 instance to save the results to an Amazon S3 bucket.",
        "B": "Create an HTTPS endpoint in Amazon API Gateway. Configure the API Gateway endpoint to invoke an AWS Lambda function to process the messages and save the results to an Amazon DynamoDB table.",
        "C": "Use Amazon Route 53 to direct incoming sensor messages to an AWS Lambda function. Configure the Lambda function to process the messages and save the results to an Amazon DynamoDB table.",
        "D": "Create a gateway VPC endpoint for Amazon S3. Configure a Site-to-Site VPN connection from the facility network to the VPC so that sensor data can be written directly to an S3 bucket by way of the VPC endpoint."
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [
      "API Gateway"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/99699-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "B"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 311,
    "question": {
      "kor": "회사에서 온프레미스 워크로드를 AWS 클라우드로 마이그레이션하고 있습니다. 이 회사는 이미 여러 Amazon EC2 인스턴스와 Amazon RDS DB 인스턴스를 사용하고 있습니다. 회사는 업무 시간 외에 EC2 인스턴스와 DB 인스턴스를 자동으로 시작하고 중지하는 솔루션을 원합니다. 솔루션은 비용 및 인프라 유지 관리를 최소화해야 합니다.\n이러한 요구 사항을 충족하는 솔루션은 무엇입니까?",
      "eng": "A company is migrating its on-premises workload to the AWS Cloud. The company already uses several Amazon EC2 instances and Amazon RDS DB instances. The company wants a solution that automatically starts and stops the EC2 instances and DB instances outside of business hours. The solution must minimize cost and infrastructure maintenance.\nWhich solution will meet these requirements?"
    },
    "choices": {
      "kor": {
        "A": "탄력적 크기 조정을 사용하여 EC2 인스턴스를 확장합니다. 업무 시간 외에는 DB 인스턴스를 0으로 조정합니다.",
        "B": "일정에 따라 EC2 인스턴스와 DB 인스턴스를 자동으로 시작 및 중지하는 파트너 솔루션에 대한 AWS Marketplace를 살펴보십시오.",
        "C": "다른 EC2 인스턴스를 시작합니다. 일정에 따라 기존 EC2 인스턴스와 DB 인스턴스를 시작 및 중지하는 셸 스크립트를 실행하도록 crontab 일정을 구성합니다.",
        "D": "EC2 인스턴스와 DB 인스턴스를 시작하고 중지할 AWS Lambda 함수를 생성합니다. 일정에 따라 Lambda 함수를 호출하도록 Amazon EventBridge를 구성합니다."
      },
      "eng": {
        "A": "Scale the EC2 instances by using elastic resize. Scale the DB instances to zero outside of business hours.",
        "B": "Explore AWS Marketplace for partner solutions that will automatically start and stop the EC2 instances and DB instances on a schedule.",
        "C": "Launch another EC2 instance. Configure a crontab schedule to run shell scripts that will start and stop the existing EC2 instances and DB instances on a schedule.",
        "D": "Create an AWS Lambda function that will start and stop the EC2 instances and DB instances. Configure Amazon EventBridge to invoke the Lambda function on a schedule."
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [
      "Lambda",
      "EventBridge"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/102145-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "D"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 315,
    "question": {
      "kor": "회사는 사용자에게 항목 가격을 기반으로 세금 계산을 위한 조회를 자동화하는 API를 제공합니다. 회사는 연휴 기간에만 더 많은 수의 문의가 발생하여 응답 시간이 느려집니다. 솔루션 설계자는 확장 가능하고 탄력적인 솔루션을 설계해야 합니다.\n이를 달성하기 위해 솔루션 설계자는 무엇을 해야 합니까?",
      "eng": "A company provides an API to its users that automates inquiries for tax computations based on item prices. The company experiences a larger number of inquiries during the holiday season only that cause slower response times. A solutions architect needs to design a solution that is scalable and elastic.\nWhat should the solutions architect do to accomplish this?"
    },
    "choices": {
      "kor": {
        "A": "Amazon EC2 인스턴스에서 호스팅되는 API를 제공합니다. EC2 인스턴스는 API 요청이 있을 때 필요한 계산을 수행합니다.",
        "B": "항목 이름을 허용하는 Amazon API Gateway를 사용하여 REST API를 설계합니다. API Gateway는 세금 계산을 위해 항목 이름을 AWS Lambda에 전달합니다.",
        "C": "두 개의 Amazon EC2 인스턴스가 있는 Application Load Balancer를 생성합니다. EC2 인스턴스는 받은 항목 이름에 대한 세금을 계산합니다.",
        "D": "Amazon EC2 인스턴스에서 호스팅되는 API와 연결되는 Amazon API Gateway를 사용하여 REST API를 설계합니다. API Gateway는 세금 계산을 위해 항목 이름을 수락하고 EC2 인스턴스에 전달합니다."
      },
      "eng": {
        "A": "Provide an API hosted on an Amazon EC2 instance. The EC2 instance performs the required computations when the API request is made.",
        "B": "Design a REST API using Amazon API Gateway that accepts the item names. API Gateway passes item names to AWS Lambda for tax computations.",
        "C": "Create an Application Load Balancer that has two Amazon EC2 instances behind it. The EC2 instances will compute the tax on the received item names.",
        "D": "Design a REST API using Amazon API Gateway that connects with an API hosted on an Amazon EC2 instance. API Gateway accepts and passes the item names to the EC2 instance for tax computations."
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [
      "API Gateway"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/87529-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "B"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 341,
    "question": {
      "kor": "솔루션 설계자는 회사의 애플리케이션을 위한 새로운 마이크로서비스를 설계해야 합니다. 클라이언트는 마이크로 서비스에 도달하기 위해 HTTPS 끝점을 호출할 수 있어야 합니다. 또한 마이크로서비스는 AWS Identity and Access Management(IAM)를 사용하여 호출을 인증해야 합니다. 솔루션 설계자는 Go 1.x로 작성된 단일 AWS Lambda 함수를 사용하여 이 마이크로서비스에 대한 논리를 작성합니다.\n어떤 솔루션이 운영상 가장 효율적인 방식으로 기능을 배포합니까?",
      "eng": "A solutions architect needs to design a new microservice for a company’s application. Clients must be able to call an HTTPS endpoint to reach the microservice. The microservice also must use AWS Identity and Access Management (IAM) to authenticate calls. The solutions architect will write the logic for this microservice by using a single AWS Lambda function that is written in Go 1.x.\nWhich solution will deploy the function in the MOST operationally efficient way?"
    },
    "choices": {
      "kor": {
        "A": "Amazon API Gateway REST API를 생성합니다. Lambda 함수를 사용하도록 메서드를 구성합니다. API에서 IAM 인증을 활성화합니다.",
        "B": "함수에 대한 Lambda 함수 URL을 생성합니다. 인증 유형으로 AWS_IAM을 지정합니다.",
        "C": "Amazon CloudFront 배포를 생성합니다. 함수를 Lambda@Edge에 배포합니다. IAM 인증 로직을 Lambda@Edge 함수에 통합합니다.",
        "D": "Amazon CloudFront 배포를 생성합니다. CloudFront Functions에 함수를 배포합니다. 인증 유형으로 AWS_IAM을 지정합니다."
      },
      "eng": {
        "A": "Create an Amazon API Gateway REST API. Configure the method to use the Lambda function. Enable IAM authentication on the API.",
        "B": "Create a Lambda function URL for the function. Specify AWS_IAM as the authentication type.",
        "C": "Create an Amazon CloudFront distribution. Deploy the function to Lambda@Edge. Integrate IAM authentication logic into the Lambda@Edge function.",
        "D": "Create an Amazon CloudFront distribution. Deploy the function to CloudFront Functions. Specify AWS_IAM as the authentication type."
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [
      "API Gateway",
      "Lambda"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/95365-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "A"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 349,
    "question": {
      "kor": "회사는 AWS Lambda와 통합된 Amazon API Gateway API 백엔드를 사용하는 프런트엔드 애플리케이션을 호스팅합니다. API가 요청을 받으면 Lambda 함수는 많은 라이브러리를 로드합니다. 그런 다음 Lambda 함수는 Amazon RDS 데이터베이스에 연결하여 데이터를 처리하고 프런트엔드 애플리케이션에 데이터를 반환합니다. 회사는 회사 운영에 대한 변경 횟수를 최소화하면서 모든 사용자의 응답 대기 시간을 가능한 한 낮추고자 합니다.\n이러한 요구 사항을 충족하는 솔루션은 무엇입니까?",
      "eng": "A company hosts a frontend application that uses an Amazon API Gateway API backend that is integrated with AWS Lambda. When the API receives requests, the Lambda function loads many libraries. Then the Lambda function connects to an Amazon RDS database, processes the data, and returns the data to the frontend application. The company wants to ensure that response latency is as low as possible for all its users with the fewest number of changes to the company's operations.\nWhich solution will meet these requirements?"
    },
    "choices": {
      "kor": {
        "A": "API를 우회하여 쿼리 속도를 높이려면 프런트엔드 애플리케이션과 데이터베이스 사이에 연결을 설정합니다.",
        "B": "요청을 처리하는 Lambda 함수에 대해 프로비저닝된 동시성을 구성합니다.",
        "C": "유사한 데이터 세트를 더 빠르게 검색하기 위해 쿼리 결과를 Amazon S3에 캐시합니다.",
        "D": "Lambda가 한 번에 설정할 수 있는 연결 수를 늘리려면 데이터베이스 크기를 늘립니다."
      },
      "eng": {
        "A": "Establish a connection between the frontend application and the database to make queries faster by bypassing the API.",
        "B": "Configure provisioned concurrency for the Lambda function that handles the requests.",
        "C": "Cache the results of the queries in Amazon S3 for faster retrieval of similar datasets.",
        "D": "Increase the size of the database to increase the number of connections Lambda can establish at one time."
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [
      "Lambda",
      "provisioned concurrency"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/102144-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "B"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 367,
    "question": {
      "kor": "회사는 Amazon API Gateway 및 AWS Lambda를 사용하여 AWS에서 RESTful 서버리스 웹 애플리케이션을 구축하고 있습니다. 이 웹 애플리케이션의 사용자는 지리적으로 분산되며 회사는 이러한 사용자에 대한 API 요청 대기 시간을 줄이려고 합니다.\n솔루션 설계자는 이러한 요구 사항을 충족하기 위해 어떤 유형의 엔드포인트를 사용해야 합니까?",
      "eng": "A company is building a RESTful serverless web application on AWS by using Amazon API Gateway and AWS Lambda. The users of this web application will be geographically distributed, and the company wants to reduce the latency of API requests to these users.\nWhich type of endpoint should a solutions architect use to meet these requirements?"
    },
    "choices": {
      "kor": {
        "A": "프라이빗 엔드포인트",
        "B": "지역 종점",
        "C": "인터페이스 VPC 엔드포인트",
        "D": "엣지 최적화 엔드포인트"
      },
      "eng": {
        "A": "Private endpoint",
        "B": "Regional endpoint",
        "C": "Interface VPC endpoint",
        "D": "Edge-optimized endpoint"
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [
      "API Gateway"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/116906-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "D"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 417,
    "question": {
      "kor": "회사에서 AWS에서 웹 애플리케이션을 구축하려고 합니다. 웹 사이트에 대한 클라이언트 액세스 요청은 예측할 수 없으며 오랫동안 유휴 상태일 수 있습니다. 가입비를 지불한 고객만이 웹 애플리케이션에 로그인하고 사용할 수 있습니다.\n이러한 요구 사항을 가장 비용 효율적으로 충족하는 단계 조합은 무엇입니까? (3개를 선택하세요.)",
      "eng": "A company wants to build a web application on AWS. Client access requests to the website are not predictable and can be idle for a long time. Only customers who have paid a subscription fee can have the ability to sign in and use the web application.\nWhich combination of steps will meet these requirements MOST cost-effectively? (Choose three.)"
    },
    "choices": {
      "kor": {
        "A": "Amazon DynamoDB에서 사용자 정보를 검색하는 AWS Lambda 함수를 생성합니다. RESTful API를 수락할 Amazon API Gateway 엔드포인트를 생성합니다. API 호출을 Lambda 함수로 보냅니다.",
        "B": "Application Load Balancer 뒤에 Amazon Elastic Container Service(Amazon ECS) 서비스를 생성하여 Amazon RDS에서 사용자 정보를 검색합니다. RESTful API를 수락할 Amazon API Gateway 엔드포인트를 생성합니다. API 호출을 Lambda 함수로 보냅니다.",
        "C": "사용자를 인증하기 위해 Amazon Cognito 사용자 풀을 생성합니다.",
        "D": "사용자를 인증하기 위해 Amazon Cognito 자격 증명 풀을 생성합니다.",
        "E": "AWS Amplify를 사용하여 HTML, CSS 및 JS로 프런트엔드 웹 콘텐츠를 제공합니다. 통합 Amazon CloudFront 구성을 사용합니다.",
        "F": "PHP, CSS 및 JS와 함께 Amazon S3 정적 웹 호스팅을 사용합니다. Amazon CloudFront를 사용하여 프런트엔드 웹 콘텐츠를 제공합니다."
      },
      "eng": {
        "A": "Create an AWS Lambda function to retrieve user information from Amazon DynamoDB. Create an Amazon API Gateway endpoint to accept RESTful APIs. Send the API calls to the Lambda function.",
        "B": "Create an Amazon Elastic Container Service (Amazon ECS) service behind an Application Load Balancer to retrieve user information from Amazon RDS. Create an Amazon API Gateway endpoint to accept RESTful APIs. Send the API calls to the Lambda function.",
        "C": "Create an Amazon Cognito user pool to authenticate users.",
        "D": "Create an Amazon Cognito identity pool to authenticate users.",
        "E": "Use AWS Amplify to serve the frontend web content with HTML, CSS, and JS. Use an integrated Amazon CloudFront configuration.",
        "F": "Use Amazon S3 static web hosting with PHP, CSS, and JS. Use Amazon CloudFront to serve the frontend web content."
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/111440-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "A",
      "C",
      "E"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 430,
    "question": {
      "kor": "회사는 고객이 재무 정보를 검색할 수 있도록 고객에게 API 인터페이스를 제공합니다. 회사는 연중 사용량이 가장 많은 시간에 더 많은 수의 요청을 예상합니다.\n회사는 API가 고객 만족을 보장하기 위해 낮은 대기 시간으로 일관되게 응답하도록 요구합니다. 회사는 API에 컴퓨팅 호스트를 제공해야 합니다.\n최소한의 운영 오버헤드로 이러한 요구 사항을 충족하는 솔루션은 무엇입니까?",
      "eng": "A company provides an API interface to customers so the customers can retrieve their financial information. Еhe company expects a larger number of requests during peak usage times of the year.\nThe company requires the API to respond consistently with low latency to ensure customer satisfaction. The company needs to provide a compute host for the API.\nWhich solution will meet these requirements with the LEAST operational overhead?"
    },
    "choices": {
      "kor": {
        "A": "Application Load Balancer 및 Amazon Elastic Container Service(Amazon ECS)를 사용합니다.",
        "B": "프로비저닝된 동시성과 함께 Amazon API Gateway 및 AWS Lambda 함수를 사용합니다.",
        "C": "Application Load Balancer 및 Amazon Elastic Kubernetes Service(Amazon EKS) 클러스터를 사용합니다.",
        "D": "예약된 동시성과 함께 Amazon API Gateway 및 AWS Lambda 함수를 사용합니다."
      },
      "eng": {
        "A": "Use an Application Load Balancer and Amazon Elastic Container Service (Amazon ECS).",
        "B": "Use Amazon API Gateway and AWS Lambda functions with provisioned concurrency.",
        "C": "Use an Application Load Balancer and an Amazon Elastic Kubernetes Service (Amazon EKS) cluster.",
        "D": "Use Amazon API Gateway and AWS Lambda functions with reserved concurrency."
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [
      "Lambda",
      "provisioned concurrency"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/109719-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "B"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 436,
    "question": {
      "kor": "솔루션 설계자는 Amazon API Gateway를 사용하여 사용자의 요청을 수신할 새 API를 설계하고 있습니다. 요청량은 매우 다양합니다. 단일 요청을 받지 않고 몇 시간이 지날 수 있습니다.\n데이터 처리는 비동기식으로 이루어지지만 요청이 이루어진 후 몇 초 이내에 완료되어야 합니다.\n최저 비용으로 요구 사항을 제공하기 위해 솔루션 설계자가 API를 호출하도록 해야 하는 컴퓨팅 서비스는 무엇입니까?",
      "eng": "A solutions architect is designing a new API using Amazon API Gateway that will receive requests from users. The volume of requests is highly variable; several hours can pass without receiving a single request. The data processing will take place asynchronously, but should be completed within a few seconds after a request is made.\nWhich compute service should the solutions architect have the API invoke to deliver the requirements at the lowest cost?"
    },
    "choices": {
      "kor": {
        "A": "AWS Glue 작업",
        "B": "AWS Lambda 함수",
        "C": "Amazon Elastic Kubernetes Service(Amazon EKS)에서 호스팅되는 컨테이너화된 서비스",
        "D": "Amazon EC2와 함께 Amazon ECS에서 호스팅되는 컨테이너화된 서비스"
      },
      "eng": {
        "A": "An AWS Glue job",
        "B": "An AWS Lambda function",
        "C": "A containerized service hosted in Amazon Elastic Kubernetes Service (Amazon EKS)",
        "D": "A containerized service hosted in Amazon ECS with Amazon EC2"
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [
      "Lambda"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/95306-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "B"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 438,
    "question": {
      "kor": "솔루션 설계자는 현금 회수 서비스를 위해 Amazon API Gateway에서 REST API를 설계하고 있습니다. 응용 프로그램에는 컴퓨팅 리소스를 위해 1GB의 메모리와 2GB의 스토리지가 필요합니다. 애플리케이션은 데이터가 관계형 형식이어야 합니다.\n최소한의 관리 노력으로 이러한 요구 사항을 충족하는 추가 AWS 서비스 조합은 무엇입니까? (두 가지를 선택하세요.)",
      "eng": "A solutions architect is designing a REST API in Amazon API Gateway for a cash payback service. The application requires 1 GB of memory and 2 GB of storage for its computation resources. The application will require that the data is in a relational format.\nWhich additional combination ofAWS services will meet these requirements with the LEAST administrative effort? (Choose two.)"
    },
    "choices": {
      "kor": {
        "A": "아마존 EC2",
        "B": "AWS 람다",
        "C": "아마존 RDS",
        "D": "아마존 DynamoDB",
        "E": "Amazon Elastic Kubernetes 서비스(Amazon EKS)"
      },
      "eng": {
        "A": "Amazon EC2",
        "B": "AWS Lambda",
        "C": "Amazon RDS",
        "D": "Amazon DynamoDB",
        "E": "Amazon Elastic Kubernetes Services (Amazon EKS)"
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [
      "Lambda",
      "RDS"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/109435-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "B",
      "C"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 454,
    "question": {
      "kor": "전자상거래 회사는 테라바이트 규모의 고객 데이터를 AWS 클라우드에 저장합니다. 데이터에는 개인 식별 정보(PII)가 포함되어 있습니다. 회사는 세 가지 응용 프로그램에서 데이터를 사용하려고 합니다. 애플리케이션 중 하나만 PII를 처리해야 합니다. 다른 두 애플리케이션이 데이터를 처리하기 전에 PII를 제거해야 합니다.\n최소한의 운영 오버헤드로 이러한 요구 사항을 충족하는 솔루션은 무엇입니까?",
      "eng": "An ecommerce company stores terabytes of customer data in the AWS Cloud. The data contains personally identifiable information (PII). The company wants to use the data in three applications. Only one of the applications needs to process the PII. The PII must be removed before the other two applications process the data.\nWhich solution will meet these requirements with the LEAST operational overhead?"
    },
    "choices": {
      "kor": {
        "A": "Amazon DynamoDB 테이블에 데이터를 저장합니다. 각 애플리케이션이 요청하는 데이터를 가로채서 처리할 프록시 애플리케이션 계층을 생성합니다.",
        "B": "데이터를 Amazon S3 버킷에 저장합니다. 요청 애플리케이션에 데이터를 반환하기 전에 S3 객체 Lambda를 사용하여 데이터를 처리하고 변환합니다.",
        "C": "데이터를 처리하고 변환된 데이터를 3개의 개별 Amazon S3 버킷에 저장하여 각 애플리케이션이 고유한 사용자 지정 데이터 세트를 갖도록 합니다. 각 애플리케이션이 해당 S3 버킷을 가리키도록 합니다.",
        "D": "데이터를 처리하고 변환된 데이터를 3개의 별도 Amazon DynamoDB 테이블에 저장하여 각 애플리케이션이 자체 사용자 지정 데이터 세트를 갖도록 합니다. 각 애플리케이션이 해당 DynamoDB 테이블을 가리키도록 합니다."
      },
      "eng": {
        "A": "Store the data in an Amazon DynamoDB table. Create a proxy application layer to intercept and process the data that each application requests.",
        "B": "Store the data in an Amazon S3 bucket. Process and transform the data by using S3 Object Lambda before returning the data to the requesting application.",
        "C": "Process the data and store the transformed data in three separate Amazon S3 buckets so that each application has its own custom dataset. Point each application to its respective S3 bucket.",
        "D": "Process the data and store the transformed data in three separate Amazon DynamoDB tables so that each application has its own custom dataset. Point each application to its respective DynamoDB table."
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/99956-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "B"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 458,
    "question": {
      "kor": "IoT 회사는 사용자의 수면에 대한 데이터를 수집하는 센서가 있는 매트리스를 출시하고 있습니다. 센서는 데이터를 Amazon S3 버킷으로 보냅니다. 센서는 각 매트리스에 대해 매일 밤 약 2MB의 데이터를 수집합니다. 회사는 각 매트리스에 대한 데이터를 처리하고 요약해야 합니다. 결과는 가능한 한 빨리 제공되어야 합니다. 데이터 처리에는 1GB의 메모리가 필요하며 30초 이내에 완료됩니다.\n이러한 요구 사항을 가장 비용 효율적으로 충족하는 솔루션은 무엇입니까?",
      "eng": "An IoT company is releasing a mattress that has sensors to collect data about a user’s sleep. The sensors will send data to an Amazon S3 bucket. The sensors collect approximately 2 MB of data every night for each mattress. The company must process and summarize the data for each mattress. The results need to be available as soon as possible. Data processing will require 1 GB of memory and will finish within 30 seconds.\nWhich solution will meet these requirements MOST cost-effectively?"
    },
    "choices": {
      "kor": {
        "A": "Scala 작업에 AWS Glue 사용",
        "B": "Apache Spark 스크립트와 함께 Amazon EMR 사용",
        "C": "Python 스크립트와 함께 AWS Lambda 사용",
        "D": "PySpark 작업과 함께 AWS Glue 사용"
      },
      "eng": {
        "A": "Use AWS Glue with a Scala job",
        "B": "Use Amazon EMR with an Apache Spark script",
        "C": "Use AWS Lambda with a Python script",
        "D": "Use AWS Glue with a PySpark job"
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [
      "Lambda"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/109501-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "C"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 477,
    "question": {
      "kor": "솔루션 설계자는 건물 내 비즈니스 테넌트의 시간당 에너지 소비량을 저장할 워크로드를 설계하고 있습니다. 센서는 각 테넌트의 사용량을 합산하는 HTTP 요청을 통해 데이터베이스에 공급 합니다. 솔루션 설계자는 가능한 경우 관리 서비스를 사용해야 합니다. 워크로드는 솔루션 설계자가 독립적인 구성 요소를 추가함에 따라 향후 더 많은 기능을 받게 됩니다.\n최소한의 운영 오버헤드로 이러한 요구 사항을 충족하는 솔루션은 무엇입니까?",
      "eng": "A solutions architect is designing a workload that will store hourly energy consumption by business tenants in a building. The sensors will feed a database through HTTP requests that will add up usage for each tenant. The solutions architect must use managed services when possible. The workload will receive more features in the future as the solutions architect adds independent components.\nWhich solution will meet these requirements with the LEAST operational overhead?"
    },
    "choices": {
      "kor": {
        "A": "AWS Lambda 함수와 함께 Amazon API Gateway를 사용하여 센서에서 데이터를 수신하고, 데이터를 처리하고, Amazon DynamoDB 테이블에 데이터를 저장합니다.",
        "B": "Amazon EC2 인스턴스의 Auto Scaling 그룹에서 지원하는 Elastic Load Balancer를 사용하여 센서에서 데이터를 수신하고 처리합니다. Amazon S3 버킷을 사용하여 처리된 데이터를 저장합니다.",
        "C": "AWS Lambda 함수와 함께 Amazon API Gateway를 사용하여 센서에서 데이터를 수신하고, 데이터를 처리하고, Amazon EC2 인스턴스의 Microsoft SQL Server Express 데이터베이스에 데이터를 저장합니다.",
        "D": "Amazon EC2 인스턴스의 Auto Scaling 그룹에서 지원하는 Elastic Load Balancer를 사용하여 센서에서 데이터를 수신하고 처리합니다. Amazon Elastic File System(Amazon EFS) 공유 파일 시스템을 사용하여 처리된 데이터를 저장합니다."
      },
      "eng": {
        "A": "Use Amazon API Gateway with AWS Lambda functions to receive the data from the sensors, process the data, and store the data in an Amazon DynamoDB table.",
        "B": "Use an Elastic Load Balancer that is supported by an Auto Scaling group of Amazon EC2 instances to receive and process the data from the sensors. Use an Amazon S3 bucket to store the processed data.",
        "C": "Use Amazon API Gateway with AWS Lambda functions to receive the data from the sensors, process the data, and store the data in a Microsoft SQL Server Express database on an Amazon EC2 instance.",
        "D": "Use an Elastic Load Balancer that is supported by an Auto Scaling group of Amazon EC2 instances to receive and process the data from the sensors. Use an Amazon Elastic File System (Amazon EFS) shared file system to store the processed data."
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [
      "Lambda"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/117026-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "A"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 501,
    "question": {
      "kor": "회사에는 JSON 문서를 처리하고 그 결과를 온프레미스 SQL 데이터베이스에 출력하는 작은 Python 애플리케이션이 있습니다. 이 애플리케이션은 매일 수천 번 실행됩니다. 회사는 애플리케이션을 AWS 클라우드로 이동하려고 합니다. 이 회사는 확장성을 최대화하고 운영 오버헤드를 최소화하는 고가용성 솔루션이 필요합니다.\n이러한 요구 사항을 충족하는 솔루션은 무엇입니까?",
      "eng": "A company has a small Python application that processes JSON documents and outputs the results to an on-premises SQL database. The application runs thousands of times each day. The company wants to move the application to the AWS Cloud. The company needs a highly available solution that maximizes scalability and minimizes operational overhead.\nWhich solution will meet these requirements?"
    },
    "choices": {
      "kor": {
        "A": "JSON 문서를 Amazon S3 버킷에 넣습니다. 여러 Amazon EC2 인스턴스에서 Python 코드를 실행하여 문서를 처리합니다. 결과를 Amazon Aurora DB 클러스터에 저장합니다.",
        "B": "JSON 문서를 Amazon S3 버킷에 넣습니다. 문서가 S3 버킷에 도착하면 이를 처리하기 위해 Python 코드를 실행하는 AWS Lambda 함수를 생성합니다. 결과를 Amazon Aurora DB 클러스터에 저장합니다.",
        "C": "JSON 문서를 Amazon Elastic Block Store(Amazon EBS) 볼륨에 넣습니다. EBS 다중 연결 기능을 사용하여 볼륨을 여러 Amazon EC2 인스턴스에 연결합니다. EC2 인스턴스에서 Python 코드를 실행하여 문서를 처리합니다. Amazon RDS DB 인스턴스에 결과를 저장합니다.",
        "D": "문서를 대기열에 JSON Amazon Simple Queue Service(Amazon SQS) 메시지로 배치합니다. Amazon EC2 시작 유형으로 구성된 Amazon Elastic Container Service(Amazon ECS) 클러스터에 Python 코드를 컨테이너로 배포합니다. 컨테이너를 사용하여 SQS 메시지를 처리합니다. Amazon RDS DB 인스턴스에 결과를 저장합니다."
      },
      "eng": {
        "A": "Place the JSON documents in an Amazon S3 bucket. Run the Python code on multiple Amazon EC2 instances to process the documents. Store the results in an Amazon Aurora DB cluster.",
        "B": "Place the JSON documents in an Amazon S3 bucket. Create an AWS Lambda function that runs the Python code to process the documents as they arrive in the S3 bucket. Store the results in an Amazon Aurora DB cluster.",
        "C": "Place the JSON documents in an Amazon Elastic Block Store (Amazon EBS) volume. Use the EBS Multi-Attach feature to attach the volume to multiple Amazon EC2 instances. Run the Python code on the EC2 instances to process the documents. Store the results on an Amazon RDS DB instance.",
        "D": "Place the JSON documents in an Amazon Simple Queue Service (Amazon SQS) queue as messages. Deploy the Python code as a container on an Amazon Elastic Container Service (Amazon ECS) cluster that is configured with the Amazon EC2 launch type. Use the container to process the SQS messages. Store the results on an Amazon RDS DB instance."
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/87633-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "B"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 532,
    "question": {
      "kor": "소매 회사는 퍼블릭 REST API에 지역 Amazon API Gateway API를 사용합니다. API Gateway 엔드포인트는 Amazon Route 53 별칭 레코드를 가리키는 사용자 지정 도메인 이름입니다. 솔루션 아키텍트는 고객에게 최소한의 영향을 미치고 데이터 손실을 최소화하는 솔루션을 생성하여 새 버전의 API를 릴리스해야 합니다.\n이러한 요구 사항을 충족하는 솔루션은 무엇입니까?",
      "eng": "A retail company uses a regional Amazon API Gateway API for its public REST APIs. The API Gateway endpoint is a custom domain name that points to an Amazon Route 53 alias record. A solutions architect needs to create a solution that has minimal effects on customers and minimal data loss to release the new version of APIs.\nWhich solution will meet these requirements?"
    },
    "choices": {
      "kor": {
        "A": "API 게이트웨이에 대한 카나리아 릴리스 배포 단계를 생성합니다. 최신 API 버전을 배포합니다. 트래픽의 적절한 비율을 카나리아 단계로 지정합니다. API 검증 후 카나리아 단계를 프로덕션 단계로 승격합니다.",
        "B": "OpenAPI YAML 파일 형식의 새 API 버전으로 새 API 게이트웨이 엔드포인트를 생성합니다. API Gateway의 API에 병합 모드에서 가져오기-업데이트 작업을 사용합니다. API의 새 버전을 프로덕션 단계에 배포합니다.",
        "C": "OpenAPI JSON 파일 형식의 새 API 버전으로 새 API 게이트웨이 엔드포인트를 생성합니다. 덮어쓰기 모드에서 업데이트로 가져오기 작업을 API Gateway의 API에 사용합니다. API의 새 버전을 프로덕션 단계에 배포합니다.",
        "D": "API 정의의 새 버전으로 새 API 게이트웨이 엔드포인트를 생성합니다. 새 API Gateway API에 대한 사용자 지정 도메인 이름을 생성합니다. Route 53 별칭 레코드가 새 API Gateway API 사용자 지정 도메인 이름을 가리키도록 합니다."
      },
      "eng": {
        "A": "Create a canary release deployment stage for API Gateway. Deploy the latest API version. Point an appropriate percentage of traffic to the canary stage. After API verification, promote the canary stage to the production stage.",
        "B": "Create a new API Gateway endpoint with a new version of the API in OpenAPI YAML file format. Use the import-to-update operation in merge mode into the API in API Gateway. Deploy the new version of the API to the production stage.",
        "C": "Create a new API Gateway endpoint with a new version of the API in OpenAPI JSON file format. Use the import-to-update operation in overwrite mode into the API in API Gateway. Deploy the new version of the API to the production stage.",
        "D": "Create a new API Gateway endpoint with new versions of the API definitions. Create a custom domain name for the new API Gateway API. Point the Route 53 alias record to the new API Gateway API custom domain name."
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [
      "API Gateway"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/111450-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "A"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 559,
    "question": {
      "kor": "회사는 Amazon API Gateway 및 AWS Lambda를 사용하여 AWS에서 내부 서버리스 애플리케이션을 호스팅합니다. 회사 직원들은 매일 애플리케이션을 사용하기 시작할 때 대기 시간이 길어지는 문제를 보고합니다. 회사는 대기 시간을 줄이고 싶어합니다.\n어떤 솔루션이 이러한 요구 사항을 충족합니까?",
      "eng": "A company hosts an internal serverless application on AWS by using Amazon API Gateway and AWS Lambda. The company’s employees report issues with high latency when they begin using the application each day. The company wants to reduce latency.\nWhich solution will meet these requirements?"
    },
    "choices": {
      "kor": {
        "A": "API 게이트웨이 조절 한도를 늘리십시오.",
        "B": "직원이 매일 애플리케이션을 사용하기 전에 Lambda 프로비저닝 동시성을 높이기 위해 예약된 조정을 설정합니다.",
        "C": "Amazon CloudWatch 경보를 생성하여 매일 시작 시 경보 대상으로 Lambda 함수를 시작합니다.",
        "D": "Lambda 함수 메모리를 늘립니다."
      },
      "eng": {
        "A": "Increase the API Gateway throttling limit.",
        "B": "Set up a scheduled scaling to increase Lambda provisioned concurrency before employees begin to use the application each day.",
        "C": "Create an Amazon CloudWatch alarm to initiate a Lambda function as a target for the alarm at the beginning of each day.",
        "D": "Increase the Lambda function memory."
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/119465-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "B"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 564,
    "question": {
      "kor": "회사는 타사 데이터 피드와 통합해야 합니다. 데이터 피드는 웹후크를 보내 새 데이터를 사용할 준비가 되면 외부 서비스에 알립니다. 개발자는 회사에서 웹후크 콜백을 수신할 때 데이터를 검색하는 AWS Lambda 함수를 작성했습니다. 개발자는 제3자가 호출할 수 있도록 Lambda 함수를 제공해야 합니다.\n이러한 요구 사항을 가장 효율적으로 충족하는 솔루션은 무엇입니까?",
      "eng": "A company needs to integrate with a third-party data feed. The data feed sends a webhook to notify an external service when new data is ready for consumption. A developer wrote an AWS Lambda function to retrieve data when the company receives a webhook callback. The developer must make the Lambda function available for the third party to call.\nWhich solution will meet these requirements with the MOST operational efficiency?"
    },
    "choices": {
      "kor": {
        "A": "Lambda 함수에 대한 함수 URL을 생성합니다. Webhook에 대한 Lambda 함수 URL을 타사에 제공합니다.",
        "B": "Lambda 함수 앞에 ALB(Application Load Balancer)를 배포합니다. Webhook에 대한 ALB URL을 타사에 제공합니다.",
        "C": "Amazon Simple Notification Service(Amazon SNS) 주제를 생성합니다. Lambda 함수에 주제를 연결합니다. Webhook에 대한 제3자에게 SNS 주제의 공개 호스트 이름을 제공합니다.",
        "D": "Amazon Simple Queue Service(Amazon SQS) 대기열을 생성합니다. 대기열을 Lambda 함수에 연결합니다. Webhook에 대해 타사에 SQS 대기열의 공개 호스트 이름을 제공합니다."
      },
      "eng": {
        "A": "Create a function URL for the Lambda function. Provide the Lambda function URL to the third party for the webhook.",
        "B": "Deploy an Application Load Balancer (ALB) in front of the Lambda function. Provide the ALB URL to the third party for the webhook.",
        "C": "Create an Amazon Simple Notification Service (Amazon SNS) topic. Attach the topic to the Lambda function. Provide the public hostname of the SNS topic to the third party for the webhook.",
        "D": "Create an Amazon Simple Queue Service (Amazon SQS) queue. Attach the queue to the Lambda function. Provide the public hostname of the SQS queue to the third party for the webhook."
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [
      "Lambda"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/111430-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "A"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 577,
    "question": {
      "kor": "한 회사는 대규모 웹 애플리케이션을 서버리스 마이크로서비스 아키텍처로 재설계하려고 합니다. 애플리케이션은 Amazon EC2 인스턴스를 사용하며 Python으로 작성되었습니다.\n회사는 마이크로서비스로 테스트하기 위해 웹 애플리케이션의 한 구성 요소를 선택했습니다. 구성 요소는 초당 수백 개의 요청을 지원합니다. 회사는 Python을 지원하는 AWS 솔루션에서 마이크로서비스를 생성하고 테스트하려고 합니다. 또한 솔루션은 자동으로 확장되어야 하며 최소한의 인프라와 최소한의 운영 지원이 필요합니다.\n어떤 솔루션이 이러한 요구 사항을 충족합니까?",
      "eng": "A company wants to rearchitect a large-scale web application to a serverless microservices architecture. The application uses Amazon EC2 instances and is written in Python.\nThe company selected one component of the web application to test as a microservice. The component supports hundreds of requests each second. The company wants to create and test the microservice on an AWS solution that supports Python. The solution must also scale automatically and require minimal infrastructure and minimal operational support.\nWhich solution will meet these requirements?"
    },
    "choices": {
      "kor": {
        "A": "최신 Amazon Linux 운영 체제를 실행하는 EC2 인스턴스의 자동 확장 기능이 있는 스팟 집합을 사용합니다.",
        "B": "고가용성이 구성된 AWS Elastic Beanstalk 웹 서버 환경을 사용합니다.",
        "C": "Amazon Elastic Kubernetes Service(Amazon EKS)를 사용합니다. 자체 관리형 EC2 인스턴스의 Auto Scaling 그룹을 시작합니다.",
        "D": "사용자 정의 개발 코드를 실행하는 AWS Lambda 함수를 사용합니다."
      },
      "eng": {
        "A": "Use a Spot Fleet with auto scaling of EC2 instances that run the most recent Amazon Linux operating system.",
        "B": "Use an AWS Elastic Beanstalk web server environment that has high availability configured.",
        "C": "Use Amazon Elastic Kubernetes Service (Amazon EKS). Launch Auto Scaling groups of self-managed EC2 instances.",
        "D": "Use an AWS Lambda function that runs custom developed code."
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [
      "Lambda"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/132894-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "D"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 591,
    "question": {
      "kor": "회사는 Amazon EC2 인스턴스에서 Java 기반 작업을 실행합니다. 작업은 매시간 실행되며 실행하는 데 10초가 걸립니다. 작업은 예약된 간격으로 실행되며 1GB의 메모리를 사용합니다.\n작업이 사용 가능한 최대 CPU를 사용하는 짧은 순간을 제외하고 인스턴스의 CPU 사용률은 낮습니다. 회사는 작업 실행 비용을 최적화하려고 합니다.\n이러한 요구 사항을 충족하는 솔루션은 무엇입니까?",
      "eng": "A company runs a Java-based job on an Amazon EC2 instance. The job runs every hour and takes 10 seconds to run. The job runs on a scheduled interval and consumes 1 GB of memory. The CPU utilization of the instance is low except for short surges during which the job uses the maximum CPU available.\nThe company wants to optimize the costs to run the job.\nWhich solution will meet these requirements?"
    },
    "choices": {
      "kor": {
        "A": "AWS App2Container(A2C)를 사용하여 작업을 컨테이너화합니다. 0.5 vCPU(가상 CPU) 및 1GB 메모리를 사용하여 AWS Fargate에서 Amazon Elastic Container Service(Amazon ECS) 작업으로 작업을 실행합니다.",
        "B": "메모리가 1GB인 AWS Lambda 함수에 코드를 복사합니다. Amazon EventBridge 예약 규칙을 생성하여 매시간 코드를 실행합니다.",
        "C": "AWS App2Container(A2C)를 사용하여 작업을 컨테이너화합니다. 기존 Amazon Machine Image(AMI)에 컨테이너를 설치합니다. 태스크가 완료되면 스케줄이 컨테이너를 중지하는지 확인합니다.",
        "D": "작업 완료 시 EC2 인스턴스를 중지하고 다음 작업이 시작될 때 EC2 인스턴스를 다시 시작하도록 기존 일정을 구성합니다."
      },
      "eng": {
        "A": "Use AWS App2Container (A2C) to containerize the job. Run the job as an Amazon Elastic Container Service (Amazon ECS) task on AWS Fargate with 0.5 virtual CPU (vCPU) and 1 GB of memory.",
        "B": "Copy the code into an AWS Lambda function that has 1 GB of memory. Create an Amazon EventBridge scheduled rule to run the code each hour.",
        "C": "Use AWS App2Container (A2C) to containerize the job. Install the container in the existing Amazon Machine Image (AMI). Ensure that the schedule stops the container when the task finishes.",
        "D": "Configure the existing schedule to stop the EC2 instance at the completion of the job and restart the EC2 instance when the next job starts."
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/109521-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "B"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 593,
    "question": {
      "kor": "한 회사는 애플리케이션 메시징을 정확히 한 번만 전달하면서 인프라 관리를 최소화하는 솔루션을 채택하는 것을 목표로 합니다.\n이러한 요구 사항을 충족하는 작업 조합은 무엇입니까? (2개를 선택하세요.)",
      "eng": "A company aims to employ a solution that demands minimal infrastructure management while ensuring exactly-once delivery for application messaging.\nWhich combination of actions will meet these requirements? (Select TWO.)"
    },
    "choices": {
      "kor": {
        "A": "아키텍처의 컴퓨팅 계층에 AWS Lambda를 활용합니다.",
        "B": "아키텍처의 컴퓨팅 계층에 Amazon EC2 인스턴스를 사용합니다.",
        "C": "컴퓨팅 계층 간의 메시징 구성 요소로 Amazon Simple 알림 서비스(Amazon SNS)를 구현합니다.",
        "D": "Amazon Simple Queue Service(Amazon SQS) FIFO 대기열을 컴퓨팅 계층 간의 메시징 구성 요소로 활용합니다.",
        "E": "아키텍처의 컴퓨팅 계층을 위해 Amazon Elastic Kubernetes Service(Amazon EKS)를 기반으로 컨테이너를 배포합니다."
      },
      "eng": {
        "A": "Utilize AWS Lambda for the compute layers in the architecture.",
        "B": "Employ Amazon EC2 instances for the compute layers in the architecture.",
        "C": "Implement Amazon Simple Notification Service (Amazon SNS) as the messaging component between the compute layers.",
        "D": "Utilize Amazon Simple Queue Service (Amazon SQS) FIFO queues as the messaging component between the compute layers.",
        "E": "Deploy containers based on Amazon Elastic Kubernetes Service (Amazon EKS) for the compute layers in the architecture."
      }
    },
    "category": [
      "Serverless",
      "Messaging"
    ],
    "subcategory": [
      "SQS"
    ],
    "rote_memorization": false,
    "answer": [
      "A",
      "D"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 641,
    "question": {
      "kor": "한 회사는 맞춤형 보고서 작성 프로그램을 사용하여 주로 매월 마지막 주에 수행되는 모바일 앱 사용을 추적하는 보고서를 효율적으로 생성하는 것을 목표로 합니다. 프로그램의 생성 프로세스는 각 보고서당 10분 미만이 소요될 정도로 신속합니다. 이 기간 외에는 자주 사용되지 않는 회사는 요청 시 신속한 보고서 생성을 위한 비용 효율적인 솔루션을 찾고 있습니다.\n이러한 요구 사항을 가장 잘 충족하는 솔루션은 무엇입니까?",
      "eng": "A company aims to efficiently generate reports tracking usage of its mobile app, which is primarily done during the last week of each month using a custom report-building program. The program's generation process is swift, taking under 10 minutes for each report. Infrequently used outside this timeframe, the company seeks a cost-effective solution for swift report generation upon request.\nWhich solution would best fulfill these requirements?"
    },
    "choices": {
      "kor": {
        "A": "Amazon EC2 온디맨드 인스턴스를 사용하여 프로그램을 실행합니다. 보고서가 요청될 때 EC2 인스턴스를 트리거하는 Amazon EventBridge 규칙을 설정합니다. 매월 마지막 주에만 EC2 인스턴스를 지속적으로 운영합니다.",
        "B": "AWS Lambda를 사용하여 프로그램을 실행합니다. 보고서가 요청되면 Lambda 함수를 트리거하는 Amazon EventBridge 규칙을 생성합니다.",
        "C": "Amazon Elastic Container Service(Amazon ECS) 내에서 프로그램을 운영하고 보고서 요청 시 실행되도록 예약합니다.",
        "D": "Amazon EC2 스팟 인스턴스를 활용하여 프로그램을 실행합니다. 보고서가 요청되면 EC2 인스턴스를 시작하는 Amazon EventBridge 규칙을 생성합니다. 매월 마지막 주 동안 EC2 인스턴스를 지속적으로 실행하도록 유지합니다."
      },
      "eng": {
        "A": "Use Amazon EC2 On-Demand Instances to run the program. Set up an Amazon EventBridge rule triggering the EC2 instances when reports are requested. Operate the EC2 instances continuously only during the last week of each month.",
        "B": "Employ AWS Lambda to execute the program. Create an Amazon EventBridge rule triggering a Lambda function when reports are requested.",
        "C": "Operate the program within Amazon Elastic Container Service (Amazon ECS) and schedule it to run upon report requests.",
        "D": "Utilize Amazon EC2 Spot Instances to run the program. Create an Amazon EventBridge rule to start the EC2 instances when reports are requested. Maintain the EC2 instances running continuously during the last week of each month."
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [
      "EventBridge"
    ],
    "rote_memorization": false,
    "answer": [
      "B"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 655,
    "question": {
      "kor": "한 회사는 높은 동시성 AWS Lambda 함수를 사용하여 마케팅 이벤트 중에 메시지 대기열에서 지속적으로 증가하는 메시지 수를 처리합니다. Lambda 함수는 CPU 집약적인 코드를 사용하여 메시지를 처리합니다. 회사는 컴퓨팅 비용을 줄이고 고객의 서비스 대기 시간을 유지하기를 원합니다.\n어떤 솔루션이 이러한 요구 사항을 충족합니까?",
      "eng": "A company uses high concurrency AWS Lambda functions to process a constantly increasing number of messages in a message queue during marketing events. The Lambda functions use CPU intensive code to process the messages. The company wants to reduce the compute costs and to maintain service latency for its customers.\nWhich solution will meet these requirements?"
    },
    "choices": {
      "kor": {
        "A": "Lambda 함수에 대해 예약된 동시성을 구성합니다. Lambda 함수에 할당된 메모리를 줄입니다.",
        "B": "Lambda 함수에 대한 예약된 동시성을 구성합니다. AWS Compute Optimizer 권장 사항에 따라 메모리를 늘리십시오.",
        "C": "Lambda 함수에 대해 프로비저닝된 동시성을 구성합니다. Lambda 함수에 할당된 메모리를 줄입니다.",
        "D": "Lambda 함수에 대해 프로비저닝된 동시성을 구성합니다. AWS Compute Optimizer 권장 사항에 따라 메모리를 늘리십시오."
      },
      "eng": {
        "A": "Configure reserved concurrency for the Lambda functions. Decrease the memory allocated to the Lambda functions.",
        "B": "Configure reserved concurrency for the Lambda functions. Increase the memory according to AWS Compute Optimizer recommendations.",
        "C": "Configure provisioned concurrency for the Lambda functions. Decrease the memory allocated to the Lambda functions.",
        "D": "Configure provisioned concurrency for the Lambda functions. Increase the memory according to AWS Compute Optimizer recommendations."
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [
      "Lambda"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/135552-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "D"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 788,
    "question": {
      "kor": "회사는 Amazon EC2 인스턴스를 사용하여 스크립트를 실행하여 Amazon Simple Queue Service(Amazon SQS) 대기열에서 메시지를 폴링하고 처리합니다. 이 회사는 대기열에 추가되는 점점 더 많은 수의 메시지를 처리할 수 있는 능력을 유지하면서 운영 비용을 절감하고자 합니다.\n이러한 요구 사항을 충족하기 위해 솔루션 설계자는 무엇을 권장해야 합니까?",
      "eng": "A company uses an Amazon EC2 instance to run a script to poll for and process messages in an Amazon Simple Queue Service (Amazon SQS) queue. The company wants to reduce operational costs while maintaining its ability to process a growing number of messages that are added to the queue.\nWhat should a solutions architect recommend to meet these requirements?"
    },
    "choices": {
      "kor": {
        "A": "메시지를 더 빠르게 처리하려면 EC2 인스턴스의 크기를 늘리십시오.",
        "B": "인스턴스가 충분히 활용되지 않을 때 Amazon EventBridge를 사용하여 EC2 인스턴스를 끕니다.",
        "C": "EC2 인스턴스의 스크립트를 적절한 런타임이 있는 AWS Lambda 함수로 마이그레이션합니다.",
        "D": "AWS Systems Manager Run Command를 사용하여 요청 시 스크립트를 실행합니다."
      },
      "eng": {
        "A": "Increase the size of the EC2 instance to process messages faster.",
        "B": "Use Amazon EventBridge to turn off the EC2 instance when the instance is underutilized.",
        "C": "Migrate the script on the EC2 instance to an AWS Lambda function with the appropriate runtime.",
        "D": "Use AWS Systems Manager Run Command to run the script on demand."
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/99698-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "C"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 827,
    "question": {
      "kor": "회사에서 REST API를 만들고 있습니다. 회사에는 TLS 사용에 대한 엄격한 요구 사항이 있습니다. 회사는 API 엔드포인트에 TLSv1.3을 요구합니다. 또한 회사는 TLS 인증서에 서명하기 위해 특정 공개 타사 인증 기관(CA)을 요구합니다.\n이러한 요구 사항을 충족하는 솔루션은 무엇입니까?",
      "eng": "A company is creating a REST API. The company has strict requirements for the use of TLS. The company requires TLSv1.3 on the API endpoints. The company also requires a specific public third-party certificate authority (CA) to sign the TLS certificate.\nWhich solution will meet these requirements?"
    },
    "choices": {
      "kor": {
        "A": "로컬 시스템을 사용하여 타사 CI가 서명한 인증서를 생성하고 인증서를 AWS Certificate Manager(ACM)로 가져옵니다. 사용자 지정 도메인을 사용하여 Amazon API Gateway에서 HTTP API를 생성합니다. 인증서를 사용하도록 사용자 지정 도메인을 구성합니다.",
        "B": "타사 CA가 서명한 AWS Certificate Manager(ACM)에서 인증서를 생성합니다. 사용자 지정 도메인을 사용하여 Amazon API Gateway에서 HTTP API를 생성합니다. 인증서를 사용하도록 사용자 지정 도메인을 구성합니다.",
        "C": "AWS Certificate Manager(ACM)를 사용하여 타사 CA에서 서명한 인증서를 생성합니다. 인증서를 AWS Certificate Manager(ACM)로 가져옵니다. Lambda 함수 URL을 사용하여 AWS Lambda 함수를 생성합니다. 인증서를 사용하도록 Lambda 함수 URL을 구성합니다.",
        "D": "타사 CA에서 서명한 AWS Certificate Manager(ACM)에서 인증서를 생성합니다. Lambda 함수 URL을 사용하여 AWS Lambda 함수를 생성합니다. 인증서를 사용하도록 Lambda 함수 URL을 구성합니다."
      },
      "eng": {
        "A": "Use a local machine to create a certificate that is signed by the third-party CI. Import the certificate into AWS Certificate Manager (ACM). Create an HTTP API in Amazon API Gateway with a custom domain. Configure the custom domain to use the certificate.",
        "B": "Create a certificate in AWS Certificate Manager (ACM) that is signed by the third-party CA. Create an HTTP API in Amazon API Gateway with a custom domain. Configure the custom domain to use the certificate.",
        "C": "Use AWS Certificate Manager (ACM) to create a certificate that is signed by the third-party CA. Import the certificate into AWS Certificate Manager (ACM). Create an AWS Lambda function with a Lambda function URL. Configure the Lambda function URL to use the certificate.",
        "D": "Create a certificate in AWS Certificate Manager (ACM) that is signed by the third-party CA. Create an AWS Lambda function with a Lambda function URL. Configure the Lambda function URL to use the certificate."
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [
      "API Gateway",
      "ACM"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/116904-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "A"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 834,
    "question": {
      "kor": "한 회사는 분석을 처리하고 예측하기 위해 다양한 웹 애플리케이션에서 고객 활동을 캡처하는 솔루션을 설계하고 있습니다. 웹 애플리케이션에서의 고객 활동은 예측할 수 없으며 갑자기 증가할 수 있습니다. 회사에는 다른 웹 애플리케이션과 통합되는 솔루션이 필요합니다. 솔루션에는 보안 목적을 위한 인증 단계가 포함되어야 합니다.\n어떤 솔루션이 이러한 요구 사항을 충족합니까?",
      "eng": "A company is designing a solution to capture customer activity in different web applications to process analytics and make predictions. Customer activity in the web applications is unpredictable and can increase suddenly. The company requires a solution that integrates with other web applications. The solution must include an authorization step for security purposes.\nWhich solution will meet these requirements?"
    },
    "choices": {
      "kor": {
        "A": "회사가 Amazon Elastic File System(Amazon EFS) 파일 시스템에서 수신하는 정보를 저장하는 Amazon Elastic Container Service(Amazon ECS) 컨테이너 인스턴스 앞에 게이트웨이 로드 밸런서(GWLB)를 구성합니다. 승인은 GWLB에서 해결됩니다.",
        "B": "회사가 Amazon S3 버킷에 수신하는 정보를 저장하는 Amazon Kinesis 데이터 스트림 앞에 Amazon API Gateway 엔드포인트를 구성합니다. AWS Lambda 함수를 사용하여 인증을 해결합니다.",
        "C": "회사가 Amazon S3 버킷에 수신하는 정보를 저장하는 Amazon Kinesis Data Firehose 앞에 Amazon API Gateway 엔드포인트를 구성합니다. API Gateway Lambda 권한 부여자를 사용하여 권한 부여를 해결합니다.",
        "D": "회사가 Amazon Elastic File System(Amazon EFS) 파일 시스템에서 수신하는 정보를 저장하는 Amazon Elastic Container Service(Amazon ECS) 컨테이너 인스턴스 앞에 게이트웨이 로드 밸런서(GWLB)를 구성합니다. AWS Lambda 함수를 사용하여 인증을 해결합니다."
      },
      "eng": {
        "A": "Configure a Gateway Load Balancer (GWLB) in front of an Amazon Elastic Container Service (Amazon ECS) container instance that stores the information that the company receives in an Amazon Elastic File System (Amazon EFS) file system. Authorization is resolved at the GWLB.",
        "B": "Configure an Amazon API Gateway endpoint in front of an Amazon Kinesis data stream that stores the information that the company receives in an Amazon S3 bucket. Use an AWS Lambda function to resolve authorization.",
        "C": "Configure an Amazon API Gateway endpoint in front of an Amazon Kinesis Data Firehose that stores the information that the company receives in an Amazon S3 bucket. Use an API Gateway Lambda authorizer to resolve authorization.",
        "D": "Configure a Gateway Load Balancer (GWLB) in front of an Amazon Elastic Container Service (Amazon ECS) container instance that stores the information that the company receives on an Amazon Elastic File System (Amazon EFS) file system. Use an AWS Lambda function to resolve authorization."
      }
    },
    "category": [
      "Serverless",
      "Data Processing"
    ],
    "subcategory": [],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/119576-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "C"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 861,
    "question": {
      "kor": "솔루션 아키텍트는 Amazon API Gateway 기반의 새로운 서비스를 설계하고 있습니다. 서비스에 대한 요청 패턴은 예측할 수 없으며 요청이 0개에서 초당 500개 이상으로 갑자기 변경될 수 있습니다. 백엔드 데이터베이스에 유지해야 하는 데이터의 총 크기는 현재 1GB 미만이며 향후 증가를 예측할 수 없습니다. 간단한 키-값 요청을 사용하여 데이터를 쿼리할 수 있습니다.\n이러한 요구 사항을 충족하는 AWS 서비스 조합은 무엇입니까? (2개를 선택하세요.)",
      "eng": "A solutions architect is designing a new service behind Amazon API Gateway. The request patterns for the service will be unpredictable and can change suddenly from 0 requests to over 500 per second. The total size of the data that needs to be persisted in a backend database is currently less than 1 GB with unpredictable future growth. Data can be queried using simple key-value requests.\nWhich combination ofAWS services would meet these requirements? (Choose two.)"
    },
    "choices": {
      "kor": {
        "A": "AWS 파게이트",
        "B": "AWS 람다",
        "C": "아마존 다이나모DB",
        "D": "아마존 EC2 자동 스케일링",
        "E": "MySQL 호환 Amazon Aurora"
      },
      "eng": {
        "A": "AWS Fargate",
        "B": "AWS Lambda",
        "C": "Amazon DynamoDB",
        "D": "Amazon EC2 Auto Scaling",
        "E": "MySQL-compatible Amazon Aurora"
      }
    },
    "category": [
      "Serverless"
    ],
    "subcategory": [],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/125547-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "B",
      "C"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 908,
    "question": {
      "kor": "회사에는 가상 머신(VM)을 기반으로 하는 다중 계층 결제 처리 애플리케이션이 있습니다. 계층 간의 통신은 정확히 1회 전달을 보장하는 타사 미들웨어 솔루션을 통해 비동기적으로 발생합니다.\n회사에는 최소한의 인프라 관리가 필요한 솔루션이 필요합니다. 솔루션은 애플리케이션 메시징을 정확히 한 번만 전달하도록 보장해야 합니다.\n이러한 요구 사항을 충족하는 작업 조합은 무엇입니까? (2개를 선택하세요.)",
      "eng": "A company has a multi-tier payment processing application that is based on virtual machines (VMs). The communication between the tiers occurs asynchronously through a third-party middleware solution that guarantees exactly-once delivery.\nThe company needs a solution that requires the least amount of infrastructure management. The solution must guarantee exactly-once delivery for application messaging.\nWhich combination of actions will meet these requirements? (Choose two.)"
    },
    "choices": {
      "kor": {
        "A": "아키텍처의 컴퓨팅 계층에 AWS Lambda를 사용합니다.",
        "B": "아키텍처의 컴퓨팅 계층에 Amazon EC2 인스턴스를 사용합니다.",
        "C": "컴퓨팅 계층 사이의 메시징 구성 요소로 Amazon Simple 알림 서비스(Amazon SNS)를 사용합니다.",
        "D": "Amazon Simple Queue Service(Amazon SQS) FIFO 대기열을 컴퓨팅 계층 간의 메시징 구성 요소로 사용합니다.",
        "E": "아키텍처의 컴퓨팅 계층에 Amazon Elastic Kubernetes Service(Amazon EKS)를 기반으로 하는 컨테이너를 사용합니다."
      },
      "eng": {
        "A": "Use AWS Lambda for the compute layers in the architecture.",
        "B": "Use Amazon EC2 instances for the compute layers in the architecture.",
        "C": "Use Amazon Simple Notification Service (Amazon SNS) as the messaging component between the compute layers.",
        "D": "Use Amazon Simple Queue Service (Amazon SQS) FIFO queues as the messaging component between the compute layers.",
        "E": "Use containers that are based on Amazon Elastic Kubernetes Service (Amazon EKS) for the compute layers in the architecture."
      }
    },
    "category": [
      "Serverless",
      "Messaging"
    ],
    "subcategory": [
      "SQS"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/google/view/133405-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "A",
      "D"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 960,
    "question": {
      "kor": "한 회사는 Amazon S3를 사용하여 정적 웹 사이트를 호스팅합니다. 회사는 웹페이지에 문의 양식을 추가하려고 합니다. 문의 양식에는 사용자가 이름, 이메일 주소, 전화번호 및 사용자 메시지를 입력할 수 있는 동적 서버측 구성 요소가 있습니다.\n회사에서는 매월 사이트 방문 횟수가 100회 미만일 것으로 예상합니다. 문의 양식은 고객이 양식을 작성할 때 이메일로 회사에 알려야 합니다.\n이러한 요구 사항을 가장 비용 효율적으로 충족하는 솔루션은 무엇입니까?",
      "eng": "A company uses Amazon S3 to host its static website. The company wants to add a contact form to the webpage. The contact form will have dynamic serverside components for users to input their name, email address, phone number, and user message.\nThe company expects fewer than 100 site visits each month. The contact form must notify the company by email when a customer fills out the form.\nWhich solution will meet these requirements MOST cost-effectively?"
    },
    "choices": {
      "kor": {
        "A": "Amazon Elastic Container Service(Amazon ECS)에서 동적 문의 양식을 호스팅합니다. 타사 이메일 공급자에 연결하려면 Amazon Simple Email Service(Amazon SES)를 설정합니다.",
        "B": "AWS Lambda 함수에서 문의 양식을 반환하는 Amazon API Gateway 엔드포인트를 생성합니다. Amazon Simple 알림 서비스(Amazon SNS) 주제에 메시지를 게시하도록 API 게이트웨이에서 또 다른 Lambda 함수를 구성합니다.",
        "C": "정적 콘텐츠와 동적 콘텐츠에 AWS Amplify 호스팅을 사용하여 웹 사이트를 호스팅합니다. 서버측 스크립팅을 사용하여 문의 양식을 작성합니다. 메시지를 회사에 전달하도록 Amazon Simple Queue Service(Amazon SQS)를 구성합니다.",
        "D": "웹 사이트를 Amazon S3에서 Windows Server를 실행하는 Amazon EC2 인스턴스로 마이그레이션합니다. Windows Server용 인터넷 정보 서비스(IIS)를 사용하여 웹 페이지를 호스팅합니다. 클라이언트측 스크립팅을 사용하여 문의 양식을 작성합니다. 양식을 Amazon WorkMail과 통합합니다."
      },
      "eng": {
        "A": "Host the dynamic contact form in Amazon Elastic Container Service (Amazon ECS). Set up Amazon Simple Email Service (Amazon SES) to connect to a third-party email provider.",
        "B": "Create an Amazon API Gateway endpoint that returns the contact form from an AWS Lambda function. Configure another Lambda function on the API Gateway to publish a message to an Amazon Simple Notification Service (Amazon SNS) topic.",
        "C": "Host the website by using AWS Amplify Hosting for static content and dynamic content. Use server-side scripting to build the contact form. Configure Amazon Simple Queue Service (Amazon SQS) to deliver the message to the company.",
        "D": "Migrate the website from Amazon S3 to Amazon EC2 instances that run Windows Server. Use Internet Information Services (IIS) for Windows Server to host the webpage. Use client-side scripting to build the contact form. Integrate the form with Amazon WorkMail."
      }
    },
    "category": [
      "Serverless",
      "SNS"
    ],
    "subcategory": [],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/139252-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "B"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 499,
    "question": {
      "kor": "회사는 Amazon S3에 데이터를 저장합니다. 규정에 따르면 데이터에는 개인 식별 정보(PII)가 포함되어서는 안 됩니다. 이 회사는 최근 S3 버킷에 PII가 포함된 일부 개체가 있음을 발견했습니다. 회사는 S3 버킷에서 PII를 자동으로 감지하고 회사의 보안 팀에 알려야 합니다.\n이러한 요구 사항을 충족하는 솔루션은 무엇입니까?",
      "eng": "A company stores data in Amazon S3. According to regulations, the data must not contain personally identifiable information (PII). The company recently discovered that S3 buckets have some objects that contain PII. The company needs to automatically detect PII in S3 buckets and to notify the company’s security team.\nWhich solution will meet these requirements?"
    },
    "choices": {
      "kor": {
        "A": "Amazon Macie를 사용합니다. Amazon EventBridge 규칙을 생성하여 Macie 결과에서 SensitiveData 이벤트 유형을 필터링하고 보안 팀에 Amazon Simple Notification Service(Amazon SNS) 알림을 보냅니다.",
        "B": "Amazon GuardDuty를 사용합니다. GuardDuty 결과에서 중요한 이벤트 유형을 필터링하고 보안 팀에 Amazon Simple Notification Service(Amazon SNS) 알림을 보내는 Amazon EventBridge 규칙을 생성합니다.",
        "C": "Amazon Macie를 사용합니다. Amazon EventBridge 규칙을 생성하여 Macie 결과에서 SensitiveData:S3Object/Personal 이벤트 유형을 필터링하고 보안 팀에 Amazon Simple Queue Service(Amazon SQS) 알림을 보냅니다.",
        "D": "Amazon GuardDuty를 사용합니다. GuardDuty 결과에서 중요한 이벤트 유형을 필터링하고 보안 팀에 Amazon Simple Queue Service(Amazon SQS) 알림을 보내는 Amazon EventBridge 규칙을 생성합니다."
      },
      "eng": {
        "A": "Use Amazon Macie. Create an Amazon EventBridge rule to filter the SensitiveData event type from Macie findings and to send an Amazon Simple Notification Service (Amazon SNS) notification to the security team.",
        "B": "Use Amazon GuardDuty. Create an Amazon EventBridge rule to filter the CRITICAL event type from GuardDuty findings and to send an Amazon Simple Notification Service (Amazon SNS) notification to the security team.",
        "C": "Use Amazon Macie. Create an Amazon EventBridge rule to filter the SensitiveData:S3Object/Personal event type from Macie findings and to send an Amazon Simple Queue Service (Amazon SQS) notification to the security team.",
        "D": "Use Amazon GuardDuty. Create an Amazon EventBridge rule to filter the CRITICAL event type from GuardDuty findings and to send an Amazon Simple Queue Service (Amazon SQS) notification to the security team."
      }
    },
    "category": [
      "Security",
      "Serverless"
    ],
    "subcategory": [],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/111432-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "A"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 945,
    "question": {
      "kor": "한 회사에 직원이 15명 있습니다. 회사는 직원 시작 날짜를 Amazon DynamoDB 테이블에 저장합니다. 회사에서는 직원의 입사 기념일에 각 직원에게 이메일 메시지를 보내려고 합니다.\n가장 효율적인 운영 효율성으로 이러한 요구 사항을 충족하는 솔루션은 무엇입니까?",
      "eng": "A company has 15 employees. The company stores employee start dates in an Amazon DynamoDB table. The company wants to send an email message to each employee on the day of the employee's work anniversary.\nWhich solution will meet these requirements with the MOST operational efficiency?"
    },
    "choices": {
      "kor": {
        "A": "DynamoDB 테이블을 스캔하고 Amazon Simple 알림 서비스(Amazon SNS)를 사용하여 필요할 때 직원에게 이메일 메시지를 보내는 스크립트를 생성합니다. cron 작업을 사용하여 Amazon EC2 인스턴스에서 매일 이 스크립트를 실행하세요.",
        "B": "DynamoDB 테이블을 스캔하고 Amazon Simple Queue Service(Amazon SQS)를 사용하여 필요할 때 직원에게 이메일 메시지를 보내는 스크립트를 만듭니다. cron 작업을 사용하여 Amazon EC2 인스턴스에서 매일 이 스크립트를 실행하세요.",
        "C": "DynamoDB 테이블을 스캔하고 필요할 때 Amazon Simple 알림 서비스(Amazon SNS)를 사용하여 직원에게 이메일 메시지를 보내는 AWS Lambda 함수를 생성합니다. 이 Lambda 함수가 매일 실행되도록 예약하세요.",
        "D": "DynamoDB 테이블을 스캔하고 Amazon Simple Queue Service(Amazon SQS)를 사용하여 필요할 때 직원에게 이메일 메시지를 보내는 AWS Lambda 함수를 생성합니다. 이 Lambda 함수가 매일 실행되도록 예약하세요."
      },
      "eng": {
        "A": "Create a script that scans the DynamoDB table and uses Amazon Simple Notification Service (Amazon SNS) to send email messages to employees when necessary. Use a cron job to run this script every day on an Amazon EC2 instance.",
        "B": "Create a script that scans the DynamoDB table and uses Amazon Simple Queue Service (Amazon SQS) to send email messages to employees when necessary. Use a cron job to run this script every day on an Amazon EC2 instance.",
        "C": "Create an AWS Lambda function that scans the DynamoDB table and uses Amazon Simple Notification Service (Amazon SNS) to send email messages to employees when necessary. Schedule this Lambda function to run every day.",
        "D": "Create an AWS Lambda function that scans the DynamoDB table and uses Amazon Simple Queue Service (Amazon SQS) to send email messages to employees when necessary. Schedule this Lambda function to run every day."
      }
    },
    "category": [
      "SNS",
      "Serverless"
    ],
    "subcategory": [],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/139191-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "C"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 14,
    "question": {
      "kor": "회사는 Amazon API Gateway API에 의해 호출되는 AWS Lambda 함수에서 애플리케이션을 호스팅합니다. Lambda 함수는 고객 데이터를 Amazon Aurora MySQL 데이터베이스에 저장합니다. 회사에서 데이터베이스를 업그레이드할 때마다 Lambda 함수는 업그레이드가 완료될 때까지 데이터베이스 연결을 설정하지 못합니다. 그 결과 일부 이벤트에 대해 고객 데이터가 기록되지 않습니다.\n솔루션 설계자는 데이터베이스 업그레이드 중에 생성된 고객 데이터를 저장하는 솔루션을 설계해야 합니다.\n이러한 요구 사항을 충족하는 솔루션은 무엇입니까?",
      "eng": "A company hosts an application on AWS Lambda functions that are invoked by an Amazon API Gateway API. The Lambda functions save customer data to an Amazon Aurora MySQL database. Whenever the company upgrades the database, the Lambda functions fail to establish database connections until the upgrade is complete. The result is that customer data is not recorded for some of the event.\nA solutions architect needs to design a solution that stores customer data that is created during database upgrades.\nWhich solution will meet these requirements?"
    },
    "choices": {
      "kor": {
        "A": "Lambda 함수와 데이터베이스 사이에 위치하도록 Amazon RDS 프록시를 프로비저닝합니다. RDS 프록시에 연결하도록 Lambda 함수를 구성합니다.",
        "B": "Lambda 함수의 실행 시간을 최대로 늘립니다. 데이터베이스에 고객 데이터를 저장하는 코드에서 재시도 메커니즘을 만듭니다.",
        "C": "고객 데이터를 Lambda 로컬 스토리지에 유지합니다. 고객 데이터를 데이터베이스에 저장하기 위해 로컬 스토리지를 스캔하도록 새로운 Lambda 함수를 구성합니다.",
        "D": "고객 데이터를 Amazon Simple Queue Service(Amazon SQS) FIFO 대기열에 저장합니다. 대기열을 폴링하고 고객 데이터를 데이터베이스에 저장하는 새 Lambda 함수를 생성합니다."
      },
      "eng": {
        "A": "Provision an Amazon RDS proxy to sit between the Lambda functions and the database. Configure the Lambda functions to connect to the RDS proxy.",
        "B": "Increase the run time of the Lambda functions to the maximum. Create a retry mechanism in the code that stores the customer data in the database.",
        "C": "Persist the customer data to Lambda local storage. Configure new Lambda functions to scan the local storage to save the customer data to the database.",
        "D": "Store the customer data in an Amazon Simple Queue Service (Amazon SQS) FIFO queue. Create a new Lambda function that polls the queue and stores the customer data in the database."
      }
    },
    "category": [
      "Microservices"
    ],
    "subcategory": [
      "SQS",
      "Lambda"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/85319-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "D"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 15,
    "question": {
      "kor": "회사에 수신 메시지를 수집하는 애플리케이션이 있습니다. 그러면 수십 개의 다른 애플리케이션과 마이크로서비스가 이러한 메시지를 빠르게 사용합니다. 메시지 수는 매우 다양하며 때로는 초당 100,000개로 갑자기 증가하기도 합니다. 회사는 솔루션을 분리하고 확장성을 높이고자 합니다.\n어떤 솔루션이 이러한 요구 사항을 충족합니까?",
      "eng": "A company has an application that ingests incoming messages. Dozens of other applications and microservices then quickly consume these messages. The number of messages varies drastically and sometimes increases suddenly to 100,000 each second. The company wants to decouple the solution and increase scalability.\nWhich solution meets these requirements?"
    },
    "choices": {
      "kor": {
        "A": "Amazon Kinesis Data Analytics에 대한 메시지를 유지합니다. 메시지를 읽고 처리하도록 소비자 애플리케이션을 구성합니다.",
        "B": "Auto Scaling 그룹의 Amazon EC2 인스턴스에 수집 애플리케이션을 배포하여 CPU 지표를 기반으로 EC2 인스턴스 수를 확장합니다.",
        "C": "단일 샤드로 Amazon Kinesis Data Streams에 메시지를 씁니다. AWS Lambda 함수를 사용하여 메시지를 사전 처리하고 Amazon DynamoDB에 저장합니다. 메시지를 처리하기 위해 DynamoDB에서 읽을 소비자 애플리케이션을 구성합니다.",
        "D": "여러 Amazon Simple Queue Service(Amazon SQS) 구독이 있는 Amazon Simple Notification Service(Amazon SNS) 주제에 메시지를 게시합니다. 대기열의 메시지를 처리하도록 소비자 애플리케이션을 구성합니다."
      },
      "eng": {
        "A": "Persist the messages to Amazon Kinesis Data Analytics. Configure the consumer applications to read and process the messages.",
        "B": "Deploy the ingestion application on Amazon EC2 instances in an Auto Scaling group to scale the number of EC2 instances based on CPU metrics.",
        "C": "Write the messages to Amazon Kinesis Data Streams with a single shard. Use an AWS Lambda function to preprocess messages and store them in Amazon DynamoDB. Configure the consumer applications to read from DynamoDB to process the messages.",
        "D": "Publish the messages to an Amazon Simple Notification Service (Amazon SNS) topic with multiple Amazon Simple Queue Service (Amazon SQS) subscriptions. Configure the consumer applications to process the messages from the queues."
      }
    },
    "category": [
      "Microservices"
    ],
    "subcategory": [
      "SNS",
      "SQS"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/84721-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "D"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 27,
    "question": {
      "kor": "솔루션 아키텍트는 AWS에 배포되는 새로운 애플리케이션을 위한 클라우드 아키텍처를 설계하고 있습니다. 프로세스는 처리할 작업 수에 따라 필요에 따라 애플리케이션 노드를 추가 및 제거하는 동안 병렬로 실행되어야 합니다. 프로세서 애플리케이션은 상태 비저장입니다. 솔루션 설계자는 애플리케이션이 느슨하게 결합되고 작업 항목이 지속적으로 저장되는지 확인해야 합니다.\n솔루션 설계자는 어떤 디자인을 사용해야 합니까?",
      "eng": "A solutions architect is designing the cloud architecture for a new application being deployed on AWS. The process should run in parallel while adding and removing application nodes as needed based on the number of jobs to be processed. The processor application is stateless. The solutions architect must ensure that the application is loosely coupled and the job items are durably stored.\nWhich design should the solutions architect use?"
    },
    "choices": {
      "kor": {
        "A": "처리해야 할 작업을 보낼 Amazon SNS 주제를 생성합니다. 프로세서 애플리케이션으로 구성된 Amazon 머신 이미지(AMI)를 생성합니다. AMI를 사용하는 시작 구성을 생성합니다. 시작 구성을 사용하여 Auto Scaling 그룹을 생성합니다. CPU 사용량에 따라 노드를 추가 및 제거하도록 Auto Scaling 그룹에 대한 조정 정책을 설정합니다.",
        "B": "처리해야 하는 작업을 보관할 Amazon SQS 대기열을 생성합니다. 프로세서 애플리케이션으로 구성된 Amazon 머신 이미지(AMI)를 생성합니다. AMI를 사용하는 시작 구성을 생성합니다. 시작 구성을 사용하여 Auto Scaling 그룹을 생성합니다. 네트워크 사용량에 따라 노드를 추가 및 제거하도록 Auto Scaling 그룹에 대한 조정 정책을 설정합니다.",
        "C": "처리해야 할 작업을 보관할 Amazon SQS 대기열을 생성합니다. 프로세서 애플리케이션으로 구성된 Amazon 머신 이미지(AMI)를 생성합니다. AMI를 사용하는 시작 템플릿을 생성합니다. 시작 템플릿을 사용하여 Auto Scaling 그룹을 생성합니다. SQS 대기열의 항목 수에 따라 노드를 추가 및 제거하도록 Auto Scaling 그룹에 대한 조정 정책을 설정합니다.",
        "D": "처리해야 할 작업을 보낼 Amazon SNS 주제를 생성합니다. 프로세서 애플리케이션으로 구성된 Amazon 머신 이미지(AMI)를 생성합니다. AMI를 사용하는 시작 템플릿을 생성합니다. 시작 템플릿을 사용하여 Auto Scaling 그룹을 생성합니다. SNS 주제에 게시된 메시지 수에 따라 노드를 추가 및 제거하도록 Auto Scaling 그룹에 대한 조정 정책을 설정합니다."
      },
      "eng": {
        "A": "Create an Amazon SNS topic to send the jobs that need to be processed. Create an Amazon Machine Image (AMI) that consists of the processor application. Create a launch configuration that uses the AMI. Create an Auto Scaling group using the launch configuration. Set the scaling policy for the Auto Scaling group to add and remove nodes based on CPU usage.",
        "B": "Create an Amazon SQS queue to hold the jobs that need to be processed. Create an Amazon Machine Image (AMI) that consists of the processor application. Create a launch configuration that uses the AMI. Create an Auto Scaling group using the launch configuration. Set the scaling policy for the Auto Scaling group to add and remove nodes based on network usage.",
        "C": "Create an Amazon SQS queue to hold the jobs that need to be processed. Create an Amazon Machine Image (AMI) that consists of the processor application. Create a launch template that uses the AMI. Create an Auto Scaling group using the launch template. Set the scaling policy for the Auto Scaling group to add and remove nodes based on the number of items in the SQS queue.",
        "D": "Create an Amazon SNS topic to send the jobs that need to be processed. Create an Amazon Machine Image (AMI) that consists of the processor application. Create a launch template that uses the AMI. Create an Auto Scaling group using the launch template. Set the scaling policy for the Auto Scaling group to add and remove nodes based on the number of messages published to the SNS topic."
      }
    },
    "category": [
      "Microservices"
    ],
    "subcategory": [
      "SQS",
      "scaling policy",
      "AMI"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/86621-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "C"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 34,
    "question": {
      "kor": "애플리케이션 개발 팀은 큰 이미지를 더 작은 압축 이미지로 변환하는 마이크로서비스를 설계하고 있습니다 사용자가 웹 인터페이스를 통해 이미지를 업로드할 때 마이크로 서비스는 이미지를 Amazon S3 버킷에 저장하고 AWS Lambda 함수로 이미지를 처리 및 압축하고 이미지를 압축된 형태로 다른 S3 버킷에 저장해야 합니다.\n솔루션 설계자는 이미지를 자동으로 처리하기 위해 내구성 있고 상태 비저장 구성 요소를 사용하는 솔루션을 설계해야 합니다.\n이러한 요구 사항을 충족하는 작업 조합은 무엇입니까? (두 가지를 선택하세요.)",
      "eng": "An application development team is designing a microservice that will convert large images to smaller, compressed images. When a user uploads an image through the web interface, the microservice should store the image in an Amazon S3 bucket, process and compress the image with an AWS Lambda function, and store the image in its compressed form in a different S3 bucket.\nA solutions architect needs to design a solution that uses durable, stateless components to process the images automatically.\nWhich combination of actions will meet these requirements? (Choose two.)"
    },
    "choices": {
      "kor": {
        "A": "Amazon Simple Queue Service(Amazon SQS) 대기열을 생성합니다. 이미지가 S3 버킷에 업로드될 때 SQS 대기열에 알림을 보내도록 S3 버킷을 구성합니다.",
        "B": "Amazon Simple Queue Service(Amazon SQS) 대기열을 호출 소스로 사용하도록 Lambda 함수를 구성합니다. SQS 메시지가 성공적으로 처리되면 대기열에서 메시지를 삭제 합니다.",
        "C": "새 업로드에 대해 S3 버킷을 모니터링하도록 Lambda 함수를 구성합니다. 업로드된 이미지가 감지되면 파일 이름을 메모리의 텍스트 파일에 쓰고 텍스트 파일을 사용하여 처리된 이미지를 추적합니다.",
        "D": "Amazon EC2 인스턴스를 시작하여 Amazon Simple Queue Service(Amazon SQS) 대기열을 모니터링합니다. 대기열에 항목이 추가되면 EC2 인스턴스의 텍스트 파일에 파일 이름을 기록하고 Lambda 함수를 호출합니다.",
        "E": "S3 버킷을 모니터링하도록 Amazon EventBridge(Amazon CloudWatch Events) 이벤트를 구성합니다. 이미지가 업로드되면 추가 처리를 위해 애플리케이션 소유자의 이메일 주소와 함께 Amazon ampl Notification Service(Amazon SNS) 주제로 알림을 보냅니다."
      },
      "eng": {
        "A": "Create an Amazon Simple Queue Service (Amazon SQS) queue. Configure the S3 bucket to send a notification to the SQS queue when an image is uploaded to the S3 bucket.",
        "B": "Configure the Lambda function to use the Amazon Simple Queue Service (Amazon SQS) queue as the invocation source. When the SQS message is successfully processed, delete the message in the queue.",
        "C": "Configure the Lambda function to monitor the S3 bucket for new uploads. When an uploaded image is detected, write the file name to a text file in memory and use the text file to keep track of the images that were processed.",
        "D": "Launch an Amazon EC2 instance to monitor an Amazon Simple Queue Service (Amazon SQS) queue. When items are added to the queue, log the file name in a text file on the EC2 instance and invoke the Lambda function.",
        "E": "Configure an Amazon EventBridge (Amazon CloudWatch Events) event to monitor the S3 bucket. When an image is uploaded, send an alert to an Amazon ample Notification Service (Amazon SNS) topic with the application owner's email address for further processing."
      }
    },
    "category": [
      "Microservices"
    ],
    "subcategory": [
      "SQS",
      "Lambda"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/85033-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "A",
      "B"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 65,
    "question": {
      "kor": "회사에는 다음으로 구성된 데이터 수집 워크플로가 있습니다.\n* 새로운 데이터 전달에 대한 알림을 위한 Amazon Simple Notification Service(Amazon SNS) 주제\n* 데이터를 처리하고 메타데이터를 기록하는 AWS Lambda 함수\n수집 워크플로가 실패하는 것을 회사에서 관찰합니다. 때때로 네트워크 연결 문제로 인해. 이러한 실패가 발생하면 회사에서 수동으로 작업을 다시 실행하지 않는 한 Lambda 함수는 해당 데이터를 수집하지 않습니다.\nLambda 함수가 미래에 모든 데이터를 수집하도록 하기 위해 솔루션 설계자는 어떤 작업 조합을 취해야 합니까? (두 가지를 선택하세요.)",
      "eng": "A company has a data ingestion workflow that consists of the following: * An Amazon Simple Notification Service (Amazon SNS) topic for notifications about new data deliveries * An AWS Lambda function to process the data and record metadata\nThe company observes that the ingestion workflow fails occasionally because of network connectivity issues. When such a failure occurs, the Lambda function does not ingest the corresponding data unless the company manually reruns the job.\nWhich combination of actions should a solutions architect take to ensure that the Lambda function ingests all data in the future? (Choose two.)"
    },
    "choices": {
      "kor": {
        "A": "여러 가용 영역에 Lambda 함수를 배포합니다.",
        "B": "Amazon Simple Queue Service(Amazon SQS) 대기열을 생성하고 SNS 주제를 구독합니다.",
        "C": "Lambda 함수에 할당된 CPU와 메모리를 늘립니다.",
        "D": "Lambda 함수에 대해 프로비저닝된 처리량을 늘립니다.",
        "E": "Amazon Simple Queue Service(Amazon SQS) 대기열에서 읽도록 Lambda 함수를 수정합니다."
      },
      "eng": {
        "A": "Deploy the Lambda function in multiple Availability Zones.",
        "B": "Create an Amazon Simple Queue Service (Amazon SQS) queue, and subscribe it to the SNS topic.",
        "C": "Increase the CPU and memory that are allocated to the Lambda function.",
        "D": "Increase provisioned throughput for the Lambda function.",
        "E": "Modify the Lambda function to read from an Amazon Simple Queue Service (Amazon SQS) queue."
      }
    },
    "category": [
      "Microservices"
    ],
    "subcategory": [
      "SQS",
      "Lambda"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/85408-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "B",
      "E"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 72,
    "question": {
      "kor": "회사에서 애플리케이션을 설계하고 있습니다. 애플리케이션은 AWS Lambda 함수를 사용하여 Amazon API Gateway를 통해 정보를 수신하고 Amazon Aurora PostgreSQL 데이터베이스에 정보를 저장합니다.\n개념 증명 단계에서 회사는 데이터베이스에 로드해야 하는 대량의 데이터를 처리하기 위해 Lambda 할당량을 크게 늘려야 합니다. 솔루션 설계자는 확장성을 개선하고 구성 노력을 최소화하기 위해 새로운 설계를 권장해야 합니다.\n이러한 요구 사항을 충족하는 솔루션은 무엇입니까?",
      "eng": "A company is designing an application. The application uses an AWS Lambda function to receive information through Amazon API Gateway and to store the information in an Amazon Aurora PostgreSQL database.\nDuring the proof-of-concept stage, the company has to increase the Lambda quotas significantly to handle the high volumes of data that the company needs to load into the database. A solutions architect must recommend a new design to improve scalability and minimize the configuration effort.\nWhich solution will meet these requirements?"
    },
    "choices": {
      "kor": {
        "A": "Lambda 함수 코드를 Amazon EC2 인스턴스에서 실행되는 Apache Tomcat 코드로 리팩터링합니다. 원시 JDBC(Java Database Connectivity) 드라이버를 사용하여 데이터베이스를 연결합니다.",
        "B": "Aurora에서 Amazon DynamoDB로 플랫폼을 변경합니다. DynamoDB Accelerator(DAX) 클러스터를 프로비저닝합니다. DAX 클라이언트 SDK를 사용하여 DAX 클러스터에서 기존 DynamoDB API 호출을 가리킵니다.",
        "C": "두 개의 Lambda 함수를 설정합니다. 정보를 수신하도록 하나의 기능을 구성합니다. 데이터베이스에 정보를 로드하도록 다른 기능을 구성합니다. Amazon Simple Notification Service(Amazon SNS)를 사용하여 Lambda 함수를 통합합니다.",
        "D": "두 개의 Lambda 함수를 설정합니다. 정보를 수신하도록 하나의 기능을 구성합니다. 데이터베이스에 정보를 로드하도록 다른 기능을 구성합니다. Amazon Simple Queue Service(Amazon SQS) 대기열을 사용하여 Lambda 함수를 통합합니다."
      },
      "eng": {
        "A": "Refactor the Lambda function code to Apache Tomcat code that runs on Amazon EC2 instances. Connect the database by using native Java Database Connectivity (JDBC) drivers.",
        "B": "Change the platform from Aurora to Amazon DynamoDB. Provision a DynamoDB Accelerator (DAX) cluster. Use the DAX client SDK to point the existing DynamoDB API calls at the DAX cluster.",
        "C": "Set up two Lambda functions. Configure one function to receive the information. Configure the other function to load the information into the database. Integrate the Lambda functions by using Amazon Simple Notification Service (Amazon SNS).",
        "D": "Set up two Lambda functions. Configure one function to receive the information. Configure the other function to load the information into the database. Integrate the Lambda functions by using an Amazon Simple Queue Service (Amazon SQS) queue."
      }
    },
    "category": [
      "Microservices"
    ],
    "subcategory": [
      "SQS",
      "Lambda"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/85197-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "D"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 80,
    "question": {
      "kor": "회사는 여러 Amazon EC 인스턴스에서 애플리케이션을 호스팅합니다. 애플리케이션은 Amazon SQS  대기열의 메시지를 처리하고 Amazon RDS 테이블에 쓰고 대기열에서 메시지를 삭제합니다. 때때로 중복 레코드가 RDS 테이블에서 발견됩니다. SQS 대기열에는 중복 메시지가 없습니다.\n솔루션 설계자는 메시지가 한 번만 처리되도록 하려면 어떻게 해야 합니까?",
      "eng": "A company hosts an application on multiple Amazon EC2 instances. The application processes messages from an Amazon SQS queue, writes to an Amazon RDS table, and deletes the message from the queue. Occasional duplicate records are found in the RDS table. The SQS queue does not contain any duplicate messages.\nWhat should a solutions architect do to ensure messages are being processed once only?"
    },
    "choices": {
      "kor": {
        "A": "CreateQueue API 호출을 사용하여 새 대기열을 만듭니다.",
        "B": "AddPermission API 호출을 사용하여 적절한 권한을 추가합니다.",
        "C": "ReceiveMessage API 호출을 사용하여 적절한 대기 시간을 설정합니다.",
        "D": "ChangeMessageVisibility API 호출을 사용하여 가시성 제한 시간을 늘립니다."
      },
      "eng": {
        "A": "Use the CreateQueue API call to create a new queue.",
        "B": "Use the AddPermission API call to add appropriate permissions.",
        "C": "Use the ReceiveMessage API call to set an appropriate wait time.",
        "D": "Use the ChangeMessageVisibility API call to increase the visibility timeout."
      }
    },
    "category": [
      "Microservices"
    ],
    "subcategory": [
      "SQS",
      "Visibility timeout"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/85583-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "D"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 81,
    "question": {
      "kor": "이미지 처리 회사에는 사용자가 이미지를 업로드하는 데 사용하는 웹 애플리케이션이 있습니다. 애플리케이션은 이미지를 Amazon S3 버킷에 업로드합니다. 회사는 객체 생성 이벤트를 Amazon Simple Queue Service(Amazon SQS) 표준 대기열에 게시하도록 S3 이벤트 알림을 설정했습니다. SQS 대기열은 이미지를 처리하고 이메일을 통해 사용자에게 결과를 보내는 AWS Lambda 함수의 이벤트 소스 역할을 합니다.\n사용자는 업로드된 모든 이미지에 대해 여러 개의 이메일 메시지를 받고 있다고 보고합니다. 솔루션 아키텍트는 SQS 메시지가 Lambda 함수를 두 번 이상 호출하여 여러 이메일 메시지가 생성되었음을 확인합니다.\n최소한의 운영 오버헤드로 이 문제를 해결하려면 솔루션 설계자가 무엇을 해야 합니까?",
      "eng": "An image-processing company has a web application that users use to upload images. The application uploads the images into an Amazon S3 bucket. The company has set up S3 event notifications to publish the object creation events to an Amazon Simple Queue Service (Amazon SQS) standard queue. The SQS queue serves as the event source for an AWS Lambda function that processes the images and sends the results to users through email.\nUsers report that they are receiving multiple email messages for every uploaded image. A solutions architect determines that SQS messages are invoking the Lambda function more than once, resulting in multiple email messages.\nWhat should the solutions architect do to resolve this issue with the LEAST operational overhead?"
    },
    "choices": {
      "kor": {
        "A": "ReceiveMessage 대기 시간을 30초로 늘려 SQS 대기열에서 긴 폴링을 설정합니다.",
        "B": "SQS 표준 대기열을 SQS FIFO 대기열로 변경합니다. 중복 메시지를 삭제하려면 메시지 중복 제거 ID를 사용합니다.",
        "C": "SQS 대기열의 가시성 제한 시간을 기능 제한 시간과 배치 창 제한 시간의 합계보다 큰 값으로 늘립니다.",
        "D": "처리하기 전에 메시지를 읽은 직후 SQS 대기열에서 각 메시지를 삭제하도록 Lambda 함수를 수정합니다."
      },
      "eng": {
        "A": "Set up long polling in the SQS queue by increasing the ReceiveMessage wait time to 30 seconds.",
        "B": "Change the SQS standard queue to an SQS FIFO queue. Use the message deduplication ID to discard duplicate messages.",
        "C": "Increase the visibility timeout in the SQS queue to a value that is greater than the total of the function timeout and the batch window timeout.",
        "D": "Modify the Lambda function to delete each message from the SQS queue immediately after the message is read before processing."
      }
    },
    "category": [
      "Microservices"
    ],
    "subcategory": [
      "SQS",
      "Visibility timeout"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/85185-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "C"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 83,
    "question": {
      "kor": "회사에서 분산 애플리케이션을 AWS로 마이그레이션하고 있습니다. 이 애플리케이션은 다양한 워크로드를 처리합니다. 레거시 플랫폼은 여러 컴퓨팅 노드에서 작업을 조정하는 기본 서버로 구성됩니다. 회사는 복원력과 확장성을 최대화하는 솔루션으로 애플리케이션을 현대화하려고 합니다.\n솔루션 설계자는 이러한 요구 사항을 충족하기 위해 아키텍처를 어떻게 설계해야 합니까?",
      "eng": "A company is migrating a distributed application to AWS. The application serves variable workloads. The legacy platform consists of a primary server that coordinates jobs across multiple compute nodes. The company wants to modernize the application with a solution that maximizes resiliency and scalability.\nHow should a solutions architect design the architecture to meet these requirements?"
    },
    "choices": {
      "kor": {
        "A": "작업의 대상으로 Amazon Simple Queue Service(Amazon SQS) 대기열을 구성합니다. Auto Scaling 그룹에서 관리되는 Amazon EC2 인스턴스로 컴퓨팅 노드를 구현합니다. 예약된 조정을 사용하도록 EC2 Auto Scaling을 구성합니다.",
        "B": "작업의 대상으로 Amazon Simple Queue Service(Amazon SQS) 대기열을 구성합니다. Auto Scaling 그룹에서 관리되는 Amazon EC2 인스턴스로 컴퓨팅 노드를 구현합니다. 대기열 크기에 따라 EC2 Auto Scaling을 구성합니다.",
        "C": "Auto Scaling 그룹에서 관리되는 Amazon EC2 인스턴스로 기본 서버 및 컴퓨팅 노드를 구현합니다. 작업의 대상으로 AWS CloudTrail을 구성합니다. 기본 서버의 로드를 기반으로 EC2 Auto Scaling을 구성합니다.",
        "D": "Auto Scaling 그룹에서 관리되는 Amazon EC2 인스턴스로 기본 서버 및 컴퓨팅 노드를 구현합니다. 작업의 대상으로 Amazon EventBridge(Amazon CloudWatch Events)를 구성합니다. 컴퓨팅 노드의 로드를 기반으로 EC2 Auto Scaling을 구성합니다."
      },
      "eng": {
        "A": "Configure an Amazon Simple Queue Service (Amazon SQS) queue as a destination for the jobs. Implement the compute nodes with Amazon EC2 instances that are managed in an Auto Scaling group. Configure EC2 Auto Scaling to use scheduled scaling.",
        "B": "Configure an Amazon Simple Queue Service (Amazon SQS) queue as a destination for the jobs. Implement the compute nodes with Amazon EC2 instances that are managed in an Auto Scaling group. Configure EC2 Auto Scaling based on the size of the queue.",
        "C": "Implement the primary server and the compute nodes with Amazon EC2 instances that are managed in an Auto Scaling group. Configure AWS CloudTrail as a destination for the jobs. Configure EC2 Auto Scaling based on the load on the primary server.",
        "D": "Implement the primary server and the compute nodes with Amazon EC2 instances that are managed in an Auto Scaling group. Configure Amazon EventBridge (Amazon CloudWatch Events) as a destination for the jobs. Configure EC2 Auto Scaling based on the load on the compute nodes."
      }
    },
    "category": [
      "Microservices"
    ],
    "subcategory": [
      "SQS"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/84679-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "B"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 111,
    "question": {
      "kor": "한 회사가 AWS에서 전자상거래 웹 애플리케이션을 구축하고 있습니다. 애플리케이션은 새 주문에 대한 정보를 Amazon API Gateway REST API로 전송하여 처리합니다. 회사는 주문이 접수된 순서대로 처리되기를 원합니다.\n이러한 요구 사항을 충족하는 솔루션은 무엇입니까?",
      "eng": "A company is building an ecommerce web application on AWS. The application sends information about new orders to an Amazon API Gateway REST API to process. The company wants to ensure that orders are processed in the order that they are received.\nWhich solution will meet these requirements?"
    },
    "choices": {
      "kor": {
        "A": "애플리케이션이 주문을 받으면 API Gateway 통합을 사용하여 Amazon Simple Notification Service(Amazon SNS) 주제에 메시지를 게시합니다. 처리를 수행할 주제에 대한 AWS Lambda 함수를 구독합니다.",
        "B": "애플리케이션이 주문을 받으면 API Gateway 통합을 사용하여 Amazon Simple Queue Service(Amazon SQS) FIFO 대기열에 메시지를 보냅니다. 처리를 위해 AWS Lambda 함수를 호출하도록 SQS FIFO 대기열을 구성합니다.",
        "C": "애플리케이션이 주문을 처리하는 동안 API 게이트웨이 권한 부여자를 사용하여 모든 요청을 차단합니다.",
        "D": "애플리케이션이 주문을 받으면 API Gateway 통합을 사용하여 Amazon Simple Queue Service(Amazon SQS) 표준 대기열로 메시지를 보냅니다. 처리를 위해 AWS Lambda 함수를 호출하도록 SQS 표준 대기열을 구성합니다."
      },
      "eng": {
        "A": "Use an API Gateway integration to publish a message to an Amazon Simple Notification Service (Amazon SNS) topic when the application receives an order. Subscribe an AWS Lambda function to the topic to perform processing.",
        "B": "Use an API Gateway integration to send a message to an Amazon Simple Queue Service (Amazon SQS) FIFO queue when the application receives an order. Configure the SQS FIFO queue to invoke an AWS Lambda function for processing.",
        "C": "Use an API Gateway authorizer to block any requests while the application processes an order.",
        "D": "Use an API Gateway integration to send a message to an Amazon Simple Queue Service (Amazon SQS) standard queue when the application receives an order. Configure the SQS standard queue to invoke an AWS Lambda function for processing."
      }
    },
    "category": [
      "Microservices"
    ],
    "subcategory": [
      "SQS",
      "FIFO"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/84681-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "B"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 120,
    "question": {
      "kor": "회사에는 Amazon EC2 인스턴스에서 실행되는 레거시 데이터 처리 애플리케이션이 있습니다. 데이터는 순차적으로 처리되지만 결과의 순서는 중요하지 않습니다. 응용 프로그램은 모놀리식 아키텍처를 사용합니다. 회사에서 수요 증가에 맞춰 애플리케이션을 확장할 수 있는 유일한 방법은 인스턴스 크기를 늘리는 것입니다.\n이 회사의 개발자는 Amazon Elastic Container Service(Amazon ECS)에서 마이크로서비스 아키텍처를 사용하도록 애플리케이션을 다시 작성하기로 결정했습니다.\n솔루션 설계자는 마이크로서비스 간의 통신을 위해 무엇을 권장해야 합니까?",
      "eng": "A company has a legacy data processing application that runs on Amazon EC2 instances. Data is processed sequentially, but the order of results does not matter. The application uses a monolithic architecture. The only way that the company can scale the application to meet increased demand is to increase the size of the instances.\nThe company’s developers have decided to rewrite the application to use a microservices architecture on Amazon Elastic Container Service (Amazon ECS).\nWhat should a solutions architect recommend for communication between the microservices?"
    },
    "choices": {
      "kor": {
        "A": "Amazon Simple Queue Service(Amazon SQS) 대기열을 생성합니다. 데이터 생산자에 코드를 추가하고 데이터를 대기열로 보냅니다. 데이터 소비자에 코드를 추가하여 대기열의 데이터를 처리합니다.",
        "B": "Amazon Simple Notification Service(Amazon SNS) 주제를 생성합니다. 데이터 생산자에 코드를 추가하고 주제에 알림을 게시합니다. 데이터 소비자에 코드를 추가하여 주제를 구독합니다.",
        "C": "메시지를 전달할 AWS Lambda 함수를 생성합니다. 데이터 생산자에 코드를 추가하여 데이터 객체로 Lambda 함수를 호출합니다. 데이터 소비자에 코드를 추가하여 Lambda 함수에서 전달되는 데이터 객체를 수신합니다.",
        "D": "Amazon DynamoDB 테이블을 생성합니다. DynamoDB 스트림을 활성화합니다. 데이터 생산자에 코드를 추가하여 테이블에 데이터를 삽입합니다. 데이터 소비자에 코드를 추가하여 DynamoDB Streams API를 사용하여 새 테이블 항목을 감지하고 데이터를 검색합니다."
      },
      "eng": {
        "A": "Create an Amazon Simple Queue Service (Amazon SQS) queue. Add code to the data producers, and send data to the queue. Add code to the data consumers to process data from the queue.",
        "B": "Create an Amazon Simple Notification Service (Amazon SNS) topic. Add code to the data producers, and publish notifications to the topic. Add code to the data consumers to subscribe to the topic.",
        "C": "Create an AWS Lambda function to pass messages. Add code to the data producers to call the Lambda function with a data object. Add code to the data consumers to receive a data object that is passed from the Lambda function.",
        "D": "Create an Amazon DynamoDB table. Enable DynamoDB Streams. Add code to the data producers to insert data into the table. Add code to the data consumers to use the DynamoDB Streams API to detect new table entries and retrieve the data."
      }
    },
    "category": [
      "Microservices"
    ],
    "subcategory": [
      "SQS",
      "microservices architecture"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/87647-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "A"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 122,
    "question": {
      "kor": "회사는 사용자 요청을 수집하고 요청 유형에 따라 처리를 위해 적절한 마이크로 서비스에 요청을 발송하는 데 사용되는 비동기 API를 소유하고 있습니다. 이 회사는 Amazon API Gateway를 사용하여 API 프런트 엔드를 배포하고 Amazon DynamoDB를 호출하여 사용자 요청을 처리 마이크로서비스로 보내기 전에 저장하는 AWS Lambda 함수를 사용하고 있습니다.\n회사는 예산이 허용하는 한 많은 DynamoDB 처리량을 프로비저닝했지만 회사는 여전히 가용성 문제를 겪고 있으며 사용자 요청이 손실되고 있습니다.\n솔루션 설계자는 기존 사용자에게 영향을 주지 않고 이 문제를 해결하기 위해 무엇을 해야 합니까?",
      "eng": "A company owns an asynchronous API that is used to ingest user requests and, based on the request type, dispatch requests to the appropriate microservice for processing. The company is using Amazon API Gateway to deploy the API front end, and an AWS Lambda function that invokes Amazon DynamoDB to store user requests before dispatching them to the processing microservices.\nThe company provisioned as much DynamoDB throughput as its budget allows, but the company is still experiencing availability issues and is losing user requests.\nWhat should a solutions architect do to address this issue without impacting existing users?"
    },
    "choices": {
      "kor": {
        "A": "API 게이트웨이에서 서버 측 조절 제한을 사용하여 조절을 추가합니다.",
        "B": "DynamoDB Accelerator(DAX) 및 Lambda를 사용하여 DynamoDB에 대한 쓰기를 버퍼링합니다.",
        "C": "사용자 요청이 있는 테이블에 대해 DynamoDB에서 보조 인덱스를 생성합니다.",
        "D": "Amazon Simple Queue Service(Amazon SQS) 대기열과 Lambda를 사용하여 DynamoDB에 대한 쓰기를 버퍼링합니다."
      },
      "eng": {
        "A": "Add throttling on the API Gateway with server-side throttling limits.",
        "B": "Use DynamoDB Accelerator (DAX) and Lambda to buffer writes to DynamoDB.",
        "C": "Create a secondary index in DynamoDB for the table with the user requests.",
        "D": "Use the Amazon Simple Queue Service (Amazon SQS) queue and Lambda to buffer writes to DynamoDB."
      }
    },
    "category": [
      "Microservices"
    ],
    "subcategory": [
      "SQS",
      "asynchronous"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/89087-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "D"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 134,
    "question": {
      "kor": "회사에는 데이터베이스에 주문을 작성하고 지불을 처리하기 위해 서비스를 호출하는 전자 상거래 체크아웃 워크플로우가 있습니다. 사용자는 체크아웃 프로세스 중에 시간 초과를 경험하고 있습니다. 사용자가 체크아웃 양식을 다시 제출하면 동일한 원하는 거래에 대해 여러 고유 주문이 생성됩니다.\n여러 주문 생성을 방지하기 위해 솔루션 설계자는 이 워크플로우를 어떻게 리팩터링해야 합니까?",
      "eng": "A company has an ecommerce checkout workflow that writes an order to a database and calls a service to process the payment. Users are experiencing timeouts during the checkout process. When users resubmit the checkout form, multiple unique orders are created for the same desired transaction.\nHow should a solutions architect refactor this workflow to prevent the creation of multiple orders?"
    },
    "choices": {
      "kor": {
        "A": "Amazon Kinesis Data Firehose로 주문 메시지를 보내도록 웹 애플리케이션을 구성합니다. Kinesis Data Firehose에서 메시지를 검색하고 주문을 처리하도록 결제 서비스를 설정합니다.",
        "B": "로깅된 애플리케이션 경로 요청을 기반으로 AWS Lambda 함수를 호출하기 위해 AWS CloudTrail에서 규칙을 생성합니다. Lambda를 사용하여 데이터베이스를 쿼리하고 결제 서비스를 호출하고 주문 정보를 전달합니다.",
        "C": "데이터베이스에 주문을 저장합니다. 주문 번호가 포함된 메시지를 Amazon Simple Notification Service(Amazon SNS)로 보냅니다. Amazon SNS를 폴링하고 메시지를 검색하고 주문을 처리하도록 결제 서비스를 설정합니다.",
        "D": "데이터베이스에 주문을 저장합니다. 주문 번호가 포함된 메시지를 Amazon Simple Queue Service(Amazon SQS) FIFO 대기열로 보냅니다. 메시지를 검색하고 주문을 처리하도록 결제 서비스를 설정합니다. 대기열에서 메시지를 삭제합니다."
      },
      "eng": {
        "A": "Configure the web application to send an order message to Amazon Kinesis Data Firehose. Set the payment service to retrieve the message from Kinesis Data Firehose and process the order.",
        "B": "Create a rule in AWS CloudTrail to invoke an AWS Lambda function based on the logged application path request. Use Lambda to query the database, call the payment service, and pass in the order information.",
        "C": "Store the order in the database. Send a message that includes the order number to Amazon Simple Notification Service (Amazon SNS). Set the payment service to poll Amazon SNS, retrieve the message, and process the order.",
        "D": "Store the order in the database. Send a message that includes the order number to an Amazon Simple Queue Service (Amazon SQS) FIFO queue. Set the payment service to retrieve the message and process the order. Delete the message from the queue."
      }
    },
    "category": [
      "Microservices"
    ],
    "subcategory": [
      "SQS"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/95026-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "D"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 189,
    "question": {
      "kor": "회사에는 이벤트 데이터를 생성하는 서비스가 있습니다. 회사는 AWS를 사용하여 수신된 이벤트 데이터를 처리하려고 합니다. 데이터는 처리 전반에 걸쳐 유지되어야 하는 특정 순서로 기록됩니다. 회사는 운영 오버헤드를 최소화하는 솔루션을 구현하려고 합니다.\n솔루션 설계자는 이를 어떻게 달성해야 합니까?",
      "eng": "A company has a service that produces event data. The company wants to use AWS to process the event data as it is received. The data is written in a specific order that must be maintained throughout processing. The company wants to implement a solution that minimizes operational overhead.\nHow should a solutions architect accomplish this?"
    },
    "choices": {
      "kor": {
        "A": "메시지를 보관할 Amazon Simple Queue Service(Amazon SQS) FIFO 대기열을 생성합니다. 대기열의 메시지를 처리하도록 AWS Lambda 함수를 설정합니다.",
        "B": "처리할 페이로드가 포함된 알림을 전달할 Amazon Simple Notification Service(Amazon SNS) 주제를 생성합니다. AWS Lambda 함수를 구독자로 구성합니다.",
        "C": "메시지를 보관할 Amazon Simple Queue Service(Amazon SQS) 표준 대기열을 생성합니다. 대기열의 메시지를 독립적으로 처리하도록 AWS Lambda 함수를 설정합니다.",
        "D": "처리할 페이로드가 포함된 알림을 전달할 Amazon Simple Notification Service(Amazon SNS) 주제를 생성합니다. Amazon Simple Queue Service(Amazon SQS) 대기",
        "E": "열을 구독자로 구성합니다."
      },
      "eng": {
        "A": "Create an Amazon Simple Queue Service (Amazon SQS) FIFO queue to hold messages. Set up an AWS Lambda function to process messages from the queue.",
        "B": "Create an Amazon Simple Notification Service (Amazon SNS) topic to deliver notifications containing payloads to process. Configure an AWS Lambda function as a subscriber.",
        "C": "Create an Amazon Simple Queue Service (Amazon SQS) standard queue to hold messages. Set up an AWS Lambda function to process messages from the queue independently.",
        "D": "Create an Amazon Simple Notification Service (Amazon SNS) topic to deliver notifications containing payloads to process. Configure an Amazon Simple Queue Service (Amazon SQS) queue as a subscriber."
      }
    },
    "category": [
      "Microservices"
    ],
    "subcategory": [
      "SQS"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/86784-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "A"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 190,
    "question": {
      "kor": "회사에는 처리할 페이로드가 포함된 메시지를 보내는 발신자 애플리케이션과 페이로드가 포함된 메시지를 수신하기 위한 처리 애플리케이션의 두 가지 애플리케이션이 있습니다. 회사는 두 애플리케이션 간의 메시지를 처리하기 위해 AWS 서비스를 구현하려고 합니다. 발신자 애플리케이션은 매시간 약 1,000개의 메시지를 보낼 수 있습니다. 메시지를 처리하는 데 최대 2일이 걸릴 수 있습니다. 메시지를 처리하지 못한 경우 나머지 메시지 처리에 영향을 주지 않도록 보관해야 합니다.\n어떤 솔루션이 이러한 요구 사항을 충족하고 운영상 가장 효율적입니까?",
      "eng": "A company has two applications: a sender application that sends messages with payloads to be processed and a processing application intended to receive the messages with payloads. The company wants to implement an AWS service to handle messages between the two applications. The sender application can send about 1,000 messages each hour. The messages may take up to 2 days to be processed: If the messages fail to process, they must be retained so that they do not impact the processing of any remaining messages.\nWhich solution meets these requirements and is the MOST operationally efficient?"
    },
    "choices": {
      "kor": {
        "A": "Redis 데이터베이스를 실행하는 Amazon EC2 인스턴스를 설정합니다. 인스턴스를 사용하도록 두 애플리케이션을 모두 구성합니다. 메시지를 각각 저장, 처리 및 삭제합니다.",
        "B": "Amazon Kinesis 데이터 스트림을 사용하여 발신자 애플리케이션에서 메시지를 수신합니다. 처리 애플리케이션을 Kinesis Client Library(KCL)와 통합합니다.",
        "C": "발신자 및 프로세서 애플리케이션을 Amazon Simple Queue Service(Amazon SQS) 대기열과 통합합니다. 처리에 실패한 메시지를 수집하도록 배달 못한 편지 대기열을 구성합니다.",
        "D": "처리할 알림을 수신하려면 처리 애플리케이션을 Amazon Simple Notification Service(Amazon SNS) 주제에 구독합니다. 발신자 애플리케이션을 통합하여 SNS 주제에 씁니다."
      },
      "eng": {
        "A": "Set up an Amazon EC2 instance running a Redis database. Configure both applications to use the instance. Store, process, and delete the messages, respectively.",
        "B": "Use an Amazon Kinesis data stream to receive the messages from the sender application. Integrate the processing application with the Kinesis Client Library (KCL).",
        "C": "Integrate the sender and processor applications with an Amazon Simple Queue Service (Amazon SQS) queue. Configure a dead-letter queue to collect the messages that failed to process.",
        "D": "Subscribe the processing application to an Amazon Simple Notification Service (Amazon SNS) topic to receive notifications to process. Integrate the sender application to write to the SNS topic."
      }
    },
    "category": [
      "Microservices"
    ],
    "subcategory": [
      "SQS",
      "DLQ"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/87523-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "C"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 192,
    "question": {
      "kor": "회사에는 다음 구성 요소를 포함하는 데이터 수집 워크플로가 있습니다.\n새로운 데이터 전송에 대한 알림을 수신하는 Amazon Simple Notification Service(Amazon SNS) 주제 \n데이터를 처리하고 저장하는 AWS Lambda 함수 \n네트워크 연결 문제로 인해 수집 워크플로가 때때로 실패함. 장애가 발생하면 회사에서 수동으로 작업을 다시 실행하지 않는 한 해당 데이터가 수집되지 않습니다.\n모든 알림이 최종적으로 처리되도록 하려면 솔루션 설계자가 무엇을 해야 합니까?",
      "eng": "A company has a data ingestion workflow that includes the following components:\nAn Amazon Simple Notification Service (Amazon SNS) topic that receives notifications about new data deliveries\nAn AWS Lambda function that processes and stores the data\nThe ingestion workflow occasionally fails because of network connectivity issues. When failure occurs, the corresponding data is not ingested unless the company manually reruns the job.\nWhat should a solutions architect do to ensure that all notifications are eventually processed?"
    },
    "choices": {
      "kor": {
        "A": "여러 가용 영역에 걸쳐 배포할 Lambda 함수를 구성합니다.",
        "B": "Lambda 함수의 구성을 수정하여 함수에 대한 CPU 및 메모리 할당을 늘립니다.",
        "C": "재시도 횟수와 재시도 사이의 대기 시간을 모두 늘리도록 SNS 주제의 재시도 전략을 구성합니다.",
        "D": "Amazon Simple Queue Service(Amazon SQS) 대기열을 장애 시 대상으로 구성합니다. 대기열의 메시지를 처리하도록 Lambda 함수를 수정합니다."
      },
      "eng": {
        "A": "Configure the Lambda function for deployment across multiple Availability Zones.",
        "B": "Modify the Lambda function's configuration to increase the CPU and memory allocations for the function.",
        "C": "Configure the SNS topic’s retry strategy to increase both the number of retries and the wait time between retries.",
        "D": "Configure an Amazon Simple Queue Service (Amazon SQS) queue as the on-failure destination. Modify the Lambda function to process messages in the queue."
      }
    },
    "category": [
      "Microservices"
    ],
    "subcategory": [
      "SQS",
      "Lambda"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/85424-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "D"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 204,
    "question": {
      "kor": "회사에는 여러 모니터링 장치에서 실시간 데이터를 수신하는 API가 있습니다. API는 나중에 분석할 수 있도록 이 데이터를 Amazon RDS DB 인스턴스에 저장합니다. 모니터링 장치가 API로 보내는 데이터의 양은 변동합니다. 트래픽이 많은 기간 동안 API는 종종 시간 초과 오류를 반환합니다. 로그를 검사한 후 회사는 데이터베이스가 API에서 오는 쓰기 트래픽 볼륨을 처리할 수 없음을 확인합니다. 솔루션 설계자는 데이터베이스에 대한 연결 수를 최소화하고 트래픽이 많은 기간 동안 데이터가 손실되지 않도록 해야 합니다.\n이러한 요구 사항을 충족하는 솔루션은 무엇입니까?",
      "eng": "A company has an API that receives real-time data from a fleet of monitoring devices. The API stores this data in an Amazon RDS DB instance for later analysis. The amount of data that the monitoring devices send to the API fluctuates. During periods of heavy traffic, the API often returns timeout errors.\nAfter an inspection of the logs, the company determines that the database is not capable of processing the volume of write traffic that comes from the API. A solutions architect must minimize the number of connections to the database and must ensure that data is not lost during periods of heavy traffic.\nWhich solution will meet these requirements?"
    },
    "choices": {
      "kor": {
        "A": "사용 가능한 메모리가 더 많은 인스턴스 유형으로 DB 인스턴스의 크기를 늘리십시오.",
        "B": "DB 인스턴스를 다중 AZ DB 인스턴스로 수정합니다. 모든 활성 RDS DB 인스턴스에 쓰도록 애플리케이션을 구성합니다.",
        "C": "수신 데이터를 Amazon Simple Queue Service(Amazon SQS) 대기열에 쓰도록 API를 수정합니다. Amazon SQS가 호출하는 AWS Lambda 함수를 사용하여 대기열에서 데이터베이스로 데이터를 씁니다.",
        "D": "수신 데이터를 Amazon Simple Notification Service(Amazon SNS) 주제에 쓰도록 API를 수정합니다. Amazon SNS가 호출하는 AWS Lambda 함수를 사용하여 주제에서 데이터베이스로 데이터를 씁니다."
      },
      "eng": {
        "A": "Increase the size of the DB instance to an instance type that has more available memory.",
        "B": "Modify the DB instance to be a Multi-AZ DB instance. Configure the application to write to all active RDS DB instances.",
        "C": "Modify the API to write incoming data to an Amazon Simple Queue Service (Amazon SQS) queue. Use an AWS Lambda function that Amazon SQS invokes to write data from the queue to the database.",
        "D": "Modify the API to write incoming data to an Amazon Simple Notification Service (Amazon SNS) topic. Use an AWS Lambda function that Amazon SNS invokes to write data from the topic to the database."
      }
    },
    "category": [
      "Microservices"
    ],
    "subcategory": [
      "SQS",
      "Lambda"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/95318-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "C"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 219,
    "question": {
      "kor": "회사의 주문 시스템은 클라이언트의 요청을 Amazon EC2 인스턴스로 보냅니다. EC2 인스턴스는 주문을 처리한 다음 Amazon RDS의 데이터베이스에 주문을 저장합니다. 사용자는 시스\n템이 실패하면 주문을 다시 처리해야 한다고 보고합니다. 회사는 시스템 중단이 발생할 경우 주문을 자동으로 처리할 수 있는 탄력적인 솔루션을 원합니다.\n솔루션 설계자는 이러한 요구 사항을 충족하기 위해 무엇을 해야 합니까?",
      "eng": "A company’s order system sends requests from clients to Amazon EC2 instances. The EC2 instances process the orders and then store the orders in a database on Amazon RDS. Users report that they must reprocess orders when the system fails. The company wants a resilient solution that can process orders automatically if a system outage occurs.\nWhat should a solutions architect do to meet these requirements?"
    },
    "choices": {
      "kor": {
        "A": "EC2 인스턴스를 Auto Scaling 그룹으로 이동합니다. Amazon Elastic Container Service(Amazon ECS) 작업을 대상으로 하는 Amazon EventBridge(Amazon CloudWatch Events) 규칙을 생성합니다.",
        "B": "Application Load Balancer(ALB) 뒤에 있는 Auto Scaling 그룹으로 EC2 인스턴스를 이동합니다. ALB 엔드포인트에 메시지를 보내도록 주문 시스템을 업데이트합니다.",
        "C": "EC2 인스턴스를 Auto Scaling 그룹으로 이동합니다. Amazon Simple Queue Service(Amazon SQS) 대기열로 메시지를 보내도록 주문 시스템을 구성합니다. 대기열의 메시지를 사용하도록 EC2 인스턴스를 구성합니다.",
        "D": "Amazon Simple Notification Service(Amazon SNS) 주제를 생성합니다. AWS Lambda 함수를 생성하고 함수를 SNS 주제에 구독합니다. SNS 주제에 메시지를 보내도록 주문 시스템을 구성합니다. AWS Systems Manager Run Command를 사용하여 메시지를 처리하도록 EC2 인스턴스에 명령을 보냅니다."
      },
      "eng": {
        "A": "Move the EC2 instances into an Auto Scaling group. Create an Amazon EventBridge (Amazon CloudWatch Events) rule to target an Amazon Elastic Container Service (Amazon ECS) task.",
        "B": "Move the EC2 instances into an Auto Scaling group behind an Application Load Balancer (ALB). Update the order system to send messages to the ALB endpoint.",
        "C": "Move the EC2 instances into an Auto Scaling group. Configure the order system to send messages to an Amazon Simple Queue Service (Amazon SQS) queue. Configure the EC2 instances to consume messages from the queue.",
        "D": "Create an Amazon Simple Notification Service (Amazon SNS) topic. Create an AWS Lambda function, and subscribe the function to the SNS topic. Configure the order system to send messages to the SNS topic. Send a command to the EC2 instances to process the messages by using AWS Systems Manager Run Command."
      }
    },
    "category": [
      "Microservices"
    ],
    "subcategory": [
      "SQS"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/89138-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "C"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 230,
    "question": {
      "kor": "솔루션 설계자는 회사를 위한 다중 계층 애플리케이션을 설계하고 있습니다. 애플리케이션 사용자는 모바일 장치에서 이미지를 업로드합니다. 애플리케이션은 각 이미지의 썸네일을 생성하고 이미지가 성공적으로 업로드되었음을 확인하는 메시지를 사용자에게 반환합니다.\n썸네일 생성에는 최대 60초가 소요될 수 있지만 회사는 사용자에게 원본 이미지가 수신되었음을 알리기 위해 더 빠른 응답 시간을 제공하고자 합니다. 솔루션 설계자는 서로 다른 애플리케이션 계층에 요청을 비동기식으로 전달하도록 애플리케이션을 설계해야 합니다.\n솔루션 설계자는 이러한 요구 사항을 충족하기 위해 무엇을 해야 합니까?",
      "eng": "A solutions architect is designing a multi-tier application for a company. The application's users upload images from a mobile device. The application generates a thumbnail of each image and returns a message to the user to confirm that the image was uploaded successfully.\nThe thumbnail generation can take up to 60 seconds, but the company wants to provide a faster response time to its users to notify them that the original image was received. The solutions architect must design the application to asynchronously dispatch requests to the different application tiers.\nWhat should the solutions architect do to meet these requirements?"
    },
    "choices": {
      "kor": {
        "A": "사용자 지정 AWS Lambda 함수를 작성하여 썸네일을 생성하고 사용자에게 알립니다. 이미지 업로드 프로세스를 이벤트 소스로 사용하여 Lambda 함수를 호출합니다.",
        "B": "AWS Step Functions 워크플로를 생성합니다. 애플리케이션 계층 간의 오케스트레이션을 처리하고 썸네일 생성이 완료되면 사용자에게 알리도록 Step Functions를 구성합니다.",
        "C": "Amazon Simple Queue Service(Amazon SQS) 메시지 대기열을 생성합니다. 이미지가 업로드되면 썸네일 생성을 위해 SQS 대기열에 메시지를 배치합니다. 이미지가 수신되었음을 애플리케이션 메시지를 통해 사용자에게 알립니다.",
        "D": "Amazon Simple Notification Service(Amazon SNS) 알림 주제 및 구독을 생성합니다. 애플리케이션과 함께 하나의 구독을 사용하여 이미지 업로드가 완료된 후 썸네일을 생성합니다. 섬네일 생성이 완료된 후 푸시 알림을 통해 사용자의 모바일 앱에 메시지를 보내려면 두 번째 구독을 사용합니다."
      },
      "eng": {
        "A": "Write a custom AWS Lambda function to generate the thumbnail and alert the user. Use the image upload process as an event source to invoke the Lambda function.",
        "B": "Create an AWS Step Functions workflow. Configure Step Functions to handle the orchestration between the application tiers and alert the user when thumbnail generation is complete.",
        "C": "Create an Amazon Simple Queue Service (Amazon SQS) message queue. As images are uploaded, place a message on the SQS queue for thumbnail generation. Alert the user through an application message that the image was received.",
        "D": "Create Amazon Simple Notification Service (Amazon SNS) notification topics and subscriptions. Use one subscription with the application to generate the thumbnail after the image upload is complete. Use a second subscription to message the user's mobile app by way of a push notification after thumbnail generation is complete."
      }
    },
    "category": [
      "Microservices"
    ],
    "subcategory": [
      "SQS"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/99753-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "C"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 232,
    "question": {
      "kor": "회사는 새 문서가 Amazon S3 버킷에 업로드될 때 AWS Lambda 함수를 호출하는 서버리스 애플리케이션을 배포했습니다. 애플리케이션은 Lambda 함수를 사용하여 문서를 처리합니다. 최근 마케팅 캠페인 후 회사는 애플리케이션이 많은 문서를 처리하지 않는다는 사실을 알게 되었습니다.\n솔루션 설계자는 이 애플리케이션의 아키텍처를 개선하기 위해 무엇을 해야 합니까?",
      "eng": "A company has deployed a serverless application that invokes an AWS Lambda function when new documents are uploaded to an Amazon S3 bucket. The application uses the Lambda function to process the documents. After a recent marketing campaign, the company noticed that the application did not process many of the documents.\nWhat should a solutions architect do to improve the architecture of this application?"
    },
    "choices": {
      "kor": {
        "A": "Lambda 함수의 런타임 제한 시간 값을 15분으로 설정합니다.",
        "B": "S3 버킷 복제 정책을 구성합니다. 나중에 처리할 수 있도록 S3 버킷에 문서를 준비합니다.",
        "C": "추가 Lambda 함수를 배포합니다. 두 Lambda 함수에서 문서 처리 부하를 분산합니다.",
        "D": "Amazon Simple Queue Service(Amazon SQS) 대기열을 생성합니다. 대기열에 요청을 보냅니다. 대기열을 Lambda에 대한 이벤트 소스로 구성합니다."
      },
      "eng": {
        "A": "Set the Lambda function's runtime timeout value to 15 minutes.",
        "B": "Configure an S3 bucket replication policy. Stage the documents in the S3 bucket for later processing.",
        "C": "Deploy an additional Lambda function. Load balance the processing of the documents across the two Lambda functions.",
        "D": "Create an Amazon Simple Queue Service (Amazon SQS) queue. Send the requests to the queue. Configure the queue as an event source for Lambda."
      }
    },
    "category": [
      "Microservices"
    ],
    "subcategory": [
      "SQS"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/102180-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "D"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 297,
    "question": {
      "kor": "한 회사가 AWS 클라우드에서 3계층 전자상거래 애플리케이션을 호스팅하고 있습니다. 회사는 Amazon S3에서 웹사이트를 호스팅하고 웹사이트를 판매 요청을 처리하는 API와 통합합니다. 이 회사는 ALB(Application Load Balancer) 뒤에 있는 3개의 Amazon EC2 인스턴스에서 API를 호스팅합니다. API는 판매 요청을 비동기식으로 처리하는 백엔드 작업자와 함께 정적 및 동적 프런트 엔드 콘텐츠로 구성됩니다.\n회사는 신제품 출시 이벤트 기간 동안 판매 요청 건수가 급격하게 급증할 것으로 예상하고 있다.\n모든 요청이 성공적으로 처리되도록 하려면 솔루션 설계자가 무엇을 권장해야 합니까?",
      "eng": "A company is hosting a three-tier ecommerce application in the AWS Cloud. The company hosts the website on Amazon S3 and integrates the website with an API that handles sales requests. The company hosts the API on three Amazon EC2 instances behind an Application Load Balancer (ALB). The API consists of static and dynamic front-end content along with backend workers that process sales requests asynchronously.\nThe company is expecting a significant and sudden increase in the number of sales requests during events for the launch of new products.\nWhat should a solutions architect recommend to ensure that all the requests are processed successfully?"
    },
    "choices": {
      "kor": {
        "A": "동적 콘텐츠에 대한 Amazon CloudFront 배포를 추가합니다. 트래픽 증가를 처리하기 위해 EC2 인스턴스 수를 늘립니다.",
        "B": "정적 콘텐츠에 대한 Amazon CloudFront 배포를 추가합니다. Auto Scaling 그룹에 EC2 인스턴스를 배치하여 네트워크 트래픽을 기반으로 새 인스턴스를 시작합니다.",
        "C": "동적 콘텐츠에 대한 Amazon CloudFront 배포를 추가합니다. ALB 앞에 Amazon ElastiCache 인스턴스를 추가하여 API가 처리할 트래픽을 줄입니다.",
        "D": "정적 콘텐츠에 대한 Amazon CloudFront 배포를 추가합니다. Amazon Simple Queue Service(Amazon SQS) 대기열을 추가하여 나중에 EC2 인스턴스에서 처리할 수 있도록 웹 사이트에서 요청을 수신합니다."
      },
      "eng": {
        "A": "Add an Amazon CloudFront distribution for the dynamic content. Increase the number of EC2 instances to handle the increase in traffic.",
        "B": "Add an Amazon CloudFront distribution for the static content. Place the EC2 instances in an Auto Scaling group to launch new instances based on network traffic.",
        "C": "Add an Amazon CloudFront distribution for the dynamic content. Add an Amazon ElastiCache instance in front of the ALB to reduce traffic for the API to handle.",
        "D": "Add an Amazon CloudFront distribution for the static content. Add an Amazon Simple Queue Service (Amazon SQS) queue to receive requests from the website for later processing by the EC2 instances."
      }
    },
    "category": [
      "Microservices"
    ],
    "subcategory": [
      "SQS",
      "CloudFront"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/99704-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "D"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 313,
    "question": {
      "kor": "한 병원에서 환자의 증상을 수집하는 새로운 애플리케이션을 설계하고 있습니다. 병원은 아키텍처에서 Amazon Simple Queue Service(Amazon SQS)와 Amazon Simple Notification Service(Amazon SNS)를 사용하기로 결정했습니다.\n솔루션 설계자가 인프라 디자인을 검토하고 있습니다. 저장 및 전송 중에 데이터를 암호화해야 합니다. 병원의 승인된 직원만 데이터에 액세스할 수 있어야 합니다.\n솔루션 설계자는 이러한 요구 사항을 충족하기 위해 어떤 단계 조합을 수행해야 합니까? (두 가지를 선택하세요.)",
      "eng": "A hospital is designing a new application that gathers symptoms from patients. The hospital has decided to use Amazon Simple Queue Service (Amazon SQS) and Amazon Simple Notification Service (Amazon SNS) in the architecture.\nA solutions architect is reviewing the infrastructure design. Data must be encrypted at rest and in transit. Only authorized personnel of the hospital should be able to access the data.\nWhich combination of steps should the solutions architect take to meet these requirements? (Choose two.)"
    },
    "choices": {
      "kor": {
        "A": "SQS 구성 요소에서 서버 측 암호화를 켭니다. 기본 키 정책을 업데이트하여 인증된 보안 주체 집합으로 키 사용을 제한합니다.",
        "B": "AWS Key Management Service(AWS KMS) 고객 관리 키를 사용하여 SNS 구성 요소에서 서버 측 암호화를 켭니다. 키 정책을 적용하여 인증된 보안 주체 집합으로 키 사용을 제한합니다.",
        "C": "SNS 구성 요소에서 암호화를 켭니다. 기본 키 정책을 업데이트하여 인증된 보안 주체 집합으로 키 사용을 제한합니다. TLS를 통한 암호화된 연결만 허용하도록 주제 정책에서 조건을 설정합니다.",
        "D": "AWS Key Management Service(AWS KMS) 고객 관리 키를 사용하여 SQS 구성 요소에서 서버 측 암호화를 켭니다. 키 정책을 적용하여 인증된 보안 주체 집합으로 키 사용을 제한합니다. TLS를 통한 암호화된 연결만 허용하도록 대기열 정책에서 조건을 설정합니다.",
        "E": "AWS Key Management Service(AWS KMS) 고객 관리 키를 사용하여 SQS 구성 요소에서 서버 측 암호화를 켭니다. IAM 정책을 적용하여 인증된 보안 주체 집합으로 키 사용을 제한합니다. TLS를 통한 암호화된 연결만 허용하도록 대기열 정책에서 조건을 설정합니다."
      },
      "eng": {
        "A": "Turn on server-side encryption on the SQS components. Update the default key policy to restrict key usage to a set of authorized principals.",
        "B": "Turn on server-side encryption on the SNS components by using an AWS Key Management Service (AWS KMS) customer managed key. Apply a key policy to restrict key usage to a set of authorized principals.",
        "C": "Turn on encryption on the SNS components. Update the default key policy to restrict key usage to a set of authorized principals. Set a condition in the topic policy to allow only encrypted connections over TLS.",
        "D": "Turn on server-side encryption on the SQS components by using an AWS Key Management Service (AWS KMS) customer managed key. Apply a key policy to restrict key usage to a set of authorized principals. Set a condition in the queue policy to allow only encrypted connections over TLS.",
        "E": "Turn on server-side encryption on the SQS components by using an AWS Key Management Service (AWS KMS) customer managed key. Apply an IAM policy to restrict key usage to a set of authorized principals. Set a condition in the queue policy to allow only encrypted connections over TLS."
      }
    },
    "category": [
      "Microservices"
    ],
    "subcategory": [
      "SQS",
      "SNS"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/102125-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "B",
      "D"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 405,
    "question": {
      "kor": "빠르게 성장하고 있는 음식 배달 서비스를 제공하는 회사가 있습니다. 성장으로 인해 회사의 주문 처리 시스템은 최대 트래픽 시간 동안 확장 문제를 겪고 있습니다. 현재 아키텍처에는 다음이 포함됩니다.\n* 애플리케이션에서 주문을 수집하기 위해 Amazon EC2 Auto Scaling 그룹에서 실행되는 Amazon EC2 인스턴스 그룹\n* 주문을 이행하기 위해 Amazon EC2 Auto Scaling 그룹에서 실행되는 다른 EC2 인스턴스 그룹\n주문 수집 프로세스는 빠르게 진행되지만 주문 이행 프로세스는 더 오래 걸릴 수 있습니다. 스케일링 이벤트로 인해 데이터가 손실되어서는 안 됩니다.\n솔루션 설계자는 주문 수집 프로세스와 주문 이행 프로세스가 트래픽이 가장 많은 시간에 적절하게 확장될 수 있는지 확인해야 합니다. 솔루션은 회사의 AWS 리소스 활용을 최적화해야 합니다.\n어떤 솔루션이 이러한 요구 사항을 충족합니까?",
      "eng": "A company offers a food delivery service that is growing rapidly. Because of the growth, the company’s order processing system is experiencing scaling problems during peak traffic hours. The current architecture includes the following: * A group of Amazon EC2 instances that run in an Amazon EC2 Auto Scaling group to collect orders from the application * Another group of EC2 instances that run in an Amazon EC2 Auto Scaling group to fulfill orders\nThe order collection process occurs quickly, but the order fulfillment process can take longer. Data must not be lost because of a scaling event.\nA solutions architect must ensure that the order collection process and the order fulfillment process can both scale properly during peak traffic hours. The solution must optimize utilization of the company’s AWS resources.\nWhich solution meets these requirements?"
    },
    "choices": {
      "kor": {
        "A": "Amazon CloudWatch 지표를 사용하여 Auto Scaling 그룹에 있는 각 인스턴스의 CPU를 모니터링합니다. 최대 워크로드 값에 따라 각 Auto Scaling 그룹의 최소 용량을 구성합니다.",
        "B": "Amazon CloudWatch 지표를 사용하여 Auto Scaling 그룹에 있는 각 인스턴스의 CPU를 모니터링합니다. 요청 시 추가 Auto Scaling 그룹을 생성하는 Amazon SimpleNotificationService(Amazon SNS) 주제를 호출하도록 CloudWatch 경보를 구성합니다.",
        "C": "두 개의 Amazon Simple Queue Service(Amazon SQS) 대기열을 프로비저닝합니다. 하나는 주문 수집용이고 다른 하나는 주문 이행용입니다. 각 대기열을 폴링하도록 EC2 인스턴스를 구성합니다. 대기열이 보내는 알림을 기반으로 Auto Scaling 그룹을 조정합니다.",
        "D": "2개의 Amazon Simple Queue Service(Amazon SQS) 대기열을 프로비저닝합니다. 하나는 주문 수집용이고 다른 하나는 주문 이행용입니다. 각 대기열을 폴링하도록 EC2 인스턴스를 구성합니다. 인스턴스 계산당 백로그를 기반으로 지표를 만듭니다. 이 지표를 기반으로 Auto Scaling 그룹을 조정합니다."
      },
      "eng": {
        "A": "Use Amazon CloudWatch metrics to monitor the CPU of each instance in the Auto Scaling groups. Configure each Auto Scaling group’s minimum capacity according to peak workload values.",
        "B": "Use Amazon CloudWatch metrics to monitor the CPU of each instance in the Auto Scaling groups. Configure a CloudWatch alarm to invoke an Amazon Simple Notification Service (Amazon SNS) topic that creates additional Auto Scaling groups on demand.",
        "C": "Provision two Amazon Simple Queue Service (Amazon SQS) queues: one for order collection and another for order fulfillment. Configure the EC2 instances to poll their respective queue. Scale the Auto Scaling groups based on notifications that the queues send.",
        "D": "Provision two Amazon Simple Queue Service (Amazon SQS) queues: one for order collection and another for order fulfillment. Configure the EC2 instances to poll their respective queue. Create a metric based on a backlog per instance calculation. Scale the Auto Scaling groups based on this metric."
      }
    },
    "category": [
      "Microservices"
    ],
    "subcategory": [
      "SQS"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/94992-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "D"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 410,
    "question": {
      "kor": "회사에서 Amazon 머신 이미지(AMI)를 관리하려고 합니다. 회사는 현재 AMI가 생성된 동일한 AWS 리전에 AMI를 복사합니다. 회사는 AWS API 호출을 캡처하고 회사 계정 내에서 Amazon EC2 CreateImage API 작업이 호출될 때마다 알림을 보내는 애플리케이션을 설계해야 합니다.\n최소한의 운영 오버헤드로 이러한 요구 사항을 충족하는 솔루션은 무엇입니까?",
      "eng": "A company wants to manage Amazon Machine Images (AMIs). The company currently copies AMIs to the same AWS Region where the AMIs were created.\nThe company needs to design an application that captures AWS API calls and sends alerts whenever the Amazon EC2 CreateImage API operation is called within the company’s account.\nWhich solution will meet these requirements with the LEAST operational overhead?"
    },
    "choices": {
      "kor": {
        "A": "AWS CloudTrail 로그를 쿼리하고 CreateImage API 호출이 감지되면 알림을 보내는 AWS Lambda 함수를 생성합니다.",
        "B": "업데이트된 로그가 Amazon S3로 전송될 때 발생하는 Amazon Simple Notification Service(Amazon SNS) 알림으로 AWS CloudTrail을 구성합니다. Amazon Athena를사용하여 새 테이블을 생성하고 API 호출이 감지되면 CreateImage에서 쿼리합니다.",
        "C": "CreateImage API 호출에 대한 Amazon EventBridge(Amazon CloudWatch Events) 규칙을 생성합니다. CreateImage API 호출이 감지되면 알림을 보내도록 대상을 Amazon Simple Notification Service(Amazon SNS) 주제로 구성합니다.",
        "D": "Amazon Simple Queue Service(Amazon SQS) FIFO 대기열을 AWS CloudTrail 로그의 대상으로 구성합니다. CreateImage API 호출이 감지되면 Amazon SimpleNotificationService(Amazon SNS) 주제에 알림을 보내는 AWS Lambda 함수를 생성합니다."
      },
      "eng": {
        "A": "Create an AWS Lambda function to query AWS CloudTrail logs and to send an alert when a CreateImage API call is detected.",
        "B": "Configure AWS CloudTrail with an Amazon Simple Notification Service (Amazon SNS) notification that occurs when updated logs are sent to Amazon S3. Use Amazon Athena to create a new table and to query on CreateImage when an API call is detected.",
        "C": "Create an Amazon EventBridge (Amazon CloudWatch Events) rule for the CreateImage API call. Configure the target as an Amazon Simple Notification Service (Amazon SNS) topic to send an alert when a CreateImage API call is detected.",
        "D": "Configure an Amazon Simple Queue Service (Amazon SQS) FIFO queue as a target for AWS CloudTrail logs. Create an AWS Lambda function to send an alert to an Amazon Simple Notification Service (Amazon SNS) topic when a CreateImage API call is detected."
      }
    },
    "category": [
      "Microservices"
    ],
    "subcategory": [
      "SQS"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/89086-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "C"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 470,
    "question": {
      "kor": "회사에 고객 주문을 처리하는 애플리케이션이 있습니다. 회사는 주문을 Amazon Aurora 데이터베이스에 저장하는 Amazon EC2 인스턴스에서 애플리케이션을 호스팅합니다. 때때로 트래픽이 많을 때 워크로드가 주문을 충분히 빠르게 처리하지 못합니다.\n가능한 한 빨리 데이터베이스에 주문을 안정적으로 기록하려면 솔루션 설계자가 무엇을 해야 합니까?",
      "eng": "A company has an application that processes customer orders. The company hosts the application on an Amazon EC2 instance that saves the orders to an Amazon Aurora database. Occasionally when traffic is high, the workload does not process orders fast enough.\nWhat should a solutions architect do to write the orders reliably to the database as quickly as possible?"
    },
    "choices": {
      "kor": {
        "A": "트래픽이 많을 때 EC2 인스턴스의 인스턴스 크기를 늘립니다. Amazon Simple Notification Service(Amazon SNS)에 주문을 작성합니다. SNS 주제에 데이터베이스 엔드포인트를 구독합니다.",
        "B": "Amazon Simple Queue Service(Amazon SQS) 대기열에 주문을 씁니다. Application Load Balancer 뒤의 Auto Scaling 그룹에서 EC2 인스턴스를 사용하여 SQS 대기열에서 읽고 주문을 데이터베이스로 처리합니다.",
        "C": "Amazon Simple Notification Service(Amazon SNS)에 주문을 작성합니다. SNS 주제에 데이터베이스 엔드포인트를 구독합니다. Application Load Balancer 뒤의 Auto 그룹에서 Scaling EC2 인스턴스를 사용하여 SNS 주제에서 읽습니다.",
        "D": "EC2 인스턴스가 CPU 임계값 제한에 도달하면 Amazon Simple Queue Service(Amazon SQS) 대기열에 주문을 씁니다. Application Load Balancer 뒤의 Auto Scaling 그룹에서 EC2 인스턴스의 예약된 조정을 사용하여 SQS 대기열에서 읽고 데이터베이스로 주문을 처리합니다."
      },
      "eng": {
        "A": "Increase the instance size of the EC2 instance when traffic is high. Write orders to Amazon Simple Notification Service (Amazon SNS). Subscribe the database endpoint to the SNS topic.",
        "B": "Write orders to an Amazon Simple Queue Service (Amazon SQS) queue. Use EC2 instances in an Auto Scaling group behind an Application Load Balancer to read from the SQS queue and process orders into the database.",
        "C": "Write orders to Amazon Simple Notification Service (Amazon SNS). Subscribe the database endpoint to the SNS topic. Use EC2 instances in an Auto Scaling group behind an Application Load Balancer to read from the SNS topic.",
        "D": "Write orders to an Amazon Simple Queue Service (Amazon SQS) queue when the EC2 instance reaches CPU threshold limits. Use scheduled scaling of EC2 instances in an Auto Scaling group behind an Application Load Balancer to read from the SQS queue and process orders into the database."
      }
    },
    "category": [
      "Microservices"
    ],
    "subcategory": [
      "SQS"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/109653-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "B"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 515,
    "question": {
      "kor": "금융 회사의 고객은 문자 메시지를 보내 재정 고문과의 약속을 요청합니다. Amazon EC2 인스턴스에서 실행되는 웹 애플리케이션은 약속 요청을 수락합니다. 텍스트 메시지는 웹 애플리케이션을 통해 Amazon Simple Queue Service(Amazon SQS) 대기열에 게시됩니다. EC2 인스턴스에서 실행되는 또 다른 애플리케이션은 회의 초대장과 회의 확인 이메일 메시지를 고객에게 보냅니다. 예약에 성공한 후 이 애플리케이션은 회의 정보를 Amazon DynamoDB 데이터베이스에 저장합니다.\n회사가 확장됨에 따라 고객은 회의 초대장이 도착하는 데 시간이 더 오래 걸린다고 보고합니다.\n솔루션 설계자는 이 문제를 해결하기 위해 무엇을 권장해야 합니까?",
      "eng": "The customers of a finance company request appointments with financial advisors by sending text messages. A web application that runs on Amazon EC2 instances accepts the appointment requests. The text messages are published to an Amazon Simple Queue Service (Amazon SQS) queue through the web application. Another application that runs on EC2 instances then sends meeting invitations and meeting confirmation email messages to the customers. After successful scheduling, this application stores the meeting information in an Amazon DynamoDB database.\nAs the company expands, customers report that their meeting invitations are taking longer to arrive.\nWhat should a solutions architect recommend to resolve this issue?"
    },
    "choices": {
      "kor": {
        "A": "DynamoDB 데이터베이스 앞에 DynamoDB Accelerator(DAX) 클러스터를 추가합니다.",
        "B": "약속 요청을 수락하는 웹 애플리케이션 앞에 Amazon API Gateway API를 추가합니다.",
        "C": "Amazon CloudFront 배포를 추가합니다. 오리진을 약속 요청을 수락하는 웹 애플리케이션으로 설정합니다.",
        "D": "회의 초대를 보내는 애플리케이션에 대한 Auto Scaling 그룹을 추가합니다. SQS 대기열의 깊이에 따라 확장되도록 Auto Scaling 그룹을 구성합니다."
      },
      "eng": {
        "A": "Add a DynamoDB Accelerator (DAX) cluster in front of the DynamoDB database.",
        "B": "Add an Amazon API Gateway API in front of the web application that accepts the appointment requests.",
        "C": "Add an Amazon CloudFront distribution. Set the origin as the web application that accepts the appointment requests.",
        "D": "Add an Auto Scaling group for the application that sends meeting invitations. Configure the Auto Scaling group to scale based on the depth of the SQS queue."
      }
    },
    "category": [
      "Microservices"
    ],
    "subcategory": [
      "SQS"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/89082-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "D"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 603,
    "question": {
      "kor": "개발팀이 다른 회사와 협력하여 통합 제품을 만들고 있습니다. 다른 회사는 개발 팀의 계정에 포함된 Amazon Simple Queue Service(Amazon SQS) 대기열에 액세스해야 합니다. 다른 회사는 자신의 계정 권한을 포기하지 않고 대기열을 폴링하려고 합니다.\n솔루션 설계자는 SQS 대기열에 대한 액세스를 어떻게 제공해야 합니까?",
      "eng": "A development team is collaborating with another company to create an integrated product. The other company needs to access an Amazon Simple Queue\nService (Amazon SQS) queue that is contained in the development team's account. The other company wants to poll the queue without giving up its own account permissions to do so.\nHow should a solutions architect provide access to the SQS queue?"
    },
    "choices": {
      "kor": {
        "A": "다른 회사에 SQS 대기열에 대한 액세스를 제공하는 인스턴스 프로필을 생성합니다.",
        "B": "SQS 대기열에 대한 다른 회사 액세스를 제공하는 IAM 정책을 생성합니다.",
        "C": "SQS 대기열에 대한 다른 회사 액세스를 제공하는 SQS 액세스 정책을 만듭니다.",
        "D": "다른 회사에 SQS 대기열에 대한 액세스를 제공하는 Amazon Simple 알림 서비스(Amazon SNS) 액세스 정책을 생성합니다."
      },
      "eng": {
        "A": "Create an instance profile that provides the other company access to the SQS queue.",
        "B": "Create an IAM policy that provides the other company access to the SQS queue.",
        "C": "Create an SQS access policy that provides the other company access to the SQS queue.",
        "D": "Create an Amazon Simple Notification Service (Amazon SNS) access policy that provides the other company access to the SQS queue."
      }
    },
    "category": [
      "Microservices"
    ],
    "subcategory": [
      "SQS"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/132956-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "C"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 633,
    "question": {
      "kor": "회사는 Amazon EC2 인스턴스에서 분석 소프트웨어를 실행합니다. 소프트웨어는 Amazon S3에 업로드된 데이터를 처리하기 위해 사용자의 작업 요청을 수락합니다. 일부 제출된 데이터가 처리되지 않고 있다고 사용자가 보고합니다. Amazon CloudWatch는 EC2 인스턴스의 일관된 CPU 사용률이 100% 또는 거의 100%에 가깝다고 밝혔습니다. 회사는 시스템 성능을 개선하고 사용자 부하에 따라 시스템을 확장하려고 합니다.\n솔루션 설계자는 이러한 요구 사항을 충족하기 위해 무엇을 해야 합니까?",
      "eng": "A company runs analytics software on Amazon EC2 instances. The software accepts job requests from users to process data that has been uploaded to Amazon S3. Users report that some submitted data is not being processed Amazon CloudWatch reveals that the EC2 instances have a consistent CPU utilization at or near 100%. The company wants to improve system performance and scale the system based on user load.\nWhat should a solutions architect do to meet these requirements?"
    },
    "choices": {
      "kor": {
        "A": "인스턴스의 복사본을 만듭니다. Application Load Balancer 뒤에 모든 인스턴스를 배치합니다.",
        "B": "Amazon S3용 S3 VPC 엔드포인트를 생성합니다. 엔드포인트를 참조하도록 소프트웨어를 업데이트합니다.",
        "C": "EC2 인스턴스를 중지합니다. CPU와 메모리가 더 강력한 인스턴스 유형으로 인스턴스 유형을 수정합니다. 인스턴스를 다시 시작합니다.",
        "D": "들어오는 요청을 Amazon Simple Queue Service(Amazon SQS)로 라우팅합니다. 대기열 크기에 따라 EC2 Auto Scaling 그룹을 구성합니다. 대기열에서 읽을 수 있도록 소프트웨어를 업데이트합니다."
      },
      "eng": {
        "A": "Create a copy of the instance. Place all instances behind an Application Load Balancer.",
        "B": "Create an S3 VPC endpoint for Amazon S3. Update the software to reference the endpoint.",
        "C": "Stop the EC2 instances. Modify the instance type to one with a more powerful CPU and more memory. Restart the instances.",
        "D": "Route incoming requests to Amazon Simple Queue Service (Amazon SQS). Configure an EC2 Auto Scaling group based on queue size. Update the software to read from the queue."
      }
    },
    "category": [
      "Microservices"
    ],
    "subcategory": [
      "SQS"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/95329-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "D"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 725,
    "question": {
      "kor": "한 회사는 GPS 추적기를 사용하여 수천 마리의 바다거북의 이동 패턴을 기록합니다. 추적기는 거북이가 100야드(91.4미터) 이상 이동했는지 확인하기 위해 5분마다 확인합니다. 거북이가 움직인 경우 추적기는 하나의 AWS 리전의 여러 가용 영역에 있는 3개의 Amazon EC2 인스턴스에서 실행되는 웹 애플리케이션에 새 좌표를 보냅니다.\n최근 예상치 못한 양의 추적 데이터를 처리하는 동안 웹 애플리케이션이 과부하되었습니다. 이벤트를 재생할 방법이 없어 데이터가 손실되었습니다. 솔루션 설계자는 이 문제가 다시 발생하지 않도록 방지해야 하며 운영 오버헤드가 가장 적은 솔루션이 필요합니다.\n솔루션 설계자는 이러한 요구 사항을 충족하기 위해 무엇을 해야 합니까?",
      "eng": "A company uses GPS trackers to document the migration patterns of thousands of sea turtles. The trackers check every 5 minutes to see if a turtle has moved more than 100 yards (91.4 meters). If a turtle has moved, its tracker sends the new coordinates to a web application running on three Amazon EC2 instances that are in multiple Availability Zones in one AWS Region.\nRecently, the web application was overwhelmed while processing an unexpected volume of tracker data. Data was lost with no way to replay the events. A solutions architect must prevent this problem from happening again and needs a solution with the least operational overhead.\nWhat should the solutions architect do to meet these requirements?"
    },
    "choices": {
      "kor": {
        "A": "데이터를 저장할 Amazon S3 버킷을 생성합니다. 처리를 위해 버킷에서 새 데이터를 검색하도록 애플리케이션을 구성합니다.",
        "B": "전송된 위치 좌표를 처리하기 위해 Amazon API Gateway 엔드포인트를 생성합니다. AWS Lambda 함수를 사용하여 각 항목을 동시에 처리합니다.",
        "C": "Amazon Simple Queue Service(Amazon SQS) 대기열을 생성하여 수신 데이터를 저장합니다. 처리할 새 메시지를 폴링하도록 애플리케이션을 구성합니다.",
        "D": "전송된 위치 좌표를 저장할 Amazon DynamoDB 테이블을 생성합니다. 처리할 새 데이터에 대한 테이블을 쿼리하도록 애플리케이션을 구성합니다. TTL을 사용하여 처리된 데이터를 제거합니다."
      },
      "eng": {
        "A": "Create an Amazon S3 bucket to store the data. Configure the application to scan for new data in the bucket for processing.",
        "B": "Create an Amazon API Gateway endpoint to handle transmitted location coordinates. Use an AWS Lambda function to process each item concurrently.",
        "C": "Create an Amazon Simple Queue Service (Amazon SQS) queue to store the incoming data. Configure the application to poll for new messages for processing.",
        "D": "Create an Amazon DynamoDB table to store transmitted location coordinates. Configure the application to query the table for new data for processing. Use TTL to remove data that has been processed."
      }
    },
    "category": [
      "Microservices"
    ],
    "subcategory": [
      "SQS"
    ],
    "rote_memorization": false,
    "answer": [
      "C"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 728,
    "question": {
      "kor": "솔루션 설계자는 은행에 대한 신용 카드 데이터 유효성 검사 요청을 처리하기 위해 비동기식 애플리케이션을 설계하고 있습니다. 애플리케이션은 안전해야 하며 각 요청을 한 번 이상 처리할 수 있어야 합니다.\n이러한 요구 사항을 가장 비용 효율적으로 충족하는 솔루션은 무엇입니까?",
      "eng": "A solutions architect is designing an asynchronous application to process credit card data validation requests for a bank. The application must be secure and be able to process each request at least once.\nWhich solution will meet these requirements MOST cost-effectively?"
    },
    "choices": {
      "kor": {
        "A": "AWS Lambda 이벤트 소스 매핑을 사용합니다. Amazon Simple Queue Service(Amazon SQS) 표준 대기열을 이벤트 소스로 설정합니다. 암호화에 AWS Key Management Service(SSE-KMS)를 사용합니다. Lambda 실행 역할에 대한 kms:Decrypt 권한을 추가합니다.",
        "B": "AWS Lambda 이벤트 소스 매핑을 사용합니다. Amazon Simple Queue Service(Amazon SQS) FIFO 대기열을 이벤트 소스로 사용합니다. 암호화에 SQS 관리형 암호화 키(SSE-SQS)를 사용합니다. Lambda 함수에 대한 암호화 키 호출 권한을 추가합니다.",
        "C": "AWS Lambda 이벤트 소스 매핑을 사용합니다. Amazon Simple Queue Service(Amazon SQS) FIFO 대기열을 이벤트 소스로 설정합니다. AWS KMS 키(SSE-KMS)를 사용합니다. Lambda 실행 역할에 대한 kms:Decrypt 권한을 추가합니다.",
        "D": "AWS Lambda 이벤트 소스 매핑을 사용합니다. Amazon Simple Queue Service(Amazon SQS) 표준 대기열을 이벤트 소스로 설정합니다. 암호화에 AWS KMS 키(SSE-KMS)를 사용합니다. Lambda 함수에 대한 암호화 키 호출 권한을 추가합니다."
      },
      "eng": {
        "A": "Use AWS Lambda event source mapping. Set Amazon Simple Queue Service (Amazon SQS) standard queues as the event source. Use AWS Key Management Service (SSE-KMS) for encryption. Add the kms:Decrypt permission for the Lambda execution role.",
        "B": "Use AWS Lambda event source mapping. Use Amazon Simple Queue Service (Amazon SQS) FIFO queues as the event source. Use SQS managed encryption keys (SSE-SQS) for encryption. Add the encryption key invocation permission for the Lambda function.",
        "C": "Use the AWS Lambda event source mapping. Set Amazon Simple Queue Service (Amazon SQS) FIFO queues as the event source. Use AWS KMS keys (SSE-KMS). Add the kms:Decrypt permission for the Lambda execution role.",
        "D": "Use the AWS Lambda event source mapping. Set Amazon Simple Queue Service (Amazon SQS) standard queues as the event source. Use AWS KMS keys (SSE-KMS) for encryption. Add the encryption key invocation permission for the Lambda function."
      }
    },
    "category": [
      "Microservices"
    ],
    "subcategory": [
      "SQS"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/109513-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "A"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 761,
    "question": {
      "kor": "한 회사가 AWS 클라우드에 웹 애플리케이션을 보유하고 있으며 거래 데이터를 실시간으로 수집하려고 합니다. 회사에서는 데이터 중복을 방지하고 인프라 관리를 원하지 않습니다. 회사는 데이터가 수집된 후 해당 데이터에 대해 추가 처리를 수행하려고 합니다.\n어떤 솔루션이 이러한 요구 사항을 충족합니까?",
      "eng": "A company has a web application in the AWS Cloud and wants to collect transaction data in real time. The company wants to prevent data duplication and does not want to manage infrastructure. The company wants to perform additional processing on the data after the data is collected.\nWhich solution will meet these requirements?"
    },
    "choices": {
      "kor": {
        "A": "Amazon Simple Queue Service(Amazon SQS) FIFO 대기열을 구성합니다. 데이터를 처리하기 위해 FIFO 대기열에 대한 이벤트 소스 매핑으로 AWS Lambda 함수를 구성 합니다.",
        "B": "Amazon Simple Queue Service(Amazon SQS) FIFO 대기열을 구성합니다. AWS Batch 작업을 사용하여 대기열에서 중복 데이터를 제거합니다. 데이터를 처리하도록 AWS Lambda 함수를 구성합니다.",
        "C": "Amazon Kinesis Data Streams를 사용하여 수신 트랜잭션 데이터를 중복 데이터를 제거하는 AWS Batch 작업으로 보냅니다. 데이터를 처리하기 위해 사용자 지정 스크립트를 실행하는 Amazon EC2 인스턴스를 시작합니다.",
        "D": "중복 데이터를 제거하기 위해 들어오는 트랜잭션 데이터를 AWS Lambda 함수로 보내도록 AWS Step Functions 상태 머신을 설정합니다. 데이터를 처리하기 위해 사용자 지정 스크립트를 실행하는 Amazon EC2 인스턴스를 시작합니다."
      },
      "eng": {
        "A": "Configure an Amazon Simple Queue Service (Amazon SQS) FIFO queue. Configure an AWS Lambda function with an event source mapping for the FIFO queue to process the data.",
        "B": "Configure an Amazon Simple Queue Service (Amazon SQS) FIFO queue. Use an AWS Batch job to remove duplicate data from the queue. Configure an AWS Lambda function to process the data.",
        "C": "Use Amazon Kinesis Data Streams to send the incoming transaction data to an AWS Batch job that removes duplicate data. Launch an Amazon EC2 instance that runs a custom script to process the data.",
        "D": "Set up an AWS Step Functions state machine to send incoming transaction data to an AWS Lambda function to remove duplicate data. Launch an Amazon EC2 instance that runs a custom script to process the data."
      }
    },
    "category": [
      "Microservices"
    ],
    "subcategory": [
      "SQS"
    ],
    "rote_memorization": false,
    "answer": [
      "A"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 790,
    "question": {
      "kor": "회사에는 Amazon Simple Queue Service(Amazon SQS)를 사용하여 메시지를 구문 분석하는 Java 애플리케이션이 있습니다. 애플리케이션은 크기가 256KB보다 큰 메시지를 구문 분석할 수 없습니다. 회사는 응용 프로그램이 50MB만큼 큰 메시지를 구문 분석할 수 있는 기능을 제공하는 솔루션을 구현하려고 합니다.\n코드를 가장 적게 변경하여 이러한 요구 사항을 충족하는 솔루션은 무엇입니까?",
      "eng": "A company has a Java application that uses Amazon Simple Queue Service (Amazon SQS) to parse messages. The application cannot parse messages that are larger than 256 KB in size. The company wants to implement a solution to give the application the ability to parse messages as large as 50 MB.\nWhich solution will meet these requirements with the FEWEST changes to the code?"
    },
    "choices": {
      "kor": {
        "A": "Java용 Amazon SQS 확장 클라이언트 라이브러리를 사용하여 Amazon S3에서 256KB보다 큰 메시지를 호스팅합니다.",
        "B": "Amazon SQS 대신 Amazon EventBridge를 사용하여 애플리케이션에서 큰 메시지를 게시합니다.",
        "C": "256KB보다 큰 메시지를 처리하도록 Amazon SQS의 제한을 변경합니다.",
        "D": "Amazon Elastic File System(Amazon EFS)에 256KB보다 큰 메시지를 저장합니다. 메시지에서 이 위치를 참조하도록 Amazon SQS를 구성합니다."
      },
      "eng": {
        "A": "Use the Amazon SQS Extended Client Library for Java to host messages that are larger than 256 KB in Amazon S3.",
        "B": "Use Amazon EventBridge to post large messages from the application instead of Amazon SQS.",
        "C": "Change the limit in Amazon SQS to handle messages that are larger than 256 KB.",
        "D": "Store messages that are larger than 256 KB in Amazon Elastic File System (Amazon EFS). Configure Amazon SQS to reference this location in the messages."
      }
    },
    "category": [
      "Microservices"
    ],
    "subcategory": [
      "SQS",
      "Amazon SQS Extended Client Library for Java"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/100202-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "A"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 810,
    "question": {
      "kor": "전자상거래 회사는 온프레미스 웨어하우스 솔루션과 통합된 AWS 클라우드에서 애플리케이션을 실행합니다. 이 회사는 Amazon Simple Notification Service(Amazon SNS)를 사용하여 주문 메시지를 온프레미스 HTTPS 엔드포인트로 보내 창고 애플리케이션이 주문을 처리할 수 있도록 합니다. 로컬 데이터 센터 팀에서 일부 주문 메시지가 수신되지 않은 것을 감지했습니다.\n솔루션 설계자는 전달되지 않은 메시지를 보관하고 최대 14일 동안 메시지를 분석해야 합니다.\n최소한의 개발 노력으로 이러한 요구 사항을 충족하는 솔루션은 무엇입니까?",
      "eng": "An ecommerce company runs an application in the AWS Cloud that is integrated with an on-premises warehouse solution. The company uses Amazon Simple Notification Service (Amazon SNS) to send order messages to an on-premises HTTPS endpoint so the warehouse application can process the orders. The local data center team has detected that some of the order messages were not received.\nA solutions architect needs to retain messages that are not delivered and analyze the messages for up to 14 days.\nWhich solution will meet these requirements with the LEAST development effort?"
    },
    "choices": {
      "kor": {
        "A": "보존 기간이 14일인 Amazon Kinesis Data Stream 대상이 있는 Amazon SNS 배달 못한 편지 대기열을 구성합니다.",
        "B": "애플리케이션과 Amazon SNS 사이에 보존 기간이 14일인 Amazon Simple Queue Service(Amazon SQS) 대기열을 추가합니다.",
        "C": "보존 기간이 14일인 Amazon Simple Queue Service(Amazon SQS) 대상이 있는 Amazon SNS 데드 레터 대기열을 구성합니다.",
        "D": "보존 기간이 14일로 설정된 TTL 속성이 있는 Amazon DynamoDB 대상이 있는 Amazon SNS 데드 레터 대기열을 구성합니다."
      },
      "eng": {
        "A": "Configure an Amazon SNS dead letter queue that has an Amazon Kinesis Data Stream target with a retention period of 14 days.",
        "B": "Add an Amazon Simple Queue Service (Amazon SQS) queue with a retention period of 14 days between the application and Amazon SNS.",
        "C": "Configure an Amazon SNS dead letter queue that has an Amazon Simple Queue Service (Amazon SQS) target with a retention period of 14 days.",
        "D": "Configure an Amazon SNS dead letter queue that has an Amazon DynamoDB target with a TTL attribute set for a retention period of 14 days."
      }
    },
    "category": [
      "Microservices"
    ],
    "subcategory": [
      "SQS",
      "DLQ"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/109637-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "C"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 860,
    "question": {
      "kor": "개발 팀은 AWS Lambda 기능을 사용하는 이벤트 기반 애플리케이션을 만들고 있습니다. Amazon S3 버킷에 파일이 추가되면 이벤트가 생성됩니다. 개발 팀은 현재 Amazon S3의 이벤\n트 대상으로 구성된 Amazon Simple 알림 서비스(Amazon SNS)를 보유하고 있습니다.\n확장 가능한 방식으로 Amazon S3의 이벤트를 처리하려면 솔루션 아키텍트가 무엇을 해야 합니까?",
      "eng": "A development team is creating an event-based application that uses AWS Lambda functions. Events will be generated when files are added to an Amazon S3 bucket. The development team currently has Amazon Simple Notification Service (Amazon SNS) configured as the event target from Amazon S3.\nWhat should a solutions architect do to process the events from Amazon S3 in a scalable way?"
    },
    "choices": {
      "kor": {
        "A": "이벤트가 Lambda에서 실행되기 전에 Amazon Elastic Container Service(Amazon ECS)에서 이벤트를 처리하는 SNS 구독을 생성합니다.",
        "B": "이벤트가 Lambda에서 실행되기 전에 Amazon Elastic Kubernetes Service(Amazon EKS)에서 이벤트를 처리하는 SNS 구독을 생성합니다.",
        "C": "이벤트를 Amazon Simple Queue Service(Amazon SQS)로 보내는 SNS 구독을 생성합니다. Lambda 함수를 트리거하도록 SOS 대기열을 구성합니다.",
        "D": "이벤트를 AWS Server Migration Service(AWS SMS)로 보내는 SNS 구독을 생성합니다. SMS 이벤트에서 폴링하도록 Lambda 함수를 구성합니다."
      },
      "eng": {
        "A": "Create an SNS subscription that processes the event in Amazon Elastic Container Service (Amazon ECS) before the event runs in Lambda.",
        "B": "Create an SNS subscription that processes the event in Amazon Elastic Kubernetes Service (Amazon EKS) before the event runs in Lambda",
        "C": "Create an SNS subscription that sends the event to Amazon Simple Queue Service (Amazon SQS). Configure the SOS queue to trigger a Lambda function.",
        "D": "Create an SNS subscription that sends the event to AWS Server Migration Service (AWS SMS). Configure the Lambda function to poll from the SMS event."
      }
    },
    "category": [
      "Microservices"
    ],
    "subcategory": [
      "SQS",
      "SNS"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/125546-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "C"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 903,
    "question": {
      "kor": "한 회사가 서버리스 아키텍처를 사용하는 새로운 애플리케이션을 구축하고 있습니다. 아키텍처는 수신 요청을 관리하기 위한 Amazon API Gateway REST API와 AWS Lambda 함수로 구성됩니다.\n회사는 처리를 위해 API Gateway REST API에서 받은 메시지를 여러 대상 Lambda 함수로 보낼 수 있는 서비스를 추가하려고 합니다. 서비스는 대상 Lambda 함수에 필요한 메시지만 수신할 수 있는 기능을 제공하는 메시지 필터링을 제공해야 합니다.\n최소한의 운영 오버헤드로 이러한 요구 사항을 충족하는 솔루션은 무엇입니까?",
      "eng": "A company is building a new application that uses serverless architecture. The architecture will consist of an Amazon API Gateway REST API and AWS Lambda functions to manage incoming requests.\nThe company wants to add a service that can send messages received from the API Gateway REST API to multiple target Lambda functions for processing.\nThe service must offer message filtering that gives the target Lambda functions the ability to receive only the messages the functions need.\nWhich solution will meet these requirements with the LEAST operational overhead?"
    },
    "choices": {
      "kor": {
        "A": "API Gateway REST API의 요청을 Amazon Simple Notification Service(Amazon SNS) 주제로 보냅니다. Amazon Simple Queue Service(Amazon SQS) 대기열을 SNS 주제에 등록합니다. 다양한 SQS 대기열을 폴링하도록 대상 Lambda 함수를 구성합니다.",
        "B": "API Gateway REST API의 요청을 Amazon EventBridge로 보냅니다. 대상 Lambda 함수를 호출하도록 EventBridge를 구성합니다.",
        "C": "의 요청을 용 API Gateway REST API Apache Kafka Amazon Managed Streaming(Amazon MSK)으로 보냅니다. 대상 Lambda 함수에 메시지를 게시하도록 Amazon MSK를 구성합니다.",
        "D": "API Gateway REST API의 요청을 여러 Amazon Simple Queue Service(Amazon SQS) 대기열로 보냅니다. 다양한 SQS 대기열을 폴링하도록 대상 Lambda 함수를 구성 합니다."
      },
      "eng": {
        "A": "Send the requests from the API Gateway REST API to an Amazon Simple Notification Service (Amazon SNS) topic. Subscribe Amazon Simple Queue Service (Amazon SQS) queues to the SNS topic. Configure the target Lambda functions to poll the different SQS queues.",
        "B": "Send the requests from the API Gateway REST API to Amazon EventBridge. Configure EventBridge to invoke the target Lambda functions.",
        "C": "Send the requests from the API Gateway REST API to Amazon Managed Streaming for Apache Kafka (Amazon MSK). Configure Amazon MSK to publish the messages to the target Lambda functions.",
        "D": "Send the requests from the API Gateway REST API to multiple Amazon Simple Queue Service (Amazon SQS) queues. Configure the target Lambda functions to poll the different SQS queues."
      }
    },
    "category": [
      "Microservices"
    ],
    "subcategory": [
      "SQS",
      "SNS"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/132929-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "A"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 920,
    "question": {
      "kor": "솔루션 아키텍트는 여러 가용 영역에 걸쳐 프라이빗 서브넷의 AWS Lambda에서 실행되는 결제 처리 애플리케이션을 설계하고 있습니다. 이 애플리케이션은 여러 Lambda 함수를 사용하고 매일 수백만 건의 트랜잭션을 처리합니다.\n아키텍처는 애플리케이션이 중복 결제를 처리하지 않도록 보장해야 합니다.\n어떤 솔루션이 이러한 요구 사항을 충족합니까?",
      "eng": "A solutions architect is designing a payment processing application that runs on AWS Lambda in private subnets across multiple Availability Zones. The application uses multiple Lambda functions and processes millions of transactions each day.\nThe architecture must ensure that the application does not process duplicate payments.\nWhich solution will meet these requirements?"
    },
    "choices": {
      "kor": {
        "A": "Lambda를 사용하여 모든 지불 금액을 검색합니다. Amazon S3 버킷에 지불 기한을 게시합니다. 기한 지불을 처리하기 위해 다른 Lambda 함수를 호출하도록 이벤트 알림으로 S3 버킷을 구성합니다.",
        "B": "Lambda를 사용하여 모든 지불 금액을 검색합니다. Amazon Simple Queue Service(Amazon SQS) 대기열에 지불 기한을 게시합니다. SQS 대기열을 폴링하고 기한 지불을 처리하도록 다른 Lambda 함수를 구성합니다.",
        "C": "Lambda를 사용하여 모든 지불 금액을 검색합니다. Amazon Simple Queue Service(Amazon SQS) FIFO 대기열에 지불 기한을 게시합니다. FIFO 대기열을 폴링하고 기한 지불을 처리하도록 다른 Lambda 함수를 구성합니다.",
        "D": "Lambda를 사용하여 모든 지불 금액을 검색합니다. Amazon DynamoDB 테이블에 지불 기한을 저장합니다. 기한 지불을 처리하기 위해 다른 Lambda 함수를 호출하도록 DynamoDB 테이블의 스트림을 구성합니다."
      },
      "eng": {
        "A": "Use Lambda to retrieve all due payments. Publish the due payments to an Amazon S3 bucket. Configure the S3 bucket with an event notification to invoke another Lambda function to process the due payments.",
        "B": "Use Lambda to retrieve all due payments. Publish the due payments to an Amazon Simple Queue Service (Amazon SQS) queue. Configure another Lambda function to poll the SQS queue and to process the due payments.",
        "C": "Use Lambda to retrieve all due payments. Publish the due payments to an Amazon Simple Queue Service (Amazon SQS) FIFO queue. Configure another Lambda function to poll the FIFO queue and to process the due payments.",
        "D": "Use Lambda to retrieve all due payments. Store the due payments in an Amazon DynamoDB table. Configure streams on the DynamoDB table to invoke another Lambda function to process the due payments."
      }
    },
    "category": [
      "Microservices"
    ],
    "subcategory": [
      "SQS"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/133021-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "C"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 957,
    "question": {
      "kor": "한 회사에서 AWS에 배포된 전자상거래 주문 처리 애플리케이션을 개선하려고 합니다. 애플리케이션은 예측할 수 없는 트래픽 급증 중에 고객 경험에 영향을 주지 않고 각 주문을 정확히 한 번만 처리해야 합니다.\n어떤 솔루션이 이러한 요구 사항을 충족합니까?",
      "eng": "A company wants to enhance its ecommerce order-processing application that is deployed on AWS. The application must process each order exactly once without affecting the customer experience during unpredictable traffic surges.\nWhich solution will meet these requirements?"
    },
    "choices": {
      "kor": {
        "A": "Amazon Simple Queue Service(Amazon SQS) FIFO 대기열을 생성합니다. 모든 주문을 SQS 대기열에 넣습니다. 주문을 처리할 대상으로 AWS Lambda 함수를 구성합니다.",
        "B": "Amazon Simple 알림 서비스(Amazon SNS) 표준 주제를 생성합니다. 모든 주문을 SNS 표준 주제에 게시합니다. 애플리케이션을 알림 대상으로 구성합니다.",
        "C": "Amazon AppFlow를 사용하여 흐름을 생성합니다. 주문을 흐름으로 보냅니다. 주문을 처리할 대상으로 AWS Lambda 함수를 구성합니다.",
        "D": "주문 요청을 추적하도록 애플리케이션에서 AWS X-Ray를 구성합니다. Amazon CloudWatch에서 주문을 가져와 주문을 처리하도록 애플리케이션을 구성합니다."
      },
      "eng": {
        "A": "Create an Amazon Simple Queue Service (Amazon SQS) FIFO queue. Put all the orders in the SQS queue. Configure an AWS Lambda function as the target to process the orders.",
        "B": "Create an Amazon Simple Notification Service (Amazon SNS) standard topic. Publish all the orders to the SNS standard topic. Configure the application as a notification target.",
        "C": "Create a flow by using Amazon AppFlow. Send the orders to the flow. Configure an AWS Lambda function as the target to process the orders.",
        "D": "Configure AWS X-Ray in the application to track the order requests. Configure the application to process the orders by pulling the orders from Amazon CloudWatch."
      }
    },
    "category": [
      "Microservices"
    ],
    "subcategory": [
      "SQS"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/138082-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "A"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  },
  {
    "idx": 962,
    "question": {
      "kor": "한 회사가 AWS에서 전자상거래 애플리케이션을 실행하고 있습니다. Amazon EC2 인스턴스는 구매를 처리하고 구매 세부 정보를 Amazon Aurora PostgreSQL DB 클러스터에 저장 합니다.\n고객은 사용량이 가장 많은 시간에 애플리케이션 시간 초과를 경험하고 있습니다. 솔루션 설계자는 애플리케이션이 최대 사용 요구 사항을 충족하도록 확장할 수 있도록 애플리케이션을 다시 설계해야 합니다.\n이러한 요구 사항을 가장 비용 효율적으로 충족하는 작업 조합은 무엇입니까? (2개를 선택하세요.)",
      "eng": "A company runs an ecommerce application on AWS. Amazon EC2 instances process purchases and store the purchase details in an Amazon Aurora PostgreSQL DB cluster.\nCustomers are experiencing application timeouts during times of peak usage. A solutions architect needs to rearchitect the application so that the application can scale to meet peak usage demands.\nWhich combination of actions will meet these requirements MOST cost-effectively? (Choose two.)"
    },
    "choices": {
      "kor": {
        "A": "처리가 완료될 때까지 구매를 재시도하도록 새 EC2 인스턴스의 Auto Scaling 그룹을 구성합니다. Amazon RDS Proxy를 사용하여 DB 클러스터에 연결하도록 애플리케이션을 업데이트합니다.",
        "B": "Aurora PostgreSQL DB 클러스터 앞에 Amazon ElastiCache 클러스터를 사용하도록 애플리케이션을 구성합니다.",
        "C": "구매 요청을 Amazon Simple Queue Service(Amazon SQS) 대기열로 보내도록 애플리케이션을 업데이트합니다. SQS 대기열에서 읽는 새 EC2 인스턴스의 Auto Scaling 그룹을 구성합니다.",
        "D": "처리가 완료될 때까지 티켓 구매를 재시도하도록 AWS Lambda 함수를 구성합니다.",
        "E": "Amazon AP를 구성하세요! 사용량 계획이 포함된 게이트웨이 REST API입니다."
      },
      "eng": {
        "A": "Configure an Auto Scaling group of new EC2 instances to retry the purchases until the processing is complete. Update the applications to connect to the DB cluster by using Amazon RDS Proxy.",
        "B": "Configure the application to use an Amazon ElastiCache cluster in front of the Aurora PostgreSQL DB cluster.",
        "C": "Update the application to send the purchase requests to an Amazon Simple Queue Service (Amazon SQS) queue. Configure an Auto Scaling group of new EC2 instances that read from the SQS queue.",
        "D": "Configure an AWS Lambda function to retry the ticket purchases until the processing is complete.",
        "E": "Configure an Amazon AP! Gateway REST API with a usage plan."
      }
    },
    "category": [
      "Microservices"
    ],
    "subcategory": [
      "SQS",
      "auto scaling",
      "EC2"
    ],
    "rote_memorization": false,
    "reference": "https://www.examtopics.com/discussions/amazon/view/139619-exam-aws-certified-solutions-architect-associate-saa-c03/",
    "answer": [
      "A",
      "C"
    ],
    "correct": 0,
    "incorrect": 0,
    "correct_students": []
  }
]