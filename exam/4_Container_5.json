[
  {
    "idx": 254,
    "oldIdx": 492,
    "question": {
      "kor": "사용자가 확장 가능한 방식으로 컨테이너를 안전하고 안정적으로 실행할 수 있는 AWS 컴퓨팅 서비스는 무엇입니까?",
      "eng": "Which AWS compute service gives users the ability to securely and reliably run containers at scale?"
    },
    "choices": {
      "kor": {
        "A": "Amazon Elastic Container Service (Amazon ECS)",
        "B": "Amazon Aurora",
        "C": "Amazon Athena",
        "D": "Amazon Polly"
      },
      "eng": {
        "A": "Amazon Elastic Container Service (Amazon ECS)",
        "B": "Amazon Aurora",
        "C": "Amazon Athena",
        "D": "Amazon Polly"
      }
    },
    "answers": [
      "A"
    ],
    "category": [
      "Container"
    ],
    "subcategory": [
      "Amazon ECS"
    ]
  },
  {
    "idx": 255,
    "oldIdx": 7,
    "question": {
      "kor": "회사는 Amazon EC2 인스턴스에서 자체 Docker 환경을 실행하고 관리하고 있습니다. 회사는 클러스터 크기 관리, 스케줄링 및 환경 유지 관리를 돕기 위한 대안을 원합니다. 이 요구 사항을 충족하는 AWS 서비스는 무엇입니까?",
      "eng": "A company is running and managing its own Docker environment on Amazon EC2 instances. The company wants an alternative to help manage cluster size, scheduling, and environment maintenance. Which AWS service meets these requirements?"
    },
    "choices": {
      "kor": {
        "A": "AWS Lambda",
        "B": "Amazon RDS",
        "C": "AWS Fargate",
        "D": "Amazon Athena"
      },
      "eng": {
        "A": "AWS Lambda",
        "B": "Amazon RDS",
        "C": "AWS Fargate",
        "D": "Amazon Athena"
      }
    },
    "answers": [
      "C"
    ],
    "category": [
      "Container"
    ],
    "subcategory": [
      "AWS Fargate"
    ]
  },
  {
    "idx": 256,
    "oldIdx": 440,
    "question": {
      "kor": "회사가 온프레미스 컨테이너 인프라를 AWS 클라우드로 마이그레이션하려고 합니다. 회사는 예기치 않은 관리 및 운영 비용을 방지하고 서버리스 아키텍처로 적응하고자 합니다. 이 요구 사항을 충족할 AWS 서비스는 무엇입니까?",
      "eng": "A company wants to migrate a company’s on-premises container infrastructure to the AWS Cloud. The company wants to prevent unplanned administration and operation cost and adapt to a serverless architecture. Which AWS service will meet these requirements?"
    },
    "choices": {
      "kor": {
        "A": "Amazon Connect",
        "B": "AWS Fargate",
        "C": "Amazon Lightsail",
        "D": "Amazon EC2"
      },
      "eng": {
        "A": "Amazon Connect",
        "B": "AWS Fargate",
        "C": "Amazon Lightsail",
        "D": "Amazon EC2"
      }
    },
    "answers": [
      "B"
    ],
    "category": [
      "Container"
    ],
    "subcategory": [
      "AWS Fargate"
    ]
  },
  {
    "idx": 257,
    "oldIdx": 552,
    "question": {
      "kor": "어떤 AWS 서비스가 컨테이너를 위한 서버리스 컴퓨팅을 제공합니까?",
      "eng": "Which AWS service provides serverless compute for use with containers?"
    },
    "choices": {
      "kor": {
        "A": "Amazon Simple Queue Service (Amazon SQS)",
        "B": "AWS Fargate",
        "C": "AWS Elastic Beanstalk",
        "D": "Amazon SageMaker"
      },
      "eng": {
        "A": "Amazon Simple Queue Service (Amazon SQS)",
        "B": "AWS Fargate",
        "C": "AWS Elastic Beanstalk",
        "D": "Amazon SageMaker"
      }
    },
    "answers": [
      "B"
    ],
    "category": [
      "Container"
    ],
    "subcategory": [
      "AWS Fargate"
    ]
  },
  {
    "idx": 258,
    "oldIdx": 590,
    "question": {
      "kor": "회사는 온라인 데이터 처리 애플리케이션을 업데이트하고자 합니다. 컨테이너 기반 서비스를 구현하여 4시간 동안 실행할 예정이며, 서버 인스턴스를 프로비저닝하거나 관리하고 싶지 않습니다. 어떤 AWS 서비스가 이 요구 사항을 충족합니까?",
      "eng": "A company wants to update its online data processing application by implementing container-based services that run for 4 hours at a time. The company does not want to provision or manage server instances. Which AWS service will meet these requirements?"
    },
    "choices": {
      "kor": {
        "A": "AWS Lambda",
        "B": "AWS Fargate",
        "C": "Amazon EC2",
        "D": "AWS Elastic Beanstalk"
      },
      "eng": {
        "A": "AWS Lambda",
        "B": "AWS Fargate",
        "C": "Amazon EC2",
        "D": "AWS Elastic Beanstalk"
      }
    },
    "answers": [
      "B"
    ],
    "category": [
      "Container"
    ],
    "subcategory": [
      "AWS Fargate"
    ]
  }
]